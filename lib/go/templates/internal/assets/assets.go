// Code generated by go-bindata. DO NOT EDIT.
// sources:
// ../../../transactions/FlowServiceAccount/get_account_creators.cdc (126B)
// ../../../transactions/FlowServiceAccount/get_account_fee.cdc (124B)
// ../../../transactions/FlowServiceAccount/get_tx_fee.cdc (120B)
// ../../../transactions/flowToken/burn_tokens.cdc (1.084kB)
// ../../../transactions/flowToken/create_forwarder.cdc (1.779kB)
// ../../../transactions/flowToken/mint_tokens.cdc (875B)
// ../../../transactions/flowToken/scripts/get_balance.cdc (451B)
// ../../../transactions/flowToken/scripts/get_supply.cdc (203B)
// ../../../transactions/flowToken/setup_account.cdc (1.147kB)
// ../../../transactions/flowToken/transfer_tokens.cdc (1.364kB)
// ../../../transactions/idTableStaking/admin/change_cut.cdc (644B)
// ../../../transactions/idTableStaking/admin/change_minimums.cdc (797B)
// ../../../transactions/idTableStaking/admin/change_payout.cdc (604B)
// ../../../transactions/idTableStaking/admin/end_epoch.cdc (959B)
// ../../../transactions/idTableStaking/admin/end_epoch_change_payout.cdc (1.032kB)
// ../../../transactions/idTableStaking/admin/end_staking.cdc (769B)
// ../../../transactions/idTableStaking/admin/move_tokens.cdc (559B)
// ../../../transactions/idTableStaking/admin/pay_rewards.cdc (567B)
// ../../../transactions/idTableStaking/admin/remove_node.cdc (627B)
// ../../../transactions/idTableStaking/admin/transfer_minter_deploy.cdc (840B)
// ../../../transactions/idTableStaking/delegation/del_request_unstaking.cdc (569B)
// ../../../transactions/idTableStaking/delegation/del_stake_new_tokens.cdc (842B)
// ../../../transactions/idTableStaking/delegation/del_stake_rewarded.cdc (575B)
// ../../../transactions/idTableStaking/delegation/del_stake_unstaked.cdc (575B)
// ../../../transactions/idTableStaking/delegation/del_withdraw_reward_tokens.cdc (850B)
// ../../../transactions/idTableStaking/delegation/del_withdraw_unstaked_tokens.cdc (850B)
// ../../../transactions/idTableStaking/delegation/get_delegator_committed.cdc (315B)
// ../../../transactions/idTableStaking/delegation/get_delegator_info.cdc (293B)
// ../../../transactions/idTableStaking/delegation/get_delegator_info_from_address.cdc (522B)
// ../../../transactions/idTableStaking/delegation/get_delegator_request.cdc (324B)
// ../../../transactions/idTableStaking/delegation/get_delegator_rewarded.cdc (313B)
// ../../../transactions/idTableStaking/delegation/get_delegator_staked.cdc (309B)
// ../../../transactions/idTableStaking/delegation/get_delegator_unstaked.cdc (313B)
// ../../../transactions/idTableStaking/delegation/get_delegator_unstaking.cdc (315B)
// ../../../transactions/idTableStaking/delegation/get_delegator_unstaking_request.cdc (324B)
// ../../../transactions/idTableStaking/delegation/register_delegator.cdc (525B)
// ../../../transactions/idTableStaking/delegation/register_many_delegators.cdc (540B)
// ../../../transactions/idTableStaking/node/register_many_nodes.cdc (1.146kB)
// ../../../transactions/idTableStaking/node/register_node.cdc (1.455kB)
// ../../../transactions/idTableStaking/node/request_unstake.cdc (549B)
// ../../../transactions/idTableStaking/node/stake_new_tokens.cdc (813B)
// ../../../transactions/idTableStaking/node/stake_rewarded_tokens.cdc (552B)
// ../../../transactions/idTableStaking/node/stake_unstaked_tokens.cdc (531B)
// ../../../transactions/idTableStaking/node/unstake_all.cdc (513B)
// ../../../transactions/idTableStaking/node/withdraw_reward_tokens.cdc (826B)
// ../../../transactions/idTableStaking/node/withdraw_unstaked_tokens.cdc (826B)
// ../../../transactions/idTableStaking/node_add_capability.cdc (789B)
// ../../../transactions/idTableStaking/scripts/get_current_table.cdc (190B)
// ../../../transactions/idTableStaking/scripts/get_cut_percentage.cdc (199B)
// ../../../transactions/idTableStaking/scripts/get_node_committed_tokens.cdc (257B)
// ../../../transactions/idTableStaking/scripts/get_node_info.cdc (234B)
// ../../../transactions/idTableStaking/scripts/get_node_info_from_address.cdc (488B)
// ../../../transactions/idTableStaking/scripts/get_node_initial_weight.cdc (245B)
// ../../../transactions/idTableStaking/scripts/get_node_networking_addr.cdc (253B)
// ../../../transactions/idTableStaking/scripts/get_node_networking_key.cdc (245B)
// ../../../transactions/idTableStaking/scripts/get_node_rewarded_tokens.cdc (258B)
// ../../../transactions/idTableStaking/scripts/get_node_role.cdc (225B)
// ../../../transactions/idTableStaking/scripts/get_node_staked_tokens.cdc (254B)
// ../../../transactions/idTableStaking/scripts/get_node_staking_key.cdc (239B)
// ../../../transactions/idTableStaking/scripts/get_node_total_commitment.cdc (235B)
// ../../../transactions/idTableStaking/scripts/get_node_total_commitment_without_delegators.cdc (238B)
// ../../../transactions/idTableStaking/scripts/get_node_type_ratio.cdc (235B)
// ../../../transactions/idTableStaking/scripts/get_node_unstaked_tokens.cdc (258B)
// ../../../transactions/idTableStaking/scripts/get_node_unstaking_request.cdc (269B)
// ../../../transactions/idTableStaking/scripts/get_node_unstaking_tokens.cdc (260B)
// ../../../transactions/idTableStaking/scripts/get_proposed_table.cdc (192B)
// ../../../transactions/idTableStaking/scripts/get_stake_requirements.cdc (241B)
// ../../../transactions/idTableStaking/scripts/get_table.cdc (184B)
// ../../../transactions/idTableStaking/scripts/get_total_staked.cdc (457B)
// ../../../transactions/idTableStaking/scripts/get_total_staked_by_type.cdc (250B)
// ../../../transactions/idTableStaking/scripts/get_weekly_payout.cdc (196B)
// ../../../transactions/inspect_field.cdc (122B)
// ../../../transactions/lockedTokens/admin/admin_create_shared_accounts.cdc (3.332kB)
// ../../../transactions/lockedTokens/admin/admin_deploy_contract.cdc (345B)
// ../../../transactions/lockedTokens/admin/admin_deposit_account_creator.cdc (879B)
// ../../../transactions/lockedTokens/admin/check_main_registration.cdc (984B)
// ../../../transactions/lockedTokens/admin/check_shared_registration.cdc (630B)
// ../../../transactions/lockedTokens/admin/custody_create_account_with_lease_account.cdc (3.084kB)
// ../../../transactions/lockedTokens/admin/custody_create_only_lease_account.cdc (3.033kB)
// ../../../transactions/lockedTokens/admin/custody_create_only_shared_account.cdc (3.145kB)
// ../../../transactions/lockedTokens/admin/custody_create_shared_accounts.cdc (3.196kB)
// ../../../transactions/lockedTokens/admin/custody_setup_account_creator.cdc (643B)
// ../../../transactions/lockedTokens/admin/deposit_locked_tokens.cdc (1.566kB)
// ../../../transactions/lockedTokens/admin/unlock_tokens.cdc (576B)
// ../../../transactions/lockedTokens/delegator/delegate_new_tokens.cdc (1.182kB)
// ../../../transactions/lockedTokens/delegator/delegate_rewarded_tokens.cdc (528B)
// ../../../transactions/lockedTokens/delegator/delegate_unstaked_tokens.cdc (520B)
// ../../../transactions/lockedTokens/delegator/get_delegator_id.cdc (405B)
// ../../../transactions/lockedTokens/delegator/get_delegator_info.cdc (1.5kB)
// ../../../transactions/lockedTokens/delegator/get_delegator_node_id.cdc (409B)
// ../../../transactions/lockedTokens/delegator/register_delegator.cdc (1.213kB)
// ../../../transactions/lockedTokens/delegator/request_unstaking.cdc (522B)
// ../../../transactions/lockedTokens/delegator/withdraw_rewarded_tokens.cdc (805B)
// ../../../transactions/lockedTokens/delegator/withdraw_rewarded_tokens_locked.cdc (528B)
// ../../../transactions/lockedTokens/delegator/withdraw_unstaked_tokens.cdc (528B)
// ../../../transactions/lockedTokens/staker/get_node_id.cdc (400B)
// ../../../transactions/lockedTokens/staker/get_staker_info.cdc (1.244kB)
// ../../../transactions/lockedTokens/staker/register_node.cdc (1.421kB)
// ../../../transactions/lockedTokens/staker/request_unstaking.cdc (522B)
// ../../../transactions/lockedTokens/staker/stake_new_tokens.cdc (1.234kB)
// ../../../transactions/lockedTokens/staker/stake_rewarded_tokens.cdc (525B)
// ../../../transactions/lockedTokens/staker/stake_unstaked_tokens.cdc (525B)
// ../../../transactions/lockedTokens/staker/unstake_all.cdc (488B)
// ../../../transactions/lockedTokens/staker/withdraw_rewarded_tokens.cdc (795B)
// ../../../transactions/lockedTokens/staker/withdraw_rewarded_tokens_locked.cdc (528B)
// ../../../transactions/lockedTokens/staker/withdraw_unstaked_tokens.cdc (528B)
// ../../../transactions/lockedTokens/user/deposit_tokens.cdc (713B)
// ../../../transactions/lockedTokens/user/get_locked_account_address.cdc (414B)
// ../../../transactions/lockedTokens/user/get_locked_account_balance.cdc (413B)
// ../../../transactions/lockedTokens/user/get_unlock_limit.cdc (404B)
// ../../../transactions/lockedTokens/user/withdraw_tokens.cdc (713B)
// ../../../transactions/stakingProxy/add_node_info.cdc (620B)
// ../../../transactions/stakingProxy/get_node_info.cdc (529B)
// ../../../transactions/stakingProxy/register_node.cdc (1.095kB)
// ../../../transactions/stakingProxy/remove_node_info.cdc (307B)
// ../../../transactions/stakingProxy/remove_staking_proxy.cdc (315B)
// ../../../transactions/stakingProxy/request_unstaking.cdc (477B)
// ../../../transactions/stakingProxy/setup_node_account.cdc (477B)
// ../../../transactions/stakingProxy/stake_new_tokens.cdc (475B)
// ../../../transactions/stakingProxy/stake_unstaked_tokens.cdc (480B)
// ../../../transactions/stakingProxy/unstake_all.cdc (441B)
// ../../../transactions/stakingProxy/withdraw_rewards.cdc (483B)
// ../../../transactions/stakingProxy/withdraw_unstaked.cdc (483B)

package assets

import (
	"bytes"
	"compress/gzip"
	"crypto/sha256"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data, name string) ([]byte, error) {
	gz, err := gzip.NewReader(strings.NewReader(data))
	if err != nil {
		return nil, fmt.Errorf("read %q: %w", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)

	if err != nil {
		return nil, fmt.Errorf("read %q: %w", name, err)
	}

	clErr := gz.Close()
	if clErr != nil {
		return nil, clErr
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes  []byte
	info   os.FileInfo
	digest [sha256.Size]byte
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _flowserviceaccountGet_account_creatorsCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xca\xcc\x2d\xc8\x2f\x2a\x51\x70\xcb\xc9\x2f\x0f\x4e\x2d\x2a\xcb\x4c\x4e\x75\x4c\x4e\xce\x2f\xcd\x2b\x51\x48\x2b\xca\xcf\x55\x30\xa8\x08\x76\x0d\x0a\xf3\x74\x76\x75\x74\x71\x09\x72\x0d\x0e\xe6\xe2\x2a\x28\x4d\x52\x48\x2b\xcd\x53\xc8\x4d\xcc\xcc\xd3\xd0\xb4\x52\x08\x75\xcb\xac\x30\x33\x51\xa8\xe6\x52\x50\x50\x50\x28\x4a\x2d\x29\x2d\xca\xc3\x62\x9a\x5e\x22\x84\x76\x2e\x4a\x4d\x2c\xc9\x2f\x2a\xd6\xcb\x4e\xad\x2c\xe6\xaa\x05\x04\x00\x00\xff\xff\x0e\xa1\x1a\x36\x7e\x00\x00\x00"

func flowserviceaccountGet_account_creatorsCdcBytes() ([]byte, error) {
	return bindataRead(
		_flowserviceaccountGet_account_creatorsCdc,
		"FlowServiceAccount/get_account_creators.cdc",
	)
}

func flowserviceaccountGet_account_creatorsCdc() (*asset, error) {
	bytes, err := flowserviceaccountGet_account_creatorsCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "FlowServiceAccount/get_account_creators.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x2d, 0xf3, 0x15, 0xf9, 0x2f, 0x15, 0x94, 0x33, 0x41, 0x80, 0xdd, 0xec, 0x88, 0x84, 0x29, 0x7c, 0xc2, 0x28, 0x83, 0x16, 0x53, 0x56, 0x7e, 0xc4, 0xf5, 0x3f, 0x9c, 0xc0, 0x3, 0x12, 0x5f, 0x45}}
	return a, nil
}

var _flowserviceaccountGet_account_feeCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xca\xcc\x2d\xc8\x2f\x2a\x51\x70\xcb\xc9\x2f\x0f\x4e\x2d\x2a\xcb\x4c\x4e\x75\x4c\x4e\xce\x2f\xcd\x2b\x51\x48\x2b\xca\xcf\x55\x30\xa8\x08\x76\x0d\x0a\xf3\x74\x76\x75\x74\x71\x09\x72\x0d\x0e\xe6\xe2\x2a\x28\x4d\x52\x48\x2b\xcd\x53\xc8\x4d\xcc\xcc\xd3\xd0\xb4\x52\x08\x75\xcb\xac\x30\x33\x51\xa8\xe6\x52\x50\x50\x50\x28\x4a\x2d\x29\x2d\xca\xc3\x62\x9a\x5e\x22\x84\x76\x2e\x4a\x4d\x2c\xc9\xcc\xcf\x73\x4b\x4d\xe5\xaa\x05\x04\x00\x00\xff\xff\xb2\x6d\x34\x37\x7c\x00\x00\x00"

func flowserviceaccountGet_account_feeCdcBytes() ([]byte, error) {
	return bindataRead(
		_flowserviceaccountGet_account_feeCdc,
		"FlowServiceAccount/get_account_fee.cdc",
	)
}

func flowserviceaccountGet_account_feeCdc() (*asset, error) {
	bytes, err := flowserviceaccountGet_account_feeCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "FlowServiceAccount/get_account_fee.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x7e, 0x6f, 0x7a, 0x97, 0x2, 0x8, 0x73, 0xd1, 0x1d, 0xc1, 0x22, 0x6c, 0x87, 0xdd, 0x30, 0x3b, 0x8f, 0xde, 0xa4, 0x79, 0x71, 0x43, 0x61, 0xb2, 0xe5, 0x8c, 0xf7, 0xe6, 0xb7, 0x67, 0x2e, 0xaa}}
	return a, nil
}

var _flowserviceaccountGet_tx_feeCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\xcc\xb1\x0a\xc2\x30\x10\x06\xe0\x3d\x4f\xf1\x8f\xba\x88\x83\x38\xb8\x15\x9b\x80\x6b\x83\xee\x31\x5c\xe1\xc0\xdc\x95\xf3\xa2\x05\xf1\xdd\x7d\x01\x5f\xe0\xe3\xb6\xa8\x39\xd2\x43\xdf\x99\xec\xc5\x95\x86\x5a\xb5\x8b\x63\x36\x6d\xd8\xaf\x39\x4e\xb7\xcb\x39\x0e\xe3\x38\xc5\x9c\x43\x58\xfa\x1d\x73\x17\xb4\xc2\xb2\xd9\x9e\x70\x4d\xbc\x1e\x0f\xf8\x04\x00\x30\xf2\x6e\xf2\x47\xdb\xb9\x15\x79\x96\xea\xac\x92\x88\xc2\xf7\x17\x00\x00\xff\xff\x7d\xde\x8a\x83\x78\x00\x00\x00"

func flowserviceaccountGet_tx_feeCdcBytes() ([]byte, error) {
	return bindataRead(
		_flowserviceaccountGet_tx_feeCdc,
		"FlowServiceAccount/get_tx_fee.cdc",
	)
}

func flowserviceaccountGet_tx_feeCdc() (*asset, error) {
	bytes, err := flowserviceaccountGet_tx_feeCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "FlowServiceAccount/get_tx_fee.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x3c, 0xe1, 0x1d, 0xb1, 0x3, 0xae, 0xe6, 0x8f, 0xff, 0xe3, 0x3, 0x1a, 0x3, 0x95, 0x3b, 0x88, 0x48, 0x19, 0xe3, 0xe8, 0xa3, 0xa3, 0x6a, 0xe4, 0x4f, 0xf4, 0xee, 0x15, 0x70, 0x19, 0xbc, 0x15}}
	return a, nil
}

var _flowtokenBurn_tokensCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x92\x41\x6f\xdb\x3e\x0c\xc5\xef\xfe\x14\xef\xdf\xc3\x1f\xc9\xa1\x76\x07\x0c\x3b\x04\xd9\xba\xb4\x4d\x86\x61\x43\x06\xac\xe9\x76\x96\x6d\x26\x16\x66\x4b\x06\x25\xcf\x29\x8a\x7e\xf7\x41\x92\xad\xda\x87\xe4\x10\x27\x26\xf9\xf8\x7b\x24\xb3\x0c\x87\x4a\x1a\x58\x16\xca\x88\xc2\x4a\xad\x20\x0d\x04\x2c\x35\x6d\x2d\x2c\xe1\xa8\xd9\xfd\x9d\xc4\x6d\x25\x6c\x92\x65\x28\x74\x57\x97\xc8\x09\x9d\xa1\x12\xf9\x33\x6c\x45\x10\x65\x23\x15\x44\x51\xe8\x4e\x59\x58\x8d\xbc\x63\x05\xab\xff\x90\x32\xae\xe8\xc8\xba\x71\x89\x92\x61\xac\x66\x2a\xf1\x4b\x74\xb5\xd3\x4b\x3c\x0b\xf9\x02\xa9\x4e\x10\x8d\x97\xe8\xc7\x2e\x02\xad\x60\xd1\x90\x25\x76\xba\xae\xd9\x84\x2a\x49\x64\xd3\x6a\xb6\xd8\x75\xea\x24\xf3\x9a\x0e\xae\x65\x68\x77\x73\xde\x3d\xed\xbf\x7c\xbd\xfb\xbe\x3d\xfc\xf8\xb6\xdd\x6f\x1e\x1e\x7e\x6e\x1f\x1f\x63\x41\xad\xfb\x59\xf2\x2c\x29\x99\xf4\x58\x04\xa4\x15\x9e\x76\xf2\xfc\xe1\xfd\x12\x2f\x49\x02\x00\x59\x16\x4c\x80\xc9\xe8\x8e\x0b\xf2\x23\x42\xa5\xeb\xd2\x04\x4e\x6f\x3f\xbc\x15\x4c\xc8\xc9\x19\x74\x46\xa9\xf4\x0a\x35\x59\xfc\x75\x12\x2b\x7c\x9e\x19\x48\xc3\x74\x62\x92\x1f\xef\x0a\xff\x47\xe8\x74\xe3\xde\x48\x63\x59\x58\xcd\x21\xb1\x65\x6a\x05\xd3\xc2\xc8\x93\x22\x5e\x61\xd3\xd9\x6a\x13\x36\x12\x99\x07\xee\xdf\xd2\x56\x25\x8b\x1e\xef\x6e\x46\xca\x71\x43\xc3\x2a\x3d\x16\xa4\xf2\xeb\x12\x27\x8a\xd5\x86\xea\x63\x1a\xa2\xeb\x6b\x84\x5e\x69\xae\x99\x75\xbf\x9e\xf0\x79\x03\x9f\x16\x4e\x75\x85\x6c\x10\xc9\x8e\x63\xdc\x87\x97\xff\x45\x55\xf7\x49\xfb\x81\x2a\x0e\x3c\x3c\x97\x33\xf4\x7b\x26\x77\x9f\x02\x4c\x47\x62\x52\x6e\xec\x7a\x7a\x83\xfe\x3b\xae\xe4\x92\x83\x90\xf6\xf1\xb2\x81\xd9\x80\x2f\x1b\xf1\x69\xcb\x99\x8f\xdb\x5b\xb4\x42\xc9\x62\x71\x75\xef\x8f\x58\x69\x8b\xa0\x7f\x99\x7a\xe4\xbd\x0a\x52\xaf\xc1\x32\x9d\xa9\xe8\x2c\xe1\x25\xea\xbb\x63\xf0\x07\xc4\x7e\xfa\xd1\x49\x5a\xf8\xb1\xec\xa9\xbf\xf3\xd1\xc5\x1b\x52\xfc\x11\xea\x52\xf7\xf0\xe8\x66\x30\xb5\xbe\x7e\xdb\xe9\x64\xd6\x25\x19\xcb\xfa\x79\x28\x1b\xb0\x5e\x13\xfc\x0b\x00\x00\xff\xff\x7a\x03\x55\x74\x3c\x04\x00\x00"

func flowtokenBurn_tokensCdcBytes() ([]byte, error) {
	return bindataRead(
		_flowtokenBurn_tokensCdc,
		"flowToken/burn_tokens.cdc",
	)
}

func flowtokenBurn_tokensCdc() (*asset, error) {
	bytes, err := flowtokenBurn_tokensCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "flowToken/burn_tokens.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xa9, 0x64, 0xb2, 0xc, 0xd1, 0x95, 0x83, 0xa1, 0xaf, 0xbe, 0x89, 0xe, 0x74, 0x45, 0xdd, 0xaf, 0x7d, 0xa0, 0x6a, 0x9a, 0x7d, 0xe2, 0x9d, 0xa4, 0xcf, 0xf9, 0x20, 0x44, 0x56, 0x5a, 0xfc, 0xd3}}
	return a, nil
}

var _flowtokenCreate_forwarderCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x54\x4d\x6f\xe3\x36\x10\xbd\xf3\x57\xcc\x5e\x5a\x3b\x70\xe4\x7e\x5e\x8c\x6c\x01\x77\x93\x2c\x82\x16\x59\x20\x49\xdb\x63\x77\x4c\x8e\x4c\x76\x69\x52\x20\x47\x56\x8d\x20\xff\xbd\x20\x29\xd3\x72\x50\xa4\x40\x7d\xb2\xc4\x99\x37\xef\xcd\x7b\xe2\xf2\xe2\x42\x88\x27\x6d\x22\x70\x40\x17\x51\xb2\xf1\x0e\x4c\x04\x04\xa6\x5d\x67\x91\x09\x5a\x1f\xd2\xe3\xe4\x9c\x35\x32\x48\xdf\x5b\x05\x1b\x82\x3e\x92\x12\xec\x21\x12\x43\xdf\x01\x3a\x40\x29\x7d\xef\x18\xd8\xa7\xe6\x01\x83\x02\x45\x9d\x8f\x86\x49\x01\xfb\x2f\xe4\x62\x3a\x43\xe7\x59\x53\x80\x40\x92\xcc\x9e\x42\x23\xc4\x5d\x0b\xe8\x0e\xde\x11\x44\x72\x2a\x4e\x8b\xd3\x9c\xf0\x75\x84\xdb\x82\x48\x01\x1e\xc6\xbe\x85\x60\x4d\xf5\x09\x06\x63\x2d\xfc\xd5\x47\xae\xc3\x59\xfb\x48\x13\xac\x54\xfe\x3b\xf6\x96\x8b\x12\x8d\x11\x36\x44\x4e\x24\x05\x18\xf3\x71\x20\x69\x3a\x43\x8e\x01\x9d\x02\xda\x99\xf4\x07\x68\x9f\xde\xe4\x26\xe3\x94\x91\xc8\x14\xc5\xa0\x8d\xd4\x99\xdd\x71\x60\x52\xa9\x8f\x03\x9b\x71\xc1\x03\x1e\x16\x60\x92\x3e\xf0\x6d\x7b\x29\x35\x1a\x07\x91\xc2\xde\x48\x82\x01\x1d\x67\x6a\x3b\xef\x0c\xfb\x00\x83\xf6\xc9\x86\x11\xd0\xb8\xad\x38\xd1\x37\xbc\x00\xc3\x20\xd1\xc1\x80\x2c\x75\xa1\x95\x8f\x22\x11\x0c\x9a\x02\x4d\x08\x80\xc4\x1d\x41\x1b\xfc\xae\x11\xe2\x91\xa9\x1b\x2b\x8b\x5b\xc5\xaa\x08\x83\x61\x5d\x1a\xaa\x8a\xb0\x12\xe2\xdb\x06\x9e\x34\xc1\x6d\xef\xb6\x66\x63\x09\x9e\x72\x85\xf4\x8e\x03\xca\xb4\x05\xa6\xd0\xa2\x24\x88\x3a\xe7\x01\x6d\x20\x54\x87\x94\x0b\x45\x9d\xf5\x07\x52\x10\xfd\x8e\x32\x29\xf1\x5d\x41\xc3\xae\xb3\x46\x62\xc2\xe3\x73\xbc\x11\x65\xd2\xdd\x88\xef\x4b\xd3\xc4\x91\x31\x5e\x63\xb1\xc6\x3d\x01\x8e\x86\xa6\xb0\x72\xce\x73\x01\x0e\x84\x4c\x4a\x00\x40\x36\x32\xb2\x0f\xa4\xc0\x38\x30\x1c\xf3\x13\x6e\xa9\x68\x47\xe8\xfa\x8d\x35\x51\x93\xaa\x59\x12\x3f\x34\x70\x9d\x89\xe4\x7d\x7e\xce\xea\x6f\xab\x27\x8d\x54\xf2\xf3\x89\x7c\x4e\xa9\x32\x6d\x4b\x61\x42\x53\xfc\xd8\xa4\xcc\x02\x82\xa3\x01\xd6\xe5\xe5\x0a\x3e\x64\x66\x19\xf6\xa8\xc7\xf9\xb0\x43\x6b\x0f\x8b\x4c\x97\x35\x39\x08\xbd\x2b\x93\x8b\x90\x3f\xab\x35\x65\xf4\xe4\xa3\x2c\x4d\x5b\x62\x36\x6e\x0b\x67\x1f\x44\xb2\xfe\x6c\x50\x09\xf0\xab\xa0\x37\xe2\x62\x29\x84\xd9\x75\x3e\x70\xf5\xbb\xd8\x9d\x01\xbe\xf9\xfb\xf6\xb7\xfb\x8f\x77\x3f\xff\x7a\xf3\xf4\xe9\x97\x9b\xfb\xf5\xf5\xf5\xc3\xcd\xe3\x63\x6d\xb0\x7e\x38\x2b\xfe\xb7\xa2\x57\xeb\xab\xb8\x9f\x1e\xfe\x58\x3f\x5c\xdf\xdd\x7f\x3c\xd6\x8b\x89\xb0\xd9\xf1\x7a\x58\xc1\x5a\xa9\x40\x31\xce\xe1\x59\x64\xb5\x5d\xa0\x0e\x03\xcd\x50\x4a\x5e\xc1\xba\x67\x3d\xae\x37\x55\xc0\xf8\xb3\xc4\x93\xec\xbc\x4f\x2b\x1a\xab\x2a\xf2\xbc\xd9\x12\x7f\xc0\x0e\x37\xc6\x1a\x3e\x5c\x7d\xf5\x7c\xa6\xbf\x39\x6e\xf2\xe5\xa7\xd9\x32\x87\x44\x2e\xdb\xa3\xde\xe3\xd9\xfc\x9d\x38\x1b\xb9\xcf\x71\xbc\xba\x7c\x2d\xba\x29\x4e\xde\xd3\x50\x2f\xb2\x59\xa5\xb7\x3a\x31\x9d\x57\xb4\xa4\xae\x89\xb8\xa7\xd9\xd5\x65\x46\x5d\x00\xfb\x15\x2c\xc7\xf4\x9e\xa8\x54\xc0\xf9\x89\x4a\xba\x70\x52\xff\x99\xc0\xb7\x54\x34\x1b\x1f\x82\x1f\xde\xda\xc1\x1c\xde\xbd\x07\x67\xec\x64\xc9\x95\x67\xef\xac\x71\x5f\xde\x18\x50\x5b\x5e\xce\x05\xa6\xb6\xff\xb5\xf8\x05\x30\x86\x2d\xf1\x7f\x6c\xa4\x8c\x7c\x11\xf0\x4f\x00\x00\x00\xff\xff\x94\x08\xa6\x25\xf3\x06\x00\x00"

func flowtokenCreate_forwarderCdcBytes() ([]byte, error) {
	return bindataRead(
		_flowtokenCreate_forwarderCdc,
		"flowToken/create_forwarder.cdc",
	)
}

func flowtokenCreate_forwarderCdc() (*asset, error) {
	bytes, err := flowtokenCreate_forwarderCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "flowToken/create_forwarder.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xd2, 0xde, 0x50, 0x91, 0xad, 0x8e, 0xd0, 0xac, 0x16, 0x6f, 0xd5, 0x34, 0x73, 0xcb, 0x96, 0xa0, 0xb8, 0x16, 0xb8, 0x23, 0x27, 0x9b, 0x5d, 0x68, 0xc0, 0x96, 0x52, 0xb2, 0xca, 0xa, 0xa6, 0xd7}}
	return a, nil
}

var _flowtokenMint_tokensCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x52\xcb\x6e\xdb\x30\x10\xbc\xeb\x2b\xb6\x3e\x04\x12\xd0\xc8\x3d\x14\x3d\x18\x4e\x02\xb5\xb1\x8b\xa2\xad\x0b\xc4\x71\xef\x14\xb5\x56\x16\xa5\x48\x61\xb9\xaa\x1d\x04\xf9\xf7\x82\x7a\xd8\x56\x12\x57\x17\x01\xe4\xcc\xec\xcc\x2c\xa9\xaa\x1d\x0b\x2c\x1b\x5b\x52\x6e\xf0\xde\xfd\x41\x0b\x5b\x76\x15\x7c\xd8\x2f\x37\xab\xaf\xdf\x3e\xff\x58\xdc\xff\xfa\xbe\x58\x65\xb7\xb7\x77\x8b\xf5\x3a\x1a\x08\xc6\xed\x46\xe0\x11\x28\x12\x56\xd6\x2b\x2d\xe4\x6c\xcc\xa8\xa9\x26\xb4\x32\x83\xac\x28\x18\xbd\x7f\x0f\xaa\x72\x4d\x38\xd8\x2c\x69\xff\xe9\x63\x02\x4f\x11\x00\x80\x41\x01\x09\xa2\x59\x51\x91\x9d\xc1\xc5\x61\x4a\xda\x9e\x90\x17\x56\xe2\x78\x0c\xbe\x43\x8d\xf4\x17\x79\x06\x17\x4f\xa3\x1c\xe9\x70\xf3\x1c\xb5\x8c\x9a\xb1\x56\x8c\xb1\xa7\xd2\x06\x78\xd6\xc8\x43\xa6\x75\x70\x32\x38\x08\x9f\x47\xb3\x4d\x8f\x36\xe0\x0a\x3a\xc2\x01\x90\xe6\x8e\xd9\xed\xe6\xe7\xec\x5d\xc7\xa1\x93\x19\x4c\xbd\x38\x56\x25\x4e\xb7\x03\xae\x85\x25\x70\x50\xba\xb9\x81\x5a\x59\xd2\xf1\x64\xdd\x8e\x00\xf2\x60\x9d\x80\x3c\x60\x97\x0d\x54\x60\x4c\x92\xe8\x0d\x77\x43\x3a\xb8\x82\x12\xa5\x0f\x72\x6c\x3b\x39\xfa\x2d\x51\xbe\xa8\x5a\xe5\x64\x48\x1e\xe3\x69\xdd\xe4\x86\xf4\xd1\xd5\x20\x94\xbc\x7b\x1d\xf1\x5c\xa3\xd7\x71\xf2\x46\x8a\x8d\x55\xb9\x09\xd6\xa1\xe3\x03\x0f\x1e\x19\xb7\xc8\x68\x35\x4e\x3a\x5e\xbf\x12\xdc\xa3\x6e\x04\x4f\xda\x0f\x6b\xad\xc8\x0a\x32\xcc\x2f\x5f\xee\x22\xd5\x8c\x4a\x70\x85\xbb\x9f\x2d\x24\x56\xc6\xb8\x1d\x16\x59\xff\x9c\xba\x67\x95\xbc\x16\x2b\x7e\xab\xc6\x48\x50\xec\xb4\xd3\xf0\x6b\x23\xf9\x58\xbd\x20\xff\xa7\xea\xb4\xc0\xda\x79\x92\x7e\xc1\xf3\xcb\x13\xf1\x13\x62\x81\x5e\xd8\x3d\xf6\xb3\xfa\xbc\xcf\xff\x02\x00\x00\xff\xff\x21\x51\x46\xd0\x6b\x03\x00\x00"

func flowtokenMint_tokensCdcBytes() ([]byte, error) {
	return bindataRead(
		_flowtokenMint_tokensCdc,
		"flowToken/mint_tokens.cdc",
	)
}

func flowtokenMint_tokensCdc() (*asset, error) {
	bytes, err := flowtokenMint_tokensCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "flowToken/mint_tokens.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xa, 0x4d, 0xb6, 0x10, 0x70, 0x12, 0x4e, 0x68, 0xb2, 0x64, 0x2a, 0x3e, 0x6, 0xeb, 0xb, 0xf6, 0x40, 0xb8, 0xe1, 0x92, 0xdb, 0x8a, 0x61, 0xda, 0x90, 0xf0, 0xe7, 0xaf, 0xb3, 0x34, 0x9a, 0xb1}}
	return a, nil
}

var _flowtokenScriptsGet_balanceCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x54\x91\xcb\x4e\xc3\x30\x10\x45\xf7\xf9\x8a\x4b\x17\x90\x6c\x12\x16\x88\x45\x45\xa9\xfa\x0a\x42\xa0\x22\xf5\xc1\xde\x49\xc6\xad\x85\x6b\x47\xce\x98\x16\x55\xfd\x77\x94\x47\x23\xd5\x2b\x4b\x3e\x73\x7d\x66\x26\x49\xb0\xd9\xab\x0a\x55\xee\x54\xc9\x70\x24\x8a\x0a\xbc\x27\x64\x42\x0b\x93\x13\xa4\x22\x5d\xc0\x4a\x08\x03\x91\xe7\xd6\x1b\x7e\xa8\x90\x6a\x7b\xdc\xd8\x1f\x32\x98\xb6\x5c\x10\xa8\x43\x69\x1d\x23\xf5\x66\xa7\x32\x4d\xed\xab\x74\xf6\x80\xc7\x53\xba\x5d\xbe\xbd\x4f\x3f\x17\x9b\xaf\x8f\xc5\x72\x32\x9f\xaf\x16\xeb\x75\x5f\xd0\x47\x75\xf0\x0d\x14\x94\x3e\x83\xf4\x06\x07\xa1\x4c\xd8\x09\x0c\x31\x29\x0a\x47\x55\x15\x0d\xb1\x4d\xd5\xe9\xf9\x09\xe7\x00\x00\x34\x71\x2d\xc9\x18\x61\x47\x3c\x69\xe9\x6b\x55\xd4\x23\xbf\xc2\x6b\x5e\x91\xc4\xa8\xa1\xe3\x1d\xf1\x4c\x94\x22\x53\x5a\xf1\x5f\x98\x94\x3e\xd3\x2a\x4f\xe4\x55\xac\x6b\x31\xba\x8b\x33\xeb\x9c\x3d\xbe\xdc\xf7\xce\xf1\x77\x1d\x75\xbe\x69\x3a\xee\xf8\xcb\x6b\xd8\x7e\x59\x9f\xf1\x18\xa5\x30\x2a\x0f\x07\x33\xeb\x75\x01\x63\x19\x6d\xda\x75\x82\x70\x24\xc9\x51\x7d\x63\xdb\xac\xa0\xc9\x1e\x44\x41\x13\xe2\x88\xbd\x33\xbd\x7a\xdc\xed\x27\xb8\x04\xff\x01\x00\x00\xff\xff\x47\x29\x19\x9f\xc3\x01\x00\x00"

func flowtokenScriptsGet_balanceCdcBytes() ([]byte, error) {
	return bindataRead(
		_flowtokenScriptsGet_balanceCdc,
		"flowToken/scripts/get_balance.cdc",
	)
}

func flowtokenScriptsGet_balanceCdc() (*asset, error) {
	bytes, err := flowtokenScriptsGet_balanceCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "flowToken/scripts/get_balance.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x73, 0xe0, 0x9b, 0x3e, 0x21, 0x5d, 0xe4, 0x5, 0x3b, 0xda, 0x5f, 0xdf, 0xbf, 0xee, 0xcd, 0x6d, 0xc5, 0x1, 0x18, 0x13, 0x47, 0xc6, 0x50, 0x3e, 0x72, 0x18, 0xe6, 0xd8, 0x25, 0x29, 0x11, 0x8a}}
	return a, nil
}

var _flowtokenScriptsGet_supplyCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4c\xce\xbd\x6a\xc3\x40\x10\x04\xe0\x7e\x9f\x62\xca\xa4\xc9\xa5\x08\x29\x02\x29\x02\x92\x9a\x40\x02\x96\xfc\x00\x67\xe9\x0e\x1d\xbe\x3f\xf6\xf6\xb0\x8c\xf1\xbb\x1b\x64\x1b\xbb\xdd\xfd\x98\x19\xa5\x30\xcc\xae\xa0\x8c\xec\xb2\x80\x8d\x9e\x0a\x64\x36\x90\x24\xda\xa3\xd4\x9c\xfd\x11\xd6\x19\x3f\x91\x52\x48\x76\x7d\x76\x3e\x1d\x86\xb4\x37\x11\x25\x68\x16\x8c\x29\x0a\xeb\x51\x88\x5c\xc8\x89\xe5\x09\x58\x4e\x01\xef\xcb\xf0\xff\xdb\xfe\xfd\x34\xcd\xa6\xed\x7b\xa2\x5c\x77\xb0\x35\x22\x68\x17\x5f\x5e\xbf\xb0\xed\xdc\xf2\xf9\x81\x13\x11\x00\x78\x23\xf7\xe2\xef\x47\xd2\xdb\xba\xa8\x5f\xef\x57\xc7\x46\x2a\xc7\x1b\xa5\xf3\x25\x00\x00\xff\xff\x15\xfc\x5b\x86\xcb\x00\x00\x00"

func flowtokenScriptsGet_supplyCdcBytes() ([]byte, error) {
	return bindataRead(
		_flowtokenScriptsGet_supplyCdc,
		"flowToken/scripts/get_supply.cdc",
	)
}

func flowtokenScriptsGet_supplyCdc() (*asset, error) {
	bytes, err := flowtokenScriptsGet_supplyCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "flowToken/scripts/get_supply.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xfa, 0x6b, 0xe6, 0xc3, 0x1a, 0xad, 0xc4, 0x5c, 0x71, 0xa6, 0x62, 0x90, 0x44, 0xcc, 0x8b, 0x43, 0x64, 0x83, 0x8, 0x46, 0xe2, 0xe2, 0x98, 0x26, 0x6f, 0xfd, 0x96, 0x45, 0x40, 0xa6, 0x43, 0x34}}
	return a, nil
}

var _flowtokenSetup_accountCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x92\xdf\x6a\x1b\x3d\x10\xc5\xef\xf7\x29\xce\xd5\x87\x0d\xf9\xbc\xbd\x0e\x49\xc0\x69\x9c\x52\x5a\x52\x48\xdc\xde\x8f\xe5\xd9\x5d\x11\x59\x12\xd2\x28\x8e\x31\x7e\xf7\xa2\xfd\x63\x77\x9b\x1a\x0a\xa1\xba\x30\xd6\xcc\xd1\xd1\x99\x9f\xb6\x28\x4b\x2c\x1b\x1d\x21\x81\x6c\x24\x25\xda\x59\xe8\x08\x82\xf0\xc6\x1b\x12\x46\xe5\x42\xde\x9e\xfa\xf9\x8c\x38\xd0\x7a\x0d\xc2\x0f\x4a\x46\x10\x38\xba\x14\x14\xe7\xba\x34\xac\x03\x48\x29\x97\xac\x64\x6d\xcc\x35\x92\xdc\xd8\x41\x91\x45\x8a\x9c\x37\xa8\x8c\xdb\x2e\xdd\x33\xdb\xa2\xd0\x1b\xef\x82\xe0\x3e\xd9\x5a\xaf\x0c\xb7\x55\x54\xc1\x6d\xf0\xe1\xf5\xfe\xfb\xc3\xa7\xcf\xb7\x5f\x17\xcb\x6f\x5f\x16\x0f\xf3\xbb\xbb\xc7\xc5\xd3\xd3\xf1\xc0\x60\x31\x88\x47\xa2\xe2\xd7\xa9\xf6\x45\x01\x00\x3e\xb0\xa7\xc0\x93\xa8\x6b\xcb\xe1\x12\xf3\x24\xcd\xbc\x0b\x3b\x1d\x34\x79\xe9\x0a\x9d\x64\xb6\x72\x21\xb8\xed\xd5\x7f\xc7\xbb\x66\xed\xd0\x37\x93\x7c\xe5\x25\xca\x28\x2e\x50\xcd\xe5\x71\x9c\xb6\x3d\xc5\xf5\x35\xac\x36\xd8\x1f\x2d\xf3\x2a\x4b\x7c\x0c\x9c\xb9\x12\x2c\x6f\x4f\x0c\x7a\x92\x64\xd7\xf0\x49\xa0\x05\xda\xa2\xb7\x1e\x39\xf4\xa9\x22\xbd\xf0\xe4\xea\xff\x53\x28\xd5\xda\x2e\x36\x5e\x76\xad\xd5\x64\x7a\x01\x71\xe7\xf3\x15\x67\x73\xf9\xb4\x32\x5a\x41\x91\xa7\x95\x36\x5a\x76\xfd\xb3\xf6\x11\xdb\xc7\x74\xd6\xec\xc0\xaf\xde\x45\x8e\xbf\x1b\x65\xe9\x9a\xbd\x8b\x5a\x50\x25\xdb\xe1\x97\x26\xb8\x54\x37\x6d\xf3\x91\x15\xeb\x17\x0e\xd0\x56\x38\x54\xa4\xfe\x38\xa1\xd1\xf6\xf9\x0d\xf5\xfd\xe8\x13\x99\x0d\x4e\x87\x9b\xc9\xc8\xa2\x4d\xd2\xcd\x71\x9a\x7b\x10\x5f\xbc\x91\x0a\x85\x9a\xe5\x2c\xab\x91\xfe\x1f\x83\x5b\x91\x21\xab\x18\x95\x66\xb3\x1e\x51\xbb\xed\x3b\xef\x86\xd6\x1b\xfd\x15\xb3\x5e\xfb\x5e\x64\xc3\xbf\x43\xd1\xfd\x1e\x0a\xfc\x0c\x00\x00\xff\xff\xf5\xa4\x7a\x20\x7b\x04\x00\x00"

func flowtokenSetup_accountCdcBytes() ([]byte, error) {
	return bindataRead(
		_flowtokenSetup_accountCdc,
		"flowToken/setup_account.cdc",
	)
}

func flowtokenSetup_accountCdc() (*asset, error) {
	bytes, err := flowtokenSetup_accountCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "flowToken/setup_account.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xd, 0x7f, 0xe2, 0x5c, 0x57, 0xa8, 0xac, 0xa8, 0xe3, 0xb8, 0xd6, 0x96, 0x91, 0x2e, 0x58, 0x58, 0x1, 0xf3, 0x34, 0xd2, 0x9e, 0xcf, 0x4a, 0xfd, 0xec, 0xea, 0x87, 0xa2, 0x4d, 0xa5, 0xfb, 0xc9}}
	return a, nil
}

var _flowtokenTransfer_tokensCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x53\x4b\x6f\xdc\x3c\x0c\x3c\xc7\xbf\x82\xc9\xe1\x8b\x17\xf8\x62\xf7\x50\xf4\xb0\xc8\xa3\xdb\xbc\x50\xb4\x48\x81\x3c\xda\xb3\x2c\xd3\x6b\xb5\x5e\xc9\xa0\xe8\x38\x41\x90\xff\x5e\x48\xb2\x1c\x7b\x53\x34\x3d\x2d\x4c\x0d\x87\xc3\x19\x6e\x9e\xc3\x6d\xad\x2c\x30\x09\x6d\x85\x64\x65\x34\x28\x0b\x02\x18\x37\x6d\x23\x18\xa1\x32\xe4\x3e\x27\xef\x5c\x0b\x4e\xf2\x1c\xa4\xe9\x9a\x12\x0a\x84\xce\x62\x09\xc5\x23\x08\xfd\x68\x34\x02\x1b\xb0\xa8\x4b\x60\xf3\x0b\xb5\x75\x9f\x42\x1b\xae\x91\x40\x48\x69\x3a\xed\x9b\x1d\x09\xd4\xc2\x42\x81\xa8\xc1\x22\x43\xd7\x3a\x28\xa1\x44\x75\x8f\x43\x73\x96\xe4\x79\xe2\x35\x22\xf4\x8a\xeb\x92\x44\x0f\x62\xe3\x48\x40\xb8\x11\x35\x46\x52\xa8\xc8\x6c\x60\x8d\xbc\x7a\x19\xd2\x47\x85\x0e\xd7\x0a\x12\x1b\x64\x24\x2f\xc9\x55\x26\x4b\x25\x89\xda\xb4\x86\x18\x2e\x3a\xbd\x56\x45\x83\xb7\x6e\x7e\xe0\x7c\xf7\x70\x71\x77\x75\xf9\xf9\xd3\xd7\xf3\xdb\x6f\x5f\xce\xaf\x56\x67\x67\xd7\xe7\x37\x37\x63\x43\x63\xfa\x19\x78\x06\x4a\x26\x33\xd2\x20\x7c\x09\x77\x17\xea\xe1\xc3\xfb\xff\x81\xcd\x12\x56\x65\x49\x68\xed\x02\x9e\x92\x04\x00\x60\x58\xf6\xbb\xe8\x1a\x06\x42\x6b\x3a\x92\x38\xb8\x65\x9a\xd2\x06\xe1\x83\xb3\xae\x2a\x08\xa1\x40\xa5\xd7\x61\x9d\x0a\x89\xb0\xf4\x54\x0d\xb2\x0b\x82\x3d\xd7\x12\x3e\xce\x56\xcb\x7c\x35\xcc\x6c\x09\x5b\x41\x98\x5a\xb5\xd6\x48\x4b\x58\x75\x5c\x0f\x2e\x8e\xba\x06\x6d\x97\xc8\x20\x80\xb0\x42\x42\x2d\x31\x3a\x19\x3a\xf7\x2d\x58\x36\x84\x25\xdc\x7b\xf2\xd8\xe7\x84\xf8\xca\x35\x56\x70\x34\x80\xb3\xc2\x10\x99\xfe\xf0\xbf\xd1\xc0\x20\xe9\x38\x75\x3e\x2e\x21\x77\x54\x62\x8d\x79\x15\xdf\xfd\xf3\x22\xd9\xd9\xd9\x39\x39\x81\x56\x68\x25\xd3\xbd\x53\x9f\xb0\x36\x0c\x81\xee\xb5\x34\xd3\x07\x65\xbe\x7b\x77\x6f\x31\x5b\xe7\x47\xbc\xa9\xc1\x51\x1f\xe1\xdb\x0b\x59\x6c\xaa\x6c\xb4\x16\x0e\x0f\xc6\xf5\xb2\x78\xa5\x63\xd8\xe1\x77\xe1\x7b\x9f\xc3\x70\x7c\x40\xd9\x31\xfe\xc1\x5a\x37\x9a\x50\xaa\x56\xa1\xe6\x7d\x0b\x6d\x57\x34\x4a\x8e\x27\x6e\x8a\x9f\x28\xe7\xbe\x8e\x68\x38\x9a\x1c\x7f\xca\x66\xf1\x2f\xb9\x4d\x67\x5d\x87\x7f\x1e\x6d\xd3\xfb\x62\x48\x6e\x84\x67\x6b\xe4\x53\xd1\x8a\x42\x35\x8a\x1f\xd3\x3c\xe8\x7c\x89\x2a\x72\x2d\x76\xc7\x98\x9f\xe6\xe7\x17\x11\xcf\xc7\xe9\xdb\x91\x06\xe8\xdf\xe5\xfb\x28\xb6\xe2\x3d\xc3\xd6\x58\x15\x6c\x8d\xc1\xe8\x98\xb5\xd2\xaf\x38\x68\xdb\x82\xc9\xfa\x59\x19\xc8\x86\xf3\x3c\x3c\x98\x1f\x41\x0c\xf8\x39\x81\xdf\x01\x00\x00\xff\xff\x1d\x98\x5f\xde\x54\x05\x00\x00"

func flowtokenTransfer_tokensCdcBytes() ([]byte, error) {
	return bindataRead(
		_flowtokenTransfer_tokensCdc,
		"flowToken/transfer_tokens.cdc",
	)
}

func flowtokenTransfer_tokensCdc() (*asset, error) {
	bytes, err := flowtokenTransfer_tokensCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "flowToken/transfer_tokens.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xb4, 0x5c, 0x8a, 0xeb, 0x9c, 0x49, 0x8c, 0x8d, 0x81, 0xe4, 0x3e, 0x55, 0x3c, 0x4, 0xb2, 0x94, 0x9a, 0x8c, 0x49, 0xc3, 0x78, 0xf7, 0xb0, 0xc0, 0x6b, 0xb4, 0x9a, 0x2c, 0xe2, 0xf2, 0x7a, 0xc1}}
	return a, nil
}

var _idtablestakingAdminChange_cutCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x92\x4f\x6b\xdb\x40\x10\xc5\xef\xfa\x14\x8f\x1c\x8a\x73\x91\x7a\x28\x3d\x98\xb6\x41\x8d\x1c\x30\x84\x12\x62\xf5\xd0\xe3\x78\x35\xfa\x53\xaf\x77\xcc\x68\x54\x19\x4a\xbe\x7b\x59\xc9\x2e\x71\xe3\xce\x65\x61\x99\x7d\xef\x37\xf3\xb6\xdb\x1f\x44\x0d\x0f\x5e\xc6\x75\x51\xd2\xd6\xf3\xc6\x68\xd7\x85\x06\xb5\xca\x1e\xef\x8f\xeb\x62\xf5\xad\x5c\x97\x3f\xca\xfc\xeb\xe3\x2a\x2f\x8a\xe7\xd5\x66\x93\x24\x59\x86\xb2\xed\x7a\x98\x52\xe8\xc9\x59\x27\x01\xae\xa5\xd0\x70\x0f\x6b\x19\xb5\x97\x11\x26\x3b\x0e\x50\x1e\x49\x2b\xb8\xc1\x60\x2d\x19\x82\x54\xb1\x89\x76\x3c\x5b\x54\xec\xb9\x21\x13\xed\x93\xe4\x95\xdc\x22\xf0\x78\x3f\xd8\x13\xab\xe3\x60\xd4\xf0\x12\xdf\x1f\xba\xe3\xc7\x0f\xb7\xf8\x9d\x24\x00\x90\x65\x78\x14\x47\x1e\xbf\x48\xbb\x48\x8e\x5a\x14\x04\xe5\x9a\x95\x83\x63\x98\x4c\x30\xeb\x02\xd3\x64\xc8\xab\x7d\x17\x20\xdb\x9f\xec\x6c\x92\xf0\x6c\xa0\x78\xf9\xcc\xf5\x12\xef\xde\x6e\x21\x9d\x9e\xcc\x7e\x07\xe5\x03\x29\x2f\xc8\x39\x5b\x22\x1f\xac\xcd\x9d\x93\x21\x58\x24\xc2\xa9\xb2\x0c\x5b\x51\x95\xf1\x1a\x08\xfd\xeb\x1f\xab\x67\x5f\xa7\x67\x08\x7c\x46\x94\x4f\x67\x8d\x4f\xff\x25\xfa\xb2\x88\xbb\x5b\x5e\xc9\x2d\x3d\x9d\x53\xdb\xc6\x44\xa9\xe1\x27\xb2\xf6\xf6\xaf\x61\xac\xbb\x3b\x1c\x28\x74\x6e\x71\x73\x2f\x83\xaf\x10\xc4\xce\xdc\x17\xd4\xfd\xe9\x33\x4c\x7c\x37\xb3\xc6\xcb\xbc\x0e\x3e\xb2\x1b\x8c\x5f\xcd\x7e\x31\x49\xda\xb3\x5d\xe4\xf7\x26\xd0\xb3\xda\xcb\x9f\x00\x00\x00\xff\xff\x8e\xa5\x1f\xd1\x84\x02\x00\x00"

func idtablestakingAdminChange_cutCdcBytes() ([]byte, error) {
	return bindataRead(
		_idtablestakingAdminChange_cutCdc,
		"idTableStaking/admin/change_cut.cdc",
	)
}

func idtablestakingAdminChange_cutCdc() (*asset, error) {
	bytes, err := idtablestakingAdminChange_cutCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "idTableStaking/admin/change_cut.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x10, 0x16, 0x86, 0xfb, 0xee, 0x3b, 0xc9, 0x84, 0xcd, 0xcb, 0x97, 0x24, 0x33, 0xd9, 0xe3, 0x6b, 0x46, 0x7d, 0x40, 0x73, 0x24, 0x7a, 0x38, 0x38, 0xd5, 0x51, 0xa1, 0x58, 0x44, 0xaf, 0xb3, 0x7a}}
	return a, nil
}

var _idtablestakingAdminChange_minimumsCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x51\xdd\x6a\xdb\x30\x14\xbe\xf7\x53\x7c\xf4\x62\xb8\x0c\xec\x15\xc6\x18\x66\x5e\xf1\xe6\x14\x0c\xdd\x18\x89\x7b\x31\x4a\x2f\x14\xe5\x38\xd6\x66\x4b\x9e\x74\xdc\x04\x42\xde\x7d\xc8\x3f\x59\xba\xb6\xe7\xc6\x58\x3a\xfa\x7e\x55\xdb\x19\xcb\xb8\x69\xcc\xae\xc8\x4b\xb1\x6e\x68\xc5\xe2\xb7\xd2\x5b\x54\xd6\xb4\x78\xb7\x2f\xf2\xc5\xf7\xb2\x28\x7f\x96\xd9\x97\xdb\x45\x96\xe7\xcb\xc5\x6a\x15\x04\x71\x8c\xb2\x56\x0e\x6c\x85\x76\x42\xb2\x32\x1a\xb2\x16\x7a\x4b\x0e\x5c\x13\xdc\x04\xd2\x2a\xdd\xb7\x7d\xeb\x50\x19\x0b\x6d\x36\x04\xd3\x91\x15\x6c\xac\x0b\x82\xb3\xc7\xa1\xa6\xdd\x37\xa5\x95\xdf\x4d\x70\x7f\x77\xa3\xf6\x1f\xde\x3f\x5c\xe2\x10\x04\x00\x10\xc7\xb8\x35\x52\x34\x78\x14\x56\x79\x91\x03\x9e\x80\xa5\x8a\x2c\x69\x49\x60\x33\xf0\x16\x39\x06\x13\xc8\x36\xad\xd2\x30\xeb\x5f\x24\x79\x80\x68\x88\x21\xfc\xe1\x92\xaa\x04\x6f\x9e\x1b\x8e\x86\x27\x23\x5f\x67\xa9\x13\x96\x42\x21\x25\x27\xc8\x7a\xae\x33\x29\x4d\xaf\xd9\x2b\xc2\x34\x71\x8c\xb5\xb1\xd6\xec\x5e\x12\x22\xfe\xe7\xf7\xe3\xa8\xa9\xa2\x59\x04\x52\x78\xf8\x68\xc4\xf8\xf4\xaa\xa2\xcf\xa1\x6f\x22\x79\xa1\xa2\x68\xfa\x0e\x6b\x2b\x36\x56\x6c\xe9\x87\xe0\xfa\xf2\x44\xe8\xe7\xfa\x1a\x9d\xd0\x4a\x86\x17\x5f\x4d\xdf\x6c\xa0\x0d\xcf\xba\x9f\xa8\x9e\x2b\x1b\xf4\x5d\x8c\x18\xc7\x31\x0e\xda\x93\xec\x99\xce\xbc\xfb\x34\xdb\x53\x5f\x87\xbb\x42\xf3\xc7\x04\x63\x6d\x47\xa4\x38\x1c\x4f\xab\x8f\xc2\x42\x25\x18\x56\x90\xe2\xea\x74\xe1\x2b\xf4\x21\x29\x8d\xb3\xf6\xcf\x48\xfc\xcc\x24\xf7\xea\x01\xa9\xff\x7b\x72\xab\x90\x42\xe1\xed\x08\x1e\x5e\xfd\x33\x3e\x09\x7f\x16\x7a\xe4\x88\x27\x26\x1f\x1e\x2d\xe9\x4f\xaf\x2c\xb5\xa4\xd9\x85\x33\xd7\xec\xfd\xf8\x37\x00\x00\xff\xff\x7a\x62\x5e\x37\x1d\x03\x00\x00"

func idtablestakingAdminChange_minimumsCdcBytes() ([]byte, error) {
	return bindataRead(
		_idtablestakingAdminChange_minimumsCdc,
		"idTableStaking/admin/change_minimums.cdc",
	)
}

func idtablestakingAdminChange_minimumsCdc() (*asset, error) {
	bytes, err := idtablestakingAdminChange_minimumsCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "idTableStaking/admin/change_minimums.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xfd, 0x43, 0x5f, 0x10, 0x9, 0x12, 0xd6, 0x29, 0xcd, 0x0, 0xf9, 0x15, 0xc6, 0xbf, 0xf6, 0xbd, 0x21, 0x40, 0xc9, 0x80, 0x4, 0x22, 0x3a, 0x3c, 0x24, 0xd3, 0x7e, 0x36, 0xea, 0x6, 0x28, 0x33}}
	return a, nil
}

var _idtablestakingAdminChange_payoutCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x91\x41\x6f\xd4\x40\x0c\x85\xef\xf9\x15\x4f\x3d\xa0\xed\x25\xe1\x80\x38\x44\x40\x15\x48\x2a\x45\xaa\x50\xd5\x84\x03\x47\xef\xd4\xd9\x0c\x3b\x3b\x8e\x26\x0e\xd9\x0a\xf5\xbf\xa3\x49\x76\xa1\x85\xd6\x97\x91\xac\xf1\x7b\x9f\xfd\xec\x61\x90\xa0\xb8\x76\x32\xd7\x65\x4b\x5b\xc7\x8d\xd2\xde\xfa\x1d\xba\x20\x07\xbc\x3d\xd6\x65\xf5\xb5\xad\xdb\xef\x6d\xf1\xf9\xa6\x2a\xca\xf2\xae\x6a\x9a\x24\xc9\x32\xb4\xbd\x1d\xa1\x81\xfc\x48\x46\xad\x78\x98\x9e\xfc\x8e\x47\x68\xcf\xe8\x9c\xcc\x50\xd9\xb3\xc7\xcc\xbc\x77\x0f\x18\xe8\x41\x26\x4d\x92\x27\x13\x1b\xcf\xf3\xed\xd2\xce\xf1\xed\xda\x1e\xdf\xbf\xbb\xc4\xaf\x24\x01\x80\x2c\xc3\x8d\x18\x72\xf8\x49\xc1\x46\x2a\x74\x12\x40\x08\xdc\x71\x60\x6f\x18\x2a\x8b\x51\x5d\x62\xa1\x46\x71\x7f\xb0\x1e\xb2\xfd\xc1\x46\x17\x09\xc7\x0a\x8a\xcd\x3b\xee\x72\xbc\xf9\x7f\xc3\x74\x19\x59\xfd\x86\xc0\x03\x05\xde\x90\x31\x9a\xa3\x98\xb4\x2f\x8c\x91\xc9\x6b\x24\xc2\xa9\xb2\x0c\x5b\x09\x41\xe6\x97\x40\xe8\x5f\xff\x58\x23\xbb\x2e\x3d\x43\xe0\x23\xa2\x7c\xba\x6a\x7c\x78\x95\xe8\xd3\x26\x9e\x3e\x7f\x21\x93\xf4\xf4\x2e\xdf\x1a\x95\x40\x3b\xbe\x25\xed\x2f\xff\x18\xc6\xba\xba\xc2\x40\xde\x9a\xcd\xc5\x17\x99\xdc\x3d\xbc\xe8\x99\xfb\x19\xf5\x78\x0a\x7a\xe1\xbb\x58\x35\x1e\xd7\x73\xf0\x91\xcd\xa4\xfc\x64\xf7\x67\x9b\xa4\x23\x6b\x35\x88\xe9\xdb\x98\xf0\x1a\xe1\xdf\x30\xcf\x4a\x8f\xbf\x03\x00\x00\xff\xff\x2a\x3e\x38\xa0\x5c\x02\x00\x00"

func idtablestakingAdminChange_payoutCdcBytes() ([]byte, error) {
	return bindataRead(
		_idtablestakingAdminChange_payoutCdc,
		"idTableStaking/admin/change_payout.cdc",
	)
}

func idtablestakingAdminChange_payoutCdc() (*asset, error) {
	bytes, err := idtablestakingAdminChange_payoutCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "idTableStaking/admin/change_payout.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x2f, 0x71, 0xde, 0xb0, 0x70, 0x7b, 0x4e, 0xe0, 0xb6, 0xbf, 0x9, 0x1, 0xfd, 0xd4, 0x85, 0x6b, 0xc0, 0x17, 0x99, 0x82, 0x25, 0x8, 0x5a, 0x86, 0xf6, 0xee, 0xa6, 0xa2, 0xad, 0xd0, 0x2a, 0x66}}
	return a, nil
}

var _idtablestakingAdminEnd_epochCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x92\x4f\x6b\xdb\x40\x10\xc5\xef\xfa\x14\x8f\x1c\x8a\x03\xc5\xea\xd9\x34\x0d\x4e\x95\x82\x20\x84\x12\xeb\x52\x42\x08\xab\xdd\x51\xb4\x8d\xbc\x23\x76\x47\x56\x8a\xf1\x77\x2f\xab\x3f\xae\xd3\x24\x73\x31\x58\xf3\xde\xfb\xed\xcc\xd8\x6d\xcb\x5e\xf0\xa3\xe1\x3e\xcf\x0a\x55\x36\xb4\x11\xf5\x6c\xdd\x13\x2a\xcf\x5b\x7c\x79\xc9\xb3\xeb\xdb\x22\x2f\x7e\x15\xeb\xab\x9b\xeb\x75\x96\xdd\x5d\x6f\x36\x49\x92\xa6\x28\x6a\x1b\x20\x5e\xb9\xa0\xb4\x58\x76\xa0\xaa\x22\x2d\x76\x47\xcd\x1f\x90\x33\x01\x52\x13\xa8\x65\x5d\x43\x39\x83\x20\xca\x4b\x80\x82\xa3\x1e\xec\x68\x99\xa4\x69\xf4\xc9\x05\x9a\xb7\xa5\x75\x34\x29\x9c\x79\x0c\x13\x43\xd4\x6d\x79\x47\x8f\xc2\xcf\xe4\x5e\xc5\x85\xa8\xed\x6b\xab\xeb\x7f\x61\x47\x59\x37\xb4\x7c\x9e\xbe\x7b\xaa\xba\xd8\xe2\xd8\x50\x40\x6f\xa5\x86\x75\xa1\xab\x2a\xab\x2d\x39\x19\x64\x14\xed\xe6\xb8\x80\x29\xaf\x24\xe9\x89\x1c\xca\x4e\x3f\x93\x84\x24\x39\x01\x58\x58\x13\x56\xb8\xdf\x88\xb7\xee\xe9\xe1\x1c\xfb\x24\x01\x80\x34\xc5\x0d\x6b\xd5\x60\xa7\xbc\x8d\xf3\x44\xc5\x1e\x2a\x42\x90\x27\xa7\x09\xc2\x03\x6c\x9e\x61\x98\x37\xd6\x66\x6b\x1d\xb8\xfc\x4d\x5a\x06\x8b\x86\x04\x2a\xfe\x79\x47\xd5\x0a\x9f\xde\xee\x66\x39\x48\xc6\xbc\xd6\x53\xab\x3c\x2d\x94\xd6\xb2\xc2\xba\x93\x7a\xad\x35\x77\x4e\x22\x11\xa6\x4a\x53\x94\xec\x3d\xf7\xef\x81\xa8\xff\xf3\x63\x05\x6a\xaa\xe5\x0c\x81\x0b\x44\xfb\xe5\xe8\xf1\xf5\x43\xa2\x6f\x8b\x78\x34\xab\x77\xae\x69\x39\xfd\x0e\x6d\x1b\x61\xaf\x9e\xe8\xa7\x92\xfa\xfc\x18\x18\xeb\xf2\x12\xad\x72\x56\x2f\xce\xbe\x73\xd7\x18\x38\x96\x99\xfb\x15\xf5\x71\xcf\xd1\xed\x6c\xf4\x38\x8c\xe3\xa0\x17\xd2\x9d\xd0\xc9\xdb\x87\x69\xb6\xad\xe7\x1d\x99\x3c\x0b\x2b\xec\xc7\x95\xad\x70\xc5\xdc\x1c\x70\x81\xfd\xe1\xd8\x1c\x77\x65\x0d\xac\x83\x35\xe1\xc4\x24\xd6\x89\xc9\xbd\x35\x0f\xb8\x80\xf8\x8e\x8e\x2d\x13\xc0\x9b\xe1\x2d\xc9\x99\xf9\xf5\xe3\x5d\x2e\x66\xa7\x5b\x36\x34\x20\x9d\x58\x9f\x7f\x64\x13\x0f\xb3\x18\xce\x72\x31\xbf\xf8\x90\xfc\x0d\x00\x00\xff\xff\x7b\xc2\x29\x11\xbf\x03\x00\x00"

func idtablestakingAdminEnd_epochCdcBytes() ([]byte, error) {
	return bindataRead(
		_idtablestakingAdminEnd_epochCdc,
		"idTableStaking/admin/end_epoch.cdc",
	)
}

func idtablestakingAdminEnd_epochCdc() (*asset, error) {
	bytes, err := idtablestakingAdminEnd_epochCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "idTableStaking/admin/end_epoch.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xa0, 0x46, 0xeb, 0xa5, 0x82, 0x65, 0x56, 0xac, 0x1e, 0xb9, 0x86, 0xc1, 0x2b, 0x6f, 0xc6, 0x66, 0x66, 0xa3, 0xe9, 0x48, 0x80, 0x2f, 0x65, 0x8, 0x45, 0xc5, 0x99, 0x1b, 0xbd, 0xf5, 0x2f, 0xa0}}
	return a, nil
}

var _idtablestakingAdminEnd_epoch_change_payoutCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x53\x4d\x6b\xdb\x4c\x10\xbe\xeb\x57\x3c\xe4\xf0\xa2\x40\xb0\xde\x43\xe9\x41\x34\x0d\x4e\xed\x80\x21\x84\x10\xbb\x87\x12\x42\x58\xef\x8e\xa2\x6d\xe4\x1d\xb1\x3b\xb2\x13\x82\xff\x7b\x59\x7d\xd5\x69\xe2\xb9\x08\xa4\x79\x3e\x66\xe6\x91\xdd\xd4\xec\x05\x57\x15\xef\x16\xb3\x95\x5a\x57\xb4\x14\xf5\x6c\xdd\x13\x0a\xcf\x1b\xfc\xff\xb2\x98\xcd\x6f\x56\x8b\xd5\xaf\xd5\xf4\xf2\x7a\x3e\x9d\xcd\xee\xe6\xcb\x65\x92\x64\x19\x56\xa5\x0d\x10\xaf\x5c\x50\x5a\x2c\x3b\x50\x51\x90\x16\xbb\xa5\xea\x15\xe4\x4c\x80\x94\x04\xaa\x59\x97\x50\xce\x20\x88\xf2\x12\xa0\xe0\x68\x07\x76\x34\x49\xb2\x2c\xf2\x2c\x04\x9a\x37\x6b\xeb\xa8\x47\x38\xf3\x18\x7a\x0f\x11\xb7\xe1\x2d\x3d\x0a\x3f\x93\x7b\x27\x17\x22\x76\x57\x5a\x5d\xfe\x15\x1b\x61\x4d\xdb\x72\xd6\x7f\xf7\x54\x34\xb1\xc5\xb1\xa1\x80\x9d\x95\x12\xd6\x85\xa6\x28\xac\xb6\xe4\xa4\x85\x51\xa4\x1b\xe4\x02\x7a\xbd\x35\xc9\x8e\xc8\x61\xdd\xe8\x67\x92\x90\x24\x07\x06\x52\x6b\x42\x8e\xfb\xa5\x78\xeb\x9e\x1e\xce\xe2\x58\xb7\xea\x95\x1b\xc9\xf1\xf3\xca\xbe\x7c\xfd\x72\x8a\xb7\x24\x01\x80\x2c\xc3\x35\x6b\x55\x61\xab\xbc\x8d\x2b\x46\xc1\x1e\x2a\xfa\x22\x4f\x4e\x13\x84\x5b\xff\x8b\x19\xda\x13\x60\x6a\x36\xd6\x81\xd7\xbf\x49\x4b\x4b\x51\x91\x40\xc5\x97\x77\x54\xe4\xf8\xef\xe3\xb9\x26\x2d\xa4\xd3\xab\x3d\xd5\xca\x53\xaa\xb4\x96\x1c\xd3\x46\xca\xa9\xd6\xdc\x38\x89\x8e\xd0\x57\x96\x61\xcd\xde\xf3\xee\x33\x23\xea\x5f\xfd\x58\x81\xaa\x62\x32\x98\xc0\x39\x22\xfd\xa4\xe3\xf8\x76\xd4\xd1\xf7\x34\xe6\x28\xff\x24\x60\x93\xfe\xd9\xb6\x2d\x85\xbd\x7a\xa2\x5b\x25\xe5\xe9\x28\x18\xeb\xe2\x02\xb5\x72\x56\xa7\x27\x3f\xb8\xa9\x0c\x1c\xcb\xe0\xfb\x9d\xeb\xf1\xf4\x91\xed\xa4\xe3\xd8\x77\xeb\xa0\x17\xd2\x8d\xd0\xc1\xec\xed\x36\xeb\xda\xf3\x96\xcc\x62\x16\x72\xbc\x75\x57\xcc\x71\xc9\x5c\xed\x71\x8e\xb7\xfd\xd8\x1c\x6f\x65\x0d\xac\x83\x35\xe1\x80\x24\xd6\x01\xc9\xbd\x35\x0f\x38\x87\xf8\x86\xc6\x96\xde\xc0\x87\xe5\x4d\x02\xc9\x3c\xfe\x18\xab\x18\xb3\x2e\x35\xe9\x98\x9f\xd3\x63\x28\x72\x66\xd8\x59\x17\xf0\x74\xd0\xbf\x61\x43\xed\x20\x07\x86\x8e\xd2\xc4\x84\xb7\xc2\x21\x1d\xf6\xb4\x4f\xfe\x04\x00\x00\xff\xff\x18\x19\xda\x13\x08\x04\x00\x00"

func idtablestakingAdminEnd_epoch_change_payoutCdcBytes() ([]byte, error) {
	return bindataRead(
		_idtablestakingAdminEnd_epoch_change_payoutCdc,
		"idTableStaking/admin/end_epoch_change_payout.cdc",
	)
}

func idtablestakingAdminEnd_epoch_change_payoutCdc() (*asset, error) {
	bytes, err := idtablestakingAdminEnd_epoch_change_payoutCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "idTableStaking/admin/end_epoch_change_payout.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x38, 0x59, 0xb5, 0x53, 0x1f, 0x17, 0x20, 0xa3, 0x78, 0x3f, 0x14, 0x72, 0x28, 0x35, 0x98, 0x83, 0x4c, 0xb2, 0x67, 0x1d, 0x25, 0xf7, 0xff, 0x89, 0x21, 0x4b, 0x9f, 0xa7, 0xe5, 0xc8, 0xe9, 0x88}}
	return a, nil
}

var _idtablestakingAdminEnd_stakingCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x92\x41\x6b\xdb\x4c\x10\x86\xef\xfa\x15\x2f\x39\x7c\x38\xf0\x61\xf5\x2c\xea\x06\xa5\x72\x41\x10\x42\x89\x74\x29\x21\x87\xf5\xee\xc8\xda\x56\xde\x11\xbb\xa3\x38\x60\xfc\xdf\xcb\x4a\x96\x51\x9b\x74\x2e\x02\x69\xe6\x99\x67\x66\x64\x0f\x3d\x7b\xc1\xb7\x8e\x8f\x65\x51\xab\x5d\x47\x95\xa8\x5f\xd6\xed\xd1\x78\x3e\xe0\xd3\x5b\x59\x6c\x1f\xeb\xb2\xfe\x51\xe7\xf7\x0f\xdb\xbc\x28\x9e\xb6\x55\x95\x24\x69\x8a\xba\xb5\x01\xe2\x95\x0b\x4a\x8b\x65\x07\x72\x26\x40\x5a\x42\xb8\x10\xd4\x30\x7e\xf8\x1f\xc7\xd6\xea\x16\x9e\x9a\x21\xa6\x38\x36\x14\x10\x11\x47\x2b\x2d\xac\x0b\x43\xd3\x58\x6d\xc9\xc9\x58\x4a\x49\xb2\xc0\xae\xac\x09\x19\x9e\x2b\xf1\xd6\xed\x5f\x6e\x71\x4a\x12\x00\x48\x53\x3c\xb0\x56\x1d\x5e\x95\xb7\x51\x1b\x0d\x7b\xa8\xd8\x84\x3c\x39\x4d\x10\x1e\x65\xca\x02\xe3\x58\xc8\xcd\xc1\x3a\xf0\xee\x27\x69\x19\x11\x1d\x09\x54\x7c\xf9\x44\x4d\x86\xff\xde\xaf\x60\x3d\x96\x4c\xfd\x7a\x4f\xbd\xf2\xb4\x52\x5a\x4b\x86\x7c\x90\x36\xd7\x9a\x07\x27\xd1\x08\x97\x48\x53\xec\xd8\x7b\x3e\x7e\x24\xa2\xfe\xee\x1f\x23\x50\xd7\xac\x67\x09\x6c\x10\xf1\xeb\x89\xf1\xf9\x9f\x46\x5f\x56\xf1\x36\xd9\x07\x47\x5b\x5f\x9e\x63\x5a\x25\xec\xd5\x9e\xbe\x2b\x69\x6f\xaf\x0d\x63\xdc\xdd\xa1\x57\xce\xea\xd5\xcd\x57\x1e\x3a\x03\xc7\x32\x7b\xff\x61\x7d\xbd\x63\xa4\xdd\x4c\x8c\xf3\xb4\x0e\x7a\x23\x3d\x08\x2d\x66\x1f\xb7\xd9\xf7\x9e\x5f\xc9\x94\x45\xc8\x70\x9a\x4e\x96\xe1\x9e\xb9\x3b\x63\x83\xd3\xf9\x9a\x1c\x6f\x65\x0d\xac\x83\x35\x61\x01\x89\xb1\x80\x3c\x5b\xf3\x82\x0d\xc4\x0f\x74\x4d\xb9\x08\xbc\x5b\xde\x9a\x9c\x99\xa7\x9f\xfe\xbb\xd5\x4c\x7a\x64\x43\xa3\xd2\x02\x3d\x4f\x73\xfe\x1d\x00\x00\xff\xff\x6e\x57\x4c\x4f\x01\x03\x00\x00"

func idtablestakingAdminEnd_stakingCdcBytes() ([]byte, error) {
	return bindataRead(
		_idtablestakingAdminEnd_stakingCdc,
		"idTableStaking/admin/end_staking.cdc",
	)
}

func idtablestakingAdminEnd_stakingCdc() (*asset, error) {
	bytes, err := idtablestakingAdminEnd_stakingCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "idTableStaking/admin/end_staking.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xd8, 0x8b, 0xa, 0xe5, 0x50, 0xc8, 0x74, 0x8, 0x62, 0x81, 0xed, 0x97, 0x8f, 0x23, 0xbd, 0x2a, 0xee, 0x29, 0xb7, 0xf4, 0x6b, 0x6d, 0x92, 0xb0, 0xe3, 0x4e, 0x34, 0x5e, 0x11, 0x12, 0xc7, 0x32}}
	return a, nil
}

var _idtablestakingAdminMove_tokensCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x91\x41\x6f\xba\x40\x10\xc5\xef\x7c\x8a\x17\x0f\xff\xe0\x05\xfe\x67\xd3\xd6\xd0\x62\x13\x12\xd3\x34\xc2\xa5\xc7\x65\x1d\x84\x0a\x3b\x64\x19\xd4\xc4\xf8\xdd\x1b\x16\x6d\xb4\xb5\x73\xd9\x64\x33\xf3\xde\x6f\xe6\x55\x4d\xcb\x56\xf0\x5a\xf3\x3e\x89\x33\x95\xd7\x94\x8a\xda\x56\x66\x83\xc2\x72\x83\xff\x87\x24\x5e\xbc\x65\x49\xf6\x91\x45\xcf\xcb\x45\x14\xc7\xab\x45\x9a\x7a\x5e\x18\x22\x2b\xab\x0e\x62\x95\xe9\x94\x96\x8a\x0d\x1a\xde\x51\x07\xe1\x2d\x99\x0e\x39\xc9\x9e\xc8\x20\xef\xf5\x96\xa4\xf3\xbc\xeb\xce\xa3\xe7\x01\x40\x18\x62\xc9\x5a\xd5\xd8\x29\x5b\x0d\xd6\x28\xd8\x42\xc1\x52\x41\x96\x8c\x26\x08\x43\x4a\x42\x12\xc3\xa1\x21\x5a\x37\x95\x01\xe7\x9f\xa4\xc5\x49\xd4\x24\x50\xc3\xe7\x8a\x8a\x19\xfe\xfd\x5e\x23\x70\x23\xa3\x5f\x6b\xa9\x55\x96\x7c\xa5\xb5\xcc\x10\xf5\x52\x46\x5a\x73\x6f\x64\x8a\xa3\x6b\x38\x43\xe5\x6c\x2d\xef\xef\x81\xa8\x9f\xfe\x43\x75\x54\x17\xc1\x05\x02\x8f\x18\xe4\x83\x51\xe3\xe1\x4f\xa2\x27\x7f\xb8\xef\xec\xce\xe1\x83\xf3\xeb\xda\x52\x61\xab\x36\xf4\xae\xa4\x9c\x7e\x1b\x0e\x35\x9f\xa3\x55\xa6\xd2\xfe\xe4\x85\xfb\x7a\x0d\xc3\x72\xe1\xbe\xa1\xee\xce\x69\x3a\xbe\xc9\xa8\x71\x1a\xcf\x41\x07\xd2\xbd\xd0\xd5\xee\x37\x9b\x04\x43\x9e\x99\x4b\xd3\xbf\xcc\x9d\xbe\x02\x00\x00\xff\xff\x8e\x9f\x21\x4b\x2f\x02\x00\x00"

func idtablestakingAdminMove_tokensCdcBytes() ([]byte, error) {
	return bindataRead(
		_idtablestakingAdminMove_tokensCdc,
		"idTableStaking/admin/move_tokens.cdc",
	)
}

func idtablestakingAdminMove_tokensCdc() (*asset, error) {
	bytes, err := idtablestakingAdminMove_tokensCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "idTableStaking/admin/move_tokens.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x99, 0xd3, 0xe1, 0x22, 0x4a, 0x39, 0x1b, 0xb5, 0x5c, 0x7c, 0x2f, 0xa, 0xbb, 0xb5, 0xc6, 0x72, 0xff, 0xcf, 0xfc, 0x7d, 0x4c, 0xbb, 0x0, 0x13, 0x92, 0xfd, 0x7, 0xf3, 0xaa, 0x6e, 0xff, 0xa5}}
	return a, nil
}

var _idtablestakingAdminPay_rewardsCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x91\x41\xcb\xda\x40\x10\x86\xef\xf9\x15\x2f\x1e\x4a\xbc\x24\x3d\x4b\x5b\x49\x1b\x0b\x01\x29\xc5\xe4\xd2\xe3\xb8\x99\x98\xd4\x75\x37\xec\x4e\xaa\x22\xfe\xf7\xb2\x89\x16\xed\xe7\x37\x97\x85\x65\xe6\x99\x67\x66\xba\x43\x6f\x9d\xe0\xbb\xb6\xc7\x22\xaf\x68\xab\xb9\x14\xda\x77\x66\x87\xc6\xd9\x03\x3e\x9e\x8a\x7c\xf5\xa3\x2a\xaa\x5f\x55\xf6\x75\xbd\xca\xf2\x7c\xb3\x2a\xcb\x28\x4a\x53\x54\x6d\xe7\x21\x8e\x8c\x27\x25\x9d\x35\xe8\xe9\xec\xe1\xf8\x48\xae\xf6\x10\x0b\xd2\x1a\xd2\x32\xbc\xd0\x9e\x6b\x18\x5b\xb3\x8f\xa2\xc7\x8a\x4b\x14\x01\x40\x9a\x62\x6d\x15\x69\xfc\x21\xd7\x05\x05\x34\xd6\x81\xe0\xb8\x61\xc7\x46\x71\xa0\x05\x52\x91\x63\x54\x44\x56\x1f\x3a\x03\xbb\xfd\xcd\x4a\x46\x84\x66\x01\x85\xcf\x0d\x37\x0b\x7c\x78\x3b\x4e\x32\x96\x4c\xfd\x7a\xc7\x3d\x39\x8e\x49\x29\x59\x20\x1b\xa4\xcd\x94\xb2\x83\x91\x39\x2e\x63\xc2\x4d\x6a\x6b\x9d\xb3\xc7\x57\x22\xf4\x7f\xff\x10\x9e\x75\x93\xdc\x25\xf0\x19\x01\x9f\x4c\x8c\x4f\xef\x1a\x7d\x89\xc3\x9e\x17\x2f\x0e\x90\xdc\xde\x31\xad\x14\xeb\x68\xc7\x3f\x49\xda\xf9\xbf\x86\x21\x96\x4b\xf4\x64\x3a\x15\xcf\xbe\xd9\x41\x87\x2d\xcb\xdd\xfb\xc9\xda\xdf\xae\x3a\xfa\xcd\x26\xc6\x75\x5a\x07\x9f\x58\x0d\xc2\x0f\xb3\x3f\x4d\x92\xf4\x74\xde\x4c\x57\x8d\xef\x75\xd7\xbf\x01\x00\x00\xff\xff\x93\x8e\x91\x93\x37\x02\x00\x00"

func idtablestakingAdminPay_rewardsCdcBytes() ([]byte, error) {
	return bindataRead(
		_idtablestakingAdminPay_rewardsCdc,
		"idTableStaking/admin/pay_rewards.cdc",
	)
}

func idtablestakingAdminPay_rewardsCdc() (*asset, error) {
	bytes, err := idtablestakingAdminPay_rewardsCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "idTableStaking/admin/pay_rewards.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x56, 0xb6, 0x7b, 0x6b, 0x25, 0x3d, 0xe2, 0x7, 0x70, 0x59, 0xb8, 0xf3, 0x62, 0xe9, 0xb7, 0xe4, 0x70, 0xd, 0xf7, 0x0, 0xe1, 0x54, 0x22, 0x9, 0xd7, 0xb9, 0x80, 0xc3, 0xef, 0x3f, 0x59, 0xb1}}
	return a, nil
}

var _idtablestakingAdminRemove_nodeCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x91\xc1\x6e\x9c\x30\x10\x86\xef\x3c\xc5\xaf\x1c\x2a\xf6\x50\xe8\x19\xa5\x8d\x68\xd9\x4a\x48\x51\x54\x05\x2e\x3d\x7a\xed\x61\x71\x0b\x1e\x64\x86\x64\xa3\x2a\xef\x5e\xd9\x90\x28\xdb\x6e\xe6\x82\x84\xfc\x7f\xf3\xcd\x8c\x1d\x27\xf6\x82\xef\x03\x3f\xd6\x55\xab\x0e\x03\x35\xa2\x7e\x5b\x77\x44\xe7\x79\xc4\xa7\x53\x5d\xed\xef\xda\xba\xfd\xd9\x96\x5f\x6f\xf7\x65\x55\xdd\xef\x9b\x26\x49\xf2\x1c\x6d\x6f\x67\x88\x57\x6e\x56\x5a\x2c\x3b\x78\x1a\xf9\x81\x66\x28\x07\x3a\xd9\x59\x02\xc4\xb1\xa1\x95\x24\x3d\xc1\x1a\x72\x62\xe5\x09\x12\x1a\x25\xc9\x9b\x74\x6a\x4d\x81\x46\xbc\x75\xc7\x1d\xfe\x24\x09\x00\xe4\x39\x6e\x59\xab\x01\x0f\xca\xdb\x90\x40\xc7\x1e\x0a\x9e\x3a\xf2\xe4\x34\x41\x38\x72\xeb\x0a\x51\x1d\xa5\x19\xad\x03\x1f\x7e\x91\x96\x88\x18\x48\xa0\xc2\xcf\x7b\xea\x0a\x7c\xf8\x7f\xcc\x2c\x46\xd6\x7e\x93\xa7\x49\x79\x4a\x95\xd6\x52\xa0\x5c\xa4\x2f\xb5\xe6\xc5\x49\x30\xc2\x56\x79\x8e\x03\x7b\xcf\x8f\x97\x44\xd4\xbf\xfd\x43\xcd\x34\x74\xd9\x8b\x04\x3e\x23\xe0\xb3\x95\x71\xfd\xae\xd1\x97\x34\x6c\xad\xb8\x70\x98\x6c\xfb\xc6\x67\x8d\xb0\x57\x47\xfa\xa1\xa4\xdf\xbd\x36\x0c\x75\x73\x83\x49\x39\xab\xd3\xab\x6f\xbc\x0c\x06\x8e\xe5\xc5\xfb\xcc\x7a\xde\xae\x1d\xfd\xae\x56\xc6\xf3\xba\x0e\x3a\x91\x5e\x84\xde\xcc\x1e\xb6\x19\x2f\x7a\xfd\xf1\x7c\xaa\x6c\xbd\xfd\x1d\x1b\x4a\xad\xd9\x25\xaf\x09\x43\xb3\x78\x7e\x8a\xa9\x8d\xfd\xfc\x37\x00\x00\xff\xff\x87\x89\x7c\x41\x73\x02\x00\x00"

func idtablestakingAdminRemove_nodeCdcBytes() ([]byte, error) {
	return bindataRead(
		_idtablestakingAdminRemove_nodeCdc,
		"idTableStaking/admin/remove_node.cdc",
	)
}

func idtablestakingAdminRemove_nodeCdc() (*asset, error) {
	bytes, err := idtablestakingAdminRemove_nodeCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "idTableStaking/admin/remove_node.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x4f, 0x15, 0x9a, 0x70, 0x8a, 0x54, 0x19, 0x65, 0x26, 0x20, 0xb7, 0xb3, 0x33, 0x5d, 0x69, 0x26, 0x5d, 0x12, 0xd3, 0x70, 0xbf, 0xd, 0x54, 0xce, 0xb1, 0xb8, 0x3, 0x97, 0xe1, 0x79, 0xd6, 0x81}}
	return a, nil
}

var _idtablestakingAdminTransfer_minter_deployCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x52\xc1\x6a\xdb\x40\x10\xbd\xeb\x2b\x86\x1c\x8a\x0c\x8e\xe4\x42\x29\x45\x38\x0d\xaa\x13\x43\x49\xeb\x94\x38\xa1\x87\x90\xc3\x7a\x35\x76\x16\x4b\x3b\x62\x34\xaa\x62\x82\xff\xbd\xac\x56\x92\x1d\xb7\x87\xec\x61\x0f\x33\x6f\x66\xde\xbc\x79\xa6\x28\x89\x05\xe6\x39\x35\xf7\xb4\x45\x0b\x6b\xa6\x02\x26\x2f\xf3\x1f\xb7\xbf\xef\x6f\x6f\xae\x17\xe9\xd5\xd5\xdd\xf5\x72\x19\x04\xc2\xca\x56\x4a\x8b\x21\x1b\x96\xf5\x2a\x37\xfa\x06\x77\x55\x02\x8f\x8f\x0f\xdf\xad\x7c\x79\x7a\x1a\x83\x26\x2b\xac\xb4\x2c\x54\x81\x09\x2c\x85\x8d\xdd\xb8\x68\x86\x09\x74\xa8\x31\x30\x36\x8a\xb3\xb4\xa0\xda\x4a\x02\x0f\x73\xf3\xf2\xf9\x53\x1f\x9d\xd5\x43\x68\x04\xaf\x41\x00\x50\x32\x96\x8a\x31\xac\xcc\xc6\x22\x27\x90\xd6\xf2\x9c\x6a\xed\x8a\x3b\x04\x40\x8e\x02\x4a\x6b\x81\x8b\xe3\x74\x58\xaa\x9d\xab\xf0\x95\xa3\x16\xd9\x7e\x6b\x62\xd8\xe2\x0e\x8c\x85\xc3\x1e\xf0\xda\xe6\xdc\x73\xad\x22\x95\x65\xbf\xfa\x64\xb8\xc5\x9d\xaf\xdf\xfb\x81\x71\x1c\xc3\x37\x62\xa6\x06\x14\x30\xae\x91\xd1\x6a\x04\x21\x90\x67\x6c\xb5\x04\x2f\x66\x9a\x15\xc6\xba\x41\x2e\xae\x3c\x2f\xa8\x84\x58\x6d\x70\xa0\xbe\xee\xb5\xf7\xe8\x8b\x8e\x71\xb4\x6a\x27\x4c\x3f\x0c\xb7\x89\x5a\x80\xa9\x84\x95\x10\x7f\x0d\xdd\xa9\x12\x88\xbb\x7e\xf1\xdb\x3e\xa3\x61\x9f\xcb\x4b\x28\x95\x35\x3a\x3c\x9b\x51\x9d\x67\x60\x49\x60\xf5\x7e\xf6\x8c\x15\xd5\xac\xf1\x6c\x74\x58\x7e\xc6\xa8\x04\x41\x1d\xb8\xff\x34\x56\x90\xef\x3a\xec\xbf\xbb\xf9\x3c\x4c\xcf\x4f\xd6\x8d\x74\xdb\x6a\x81\x8d\x47\x84\x2a\xcf\xa9\xc1\xc1\x1f\x1f\x27\xfd\x8b\x26\x1d\x81\xf6\x3e\x95\xfa\x83\xe1\xf4\xfc\xa4\xff\x18\x84\xfe\xa7\x88\xcf\x1e\xd7\xf7\x56\xad\xdc\xa5\x43\xdb\x1a\xf6\xd8\xbe\xbd\x6d\xdd\xff\xd6\xb3\x47\x5e\x75\x1a\xef\x83\x60\x1f\x40\xf0\x37\x00\x00\xff\xff\x76\x8b\xcc\x2a\x48\x03\x00\x00"

func idtablestakingAdminTransfer_minter_deployCdcBytes() ([]byte, error) {
	return bindataRead(
		_idtablestakingAdminTransfer_minter_deployCdc,
		"idTableStaking/admin/transfer_minter_deploy.cdc",
	)
}

func idtablestakingAdminTransfer_minter_deployCdc() (*asset, error) {
	bytes, err := idtablestakingAdminTransfer_minter_deployCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "idTableStaking/admin/transfer_minter_deploy.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xce, 0xe, 0x83, 0xc7, 0x17, 0x4, 0xc6, 0x45, 0xee, 0xd2, 0x3d, 0x61, 0xb5, 0x66, 0xc6, 0x5b, 0x67, 0x82, 0x37, 0xb5, 0x64, 0x6b, 0x97, 0x21, 0xe7, 0x49, 0x49, 0xba, 0xf3, 0x9f, 0xe4, 0x33}}
	return a, nil
}

var _idtablestakingDelegationDel_request_unstakingCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x91\x41\x6b\xe3\x40\x0c\x85\xef\xfe\x15\x22\x87\xc5\xb9\xd8\x7b\x58\xf6\x60\x76\x1b\xdc\x3a\x81\x40\x08\x25\x76\x0e\x3d\x2a\x63\x39\x71\x3b\x19\xb9\xb2\xdc\x04\x4a\xfe\x7b\x99\xba\x31\x2d\x35\x54\x17\x1d\x66\xa4\xf7\xbd\xa7\xfa\xd8\xb0\x28\x2c\x2c\x9f\x96\x59\x81\x3b\x4b\xb9\xe2\x53\xed\xf6\x50\x09\x1f\xe1\xf7\x79\x99\xcd\xd7\xc5\xb2\x78\x28\xd2\xdb\xd5\x3c\xcd\xb2\xcd\x3c\xcf\x83\x20\x50\x41\xd7\xa2\xd1\x9a\x5d\x88\x47\xee\x9c\x26\xb0\x5d\xd4\xe7\xbf\x7f\xa6\xf0\x1a\x04\x00\x00\x71\x0c\x2b\x36\x68\xe1\x05\xa5\xf6\x9b\xa1\x62\x01\x04\xa1\x8a\x84\x9c\x21\x50\x06\x3d\x10\x64\x64\x69\x8f\xca\x02\xbc\x7b\x24\xa3\xef\xd3\x96\x14\xca\xeb\xc3\x86\xaa\x04\x7e\x7d\x87\x8c\xd6\x5c\xd2\x30\xde\xcb\x36\x42\x0d\x0a\x85\x68\x8c\x26\x90\x76\x7a\x48\x8d\xf1\x80\x1e\x0c\x3e\x2a\x8e\x61\xc7\x22\x7c\x1a\xe3\x29\xc7\x78\x7c\xb5\x64\xab\xe8\x33\x14\xfc\x07\x2f\x13\xf5\xbb\xfe\xfd\x48\x78\x13\xfa\x54\x93\x91\xb8\xa3\xe1\x4f\xae\x2c\xb8\xa7\x7b\xd4\xc3\x74\x50\xf6\x35\x9b\x41\x83\xae\x36\xe1\xe4\x8e\x3b\x5b\x82\x63\xbd\x9a\xf8\x62\x61\x00\x9c\x4c\xfb\x44\x2e\x7d\xa3\x33\x99\x4e\xe9\x7a\x9e\x51\x43\x91\xd0\x73\x47\xad\x6e\x5d\xdb\x73\x0d\xc7\xed\xfb\xb0\xf1\xf2\x16\x00\x00\xff\xff\x59\x8c\xf0\xa8\x39\x02\x00\x00"

func idtablestakingDelegationDel_request_unstakingCdcBytes() ([]byte, error) {
	return bindataRead(
		_idtablestakingDelegationDel_request_unstakingCdc,
		"idTableStaking/delegation/del_request_unstaking.cdc",
	)
}

func idtablestakingDelegationDel_request_unstakingCdc() (*asset, error) {
	bytes, err := idtablestakingDelegationDel_request_unstakingCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "idTableStaking/delegation/del_request_unstaking.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x88, 0x1d, 0xf8, 0x36, 0x96, 0xba, 0x29, 0x5f, 0x9e, 0xc8, 0x53, 0x9a, 0x3f, 0x61, 0x22, 0xe7, 0x41, 0xc3, 0x9d, 0xe8, 0x55, 0xee, 0x64, 0xd8, 0x5e, 0x39, 0x16, 0x38, 0x80, 0xc8, 0xc, 0xa}}
	return a, nil
}

var _idtablestakingDelegationDel_stake_new_tokensCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x92\x41\x8f\x94\x40\x10\x85\xef\xfc\x8a\xca\x1e\xcc\xcc\x41\xf0\x60\x3c\x4c\x56\x37\x28\x4c\x32\x71\xc2\x9a\x05\x35\x1e\x6b\x9a\x62\xc0\xed\xe9\x22\x4d\x21\x93\x98\xfd\xef\xa6\x61\x9b\x65\xb3\x93\x68\xac\x4b\xa7\xd3\xef\x51\xdf\x2b\xaa\x39\xb5\x6c\x05\xb6\x9a\x87\x5d\x52\xe0\x41\x53\x2e\x78\xdf\x98\x23\x54\x96\x4f\xf0\xe6\xbc\x4b\xd2\xac\xd8\x15\x3f\x8a\xf8\xe3\x3e\x8d\x93\xe4\x2e\xcd\xf3\x60\xe1\x2a\xf8\x9e\x8c\x17\x6f\xf7\xb7\xdf\x8b\xdb\xcf\x69\xe6\x85\x41\x20\x16\x4d\x87\x4a\x1a\x36\x2b\x3c\x71\x6f\x64\x03\x5f\xb7\xcd\xf9\xdd\xdb\x35\xfc\x0e\x02\x00\x80\x28\x82\x3d\x2b\xd4\xf0\x0b\x6d\xe3\x10\xa0\x62\x0b\x08\x96\x2a\xb2\x64\x14\x81\x30\x48\x4d\x50\x92\xa6\x23\x0a\x5b\xe0\xc3\x4f\x52\x32\xba\x35\xc9\xd3\xc3\x1d\x55\x1b\x78\xf5\x32\x4d\x98\x71\x49\x89\x57\x05\xb3\xb1\xf2\x09\x9e\x8c\xe3\x35\xfc\x86\xbd\x96\x49\xd7\x5a\x6a\xd1\xd2\x0a\x95\x92\x0d\xc4\xbd\xd4\xb1\x52\x2e\x88\x0b\x00\x8f\x15\x45\x70\x60\x6b\x79\xf8\x67\x6e\x57\x1d\xe9\x2a\x5c\xc2\xc3\x7b\x70\x6d\xc2\xe9\x5b\xd7\x7f\x4d\xf2\x61\xe5\x26\xbf\xb9\xf0\xff\xc2\x59\x93\x0b\x5b\x3c\xd2\x17\x94\x7a\x3d\x77\x76\x75\x73\x03\x2d\x9a\x46\xad\xae\x3e\x71\xaf\x4b\x30\x2c\x3e\xc4\xb3\x08\x33\xe0\xd5\x3a\x78\x8e\xbe\x1c\xdf\x25\xf4\xc5\x2c\x3d\x69\xd4\x4d\x38\xd1\xec\x1d\x9f\xff\x8f\xcc\xed\x1b\x8c\x7e\x8f\xf6\x30\x1d\x74\x26\xd5\x0b\xf9\x0d\xbb\x38\x6b\x7f\xa1\x8c\x26\x90\xee\x11\xf1\xfa\xf5\x8b\x70\xe1\xd0\x48\x5d\x5a\x1c\xe6\x1d\x9e\xce\xf5\xdc\xf6\xe1\x4f\x00\x00\x00\xff\xff\x7d\x72\x30\x6f\x4a\x03\x00\x00"

func idtablestakingDelegationDel_stake_new_tokensCdcBytes() ([]byte, error) {
	return bindataRead(
		_idtablestakingDelegationDel_stake_new_tokensCdc,
		"idTableStaking/delegation/del_stake_new_tokens.cdc",
	)
}

func idtablestakingDelegationDel_stake_new_tokensCdc() (*asset, error) {
	bytes, err := idtablestakingDelegationDel_stake_new_tokensCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "idTableStaking/delegation/del_stake_new_tokens.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x53, 0x38, 0xd9, 0x47, 0x24, 0xbb, 0xe8, 0x6e, 0x60, 0xdf, 0x9c, 0x19, 0x3a, 0x3c, 0x47, 0x18, 0xa7, 0xb5, 0x74, 0x88, 0x1d, 0x6, 0xd7, 0xb5, 0x24, 0xc1, 0xa1, 0xd3, 0x49, 0x79, 0xbe, 0x8b}}
	return a, nil
}

var _idtablestakingDelegationDel_stake_rewardedCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x91\x41\x6b\xab\x50\x10\x85\xf7\xfe\x8a\x21\x8b\x87\xd9\xe8\x5b\x3c\xde\x42\xda\x06\x5b\x13\x08\x84\x50\xa2\x5d\x74\x39\xb9\x8e\x89\xcd\xcd\x1d\x99\x8c\x4d\xa0\xe4\xbf\x97\x5b\xab\xb4\x54\xe8\x6c\x06\xf1\xce\x9c\xef\x9c\xa9\x8f\x0d\x8b\xc2\xc2\xf2\x79\x99\x15\xb8\xb5\x94\x2b\x1e\x6a\xb7\x83\x4a\xf8\x08\x7f\x2f\xcb\x6c\xbe\x2e\x96\xc5\x73\x91\xde\xaf\xe6\x69\x96\x6d\xe6\x79\x1e\x04\x81\x0a\xba\x13\x1a\xad\xd9\x85\x78\xe4\xd6\x69\x02\x4f\x8b\xfa\xf2\xff\xdf\x14\xde\x82\x00\x00\x20\x8e\x61\xc5\x06\x2d\xbc\xa2\xd4\x7e\x33\x54\x2c\x80\x20\x54\x91\x90\x33\x04\xca\xa0\x7b\x82\x8c\x2c\xed\x50\x59\x80\xb7\x2f\x64\xf4\x63\xda\x92\x42\xd9\xff\xd8\x50\x95\xc0\x9f\x9f\x90\xd1\x9a\x4b\x1a\xc6\x3b\xd9\x46\xa8\x41\xa1\x10\x8d\xd1\x04\xd2\x56\xf7\xa9\x31\x1e\xd0\x83\xc1\x67\xc5\x31\x6c\x59\x84\xcf\x63\x3c\xe5\x18\x8f\xaf\x13\xd9\x2a\xfa\x0a\x05\xb7\xe0\x65\xa2\x6e\xd7\xcd\xaf\x84\x77\xa1\x4f\x35\x19\x89\x3b\x1a\xde\xe4\xca\x82\x3b\x7a\x44\xdd\x4f\x07\x65\x5f\xb3\x19\x34\xe8\x6a\x13\x4e\x1e\xb8\xb5\x25\x38\xd6\xde\xc4\x37\x0b\x03\xe0\x64\xda\x25\x72\xed\x1a\x5d\xc8\xb4\x4a\xfd\x79\x46\x0d\xf5\x1f\xb4\xa1\x33\x4a\x49\x65\xc1\x07\x72\xa7\xe1\xc4\x5d\x1f\xf6\x5e\xdf\x03\x00\x00\xff\xff\x4f\x03\x87\x63\x3f\x02\x00\x00"

func idtablestakingDelegationDel_stake_rewardedCdcBytes() ([]byte, error) {
	return bindataRead(
		_idtablestakingDelegationDel_stake_rewardedCdc,
		"idTableStaking/delegation/del_stake_rewarded.cdc",
	)
}

func idtablestakingDelegationDel_stake_rewardedCdc() (*asset, error) {
	bytes, err := idtablestakingDelegationDel_stake_rewardedCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "idTableStaking/delegation/del_stake_rewarded.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xf, 0x9f, 0xc3, 0x4b, 0x19, 0xbb, 0xe2, 0x96, 0x5c, 0x6c, 0x69, 0x8b, 0x86, 0x7e, 0xeb, 0x78, 0x72, 0x47, 0xef, 0x12, 0x0, 0xd0, 0x9b, 0x25, 0x23, 0x9a, 0x67, 0x29, 0x3e, 0xa1, 0x89, 0x59}}
	return a, nil
}

var _idtablestakingDelegationDel_stake_unstakedCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x91\xc1\x6a\xb3\x50\x10\x85\xf7\x3e\xc5\x90\xc5\x8f\xd9\xe8\xbf\x28\x5d\x48\xdb\x60\x6b\x02\x81\x10\x4a\x34\x8b\x2e\x27\xd7\x31\xb1\x31\x77\x64\x1c\x9b\x40\xc9\xbb\x97\x5b\xab\xb4\x54\xe8\x6c\x06\xf1\xce\x9c\xef\x9c\x29\x4f\x35\x8b\xc2\xa2\xe2\xf3\x32\xc9\x70\x57\x51\xaa\x78\x2c\xed\x1e\x0a\xe1\x13\xfc\xbf\x2c\x93\xf9\x3a\x5b\x66\x2f\x59\xfc\xb8\x9a\xc7\x49\xb2\x99\xa7\xa9\xe7\x79\x2a\x68\x1b\x34\x5a\xb2\xf5\xf1\xc4\xad\xd5\x08\xb6\x8b\xf2\x72\x7b\x33\x85\x77\xcf\x03\x00\x08\x43\x58\xb1\xc1\x0a\xde\x50\x4a\xb7\x19\x0a\x16\x40\x10\x2a\x48\xc8\x1a\x02\x65\xd0\x03\x41\x42\x15\xed\x51\x59\x80\x77\xaf\x64\xf4\x73\xba\x22\x85\xbc\xff\xb1\xa1\x22\x82\x7f\xbf\x21\x83\x35\xe7\x34\x8c\x77\xb2\xb5\x50\x8d\x42\x3e\x1a\xa3\x11\xc4\xad\x1e\x62\x63\x1c\xa0\x03\x83\xaf\x0a\x43\xd8\xb1\x08\x9f\xc7\x78\xf2\x31\x1e\x57\x0d\x55\x45\xf0\x1d\x0a\xee\xc1\xc9\x04\xdd\xae\xbb\x3f\x09\x1f\x7c\x97\x6a\x34\x12\x77\x30\xbc\x49\x95\x05\xf7\xf4\x8c\x7a\x98\x0e\xca\xae\x66\x33\xa8\xd1\x96\xc6\x9f\x3c\x71\x5b\xe5\x60\x59\x7b\x13\x3f\x2c\x0c\x80\x93\x69\x97\xc8\xb5\x6b\x74\x21\xd3\x2a\xf5\xe7\x19\x35\xd4\x7f\xd0\xd6\x36\x8a\x47\xca\x33\x3e\x92\x6d\x86\x13\x77\x7d\xd8\x7b\xfd\x08\x00\x00\xff\xff\x60\x37\x37\x4d\x3f\x02\x00\x00"

func idtablestakingDelegationDel_stake_unstakedCdcBytes() ([]byte, error) {
	return bindataRead(
		_idtablestakingDelegationDel_stake_unstakedCdc,
		"idTableStaking/delegation/del_stake_unstaked.cdc",
	)
}

func idtablestakingDelegationDel_stake_unstakedCdc() (*asset, error) {
	bytes, err := idtablestakingDelegationDel_stake_unstakedCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "idTableStaking/delegation/del_stake_unstaked.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x74, 0xad, 0x88, 0x47, 0x36, 0x16, 0xef, 0x73, 0xad, 0x97, 0xe5, 0xea, 0x2d, 0xf8, 0xaa, 0x76, 0xc6, 0xa, 0x7b, 0xa9, 0x51, 0x85, 0x17, 0x72, 0x7, 0xfe, 0xb0, 0x79, 0xb4, 0xaa, 0xda, 0x62}}
	return a, nil
}

var _idtablestakingDelegationDel_withdraw_reward_tokensCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x92\x41\x8f\xd3\x30\x10\x85\xef\xf9\x15\xa3\x3d\xa0\xf6\x40\xc2\x01\x71\xa8\x16\x56\x85\xb4\x52\x45\xd5\x45\x6d\x00\x71\x9c\xda\x93\xd6\xac\xeb\x89\x9c\x09\xa9\x84\xf6\xbf\x23\x27\x75\x36\xab\xad\x04\x62\x2e\x56\xe4\xf7\x32\xdf\x1b\x8f\x39\x55\xec\x05\x96\x96\xdb\x55\x5e\xe0\xde\xd2\x4e\xf0\xc1\xb8\x03\x94\x9e\x4f\xf0\xe6\xbc\xca\x17\x9b\x62\x55\xfc\x28\xe6\x1f\xd7\x8b\x79\x9e\x6f\x17\xbb\x5d\x32\x72\x15\xfc\x40\x2e\x8a\x97\xeb\xfb\xef\xc5\xfd\xe7\xc5\x26\x0a\x93\x44\x3c\xba\x1a\x95\x18\x76\x13\x3c\x71\xe3\x64\x06\x5f\x97\xe6\xfc\xee\xed\x14\x7e\x27\x09\x00\x40\x96\xc1\x9a\x15\x5a\xf8\x85\xde\x04\x04\x28\xd9\x03\x82\xa7\x92\x3c\x39\x45\x20\x0c\x72\x24\xd0\x64\xe9\x80\xc2\x1e\x78\xff\x93\x94\x74\x6e\x4b\xf2\x74\xb1\xa5\x72\x06\xaf\x5e\xa6\x49\x37\xac\x29\x8f\xaa\x64\x30\x96\x31\xc1\x93\xb1\xfb\x4c\xbf\x61\x63\xa5\xd7\x55\x9e\x2a\xf4\x34\x41\xa5\x64\x06\xf3\x46\x8e\x73\xa5\x42\x90\x10\x00\x2e\x95\x65\xb0\x67\xef\xb9\xfd\x67\xee\x50\x35\xd9\x32\x1d\xc3\xc3\x7b\x08\x6d\xd2\xfe\x5f\xb7\x7f\x4d\xf2\x61\x12\x26\x3f\xbb\xf2\x7e\xe9\xa0\xd9\x09\x7b\x3c\xd0\x17\x94\xe3\x74\xe8\x1c\xea\xee\x0e\x2a\x74\x46\x4d\x6e\x3e\x71\x63\x35\x38\x96\x18\xe2\x59\x84\xfa\xb2\x11\xa8\x4f\xc6\xdd\x4c\x93\xe7\xf8\xe3\x11\x5e\xc3\x1f\xcd\x33\xd2\x66\x75\x8f\x94\x0d\xde\xee\xfa\xff\xe8\xc2\xce\x41\xe7\x8f\x68\x8f\xfd\x41\x67\x52\x8d\x50\xdc\xb2\xab\xc0\xa9\xa6\x8a\x6b\x23\x17\xb0\xdb\xd7\x2f\x5e\x24\x6d\x8d\x1c\xb5\xc7\x76\x4b\x2d\x7a\x4d\xba\xb3\xd6\xc3\x2e\xf7\xe7\x74\x68\xfd\xf8\x27\x00\x00\xff\xff\x48\xa4\x68\x6b\x52\x03\x00\x00"

func idtablestakingDelegationDel_withdraw_reward_tokensCdcBytes() ([]byte, error) {
	return bindataRead(
		_idtablestakingDelegationDel_withdraw_reward_tokensCdc,
		"idTableStaking/delegation/del_withdraw_reward_tokens.cdc",
	)
}

func idtablestakingDelegationDel_withdraw_reward_tokensCdc() (*asset, error) {
	bytes, err := idtablestakingDelegationDel_withdraw_reward_tokensCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "idTableStaking/delegation/del_withdraw_reward_tokens.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x59, 0x52, 0x4d, 0x97, 0xb1, 0xb9, 0xbc, 0x88, 0xbd, 0xa4, 0x74, 0x59, 0xab, 0xf1, 0x25, 0x8a, 0x1c, 0x55, 0x41, 0x8e, 0x6b, 0x4d, 0x3c, 0xfe, 0x4c, 0xb6, 0xdb, 0x88, 0xd3, 0xa9, 0xbf, 0x50}}
	return a, nil
}

var _idtablestakingDelegationDel_withdraw_unstaked_tokensCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x92\x41\x6b\xdb\x40\x10\x85\xef\xfa\x15\x43\x0e\xc5\x3e\x54\xea\xa1\xf4\x60\xd2\x06\xb7\xb2\xc1\xd4\x38\x25\x56\x5a\x7a\x1c\xaf\x46\xd6\x36\xab\x1d\xb1\x1a\x55\x86\x92\xff\x5e\x56\xf2\x2a\x0a\x31\xb4\x64\x2e\x8b\xd8\xf7\x34\xdf\x9b\x1d\x5d\xd5\xec\x04\xd6\x86\xbb\x4d\x9a\xe1\xc1\xd0\x5e\xf0\x41\xdb\x23\x14\x8e\x2b\x78\x77\xda\xa4\xab\x5d\xb6\xc9\x7e\x66\xcb\xcf\xdb\xd5\x32\x4d\xef\x56\xfb\x7d\x34\x71\x65\xfc\x40\x36\x88\xd7\xdb\xdb\x1f\xd9\xed\xd7\xd5\x2e\x08\xa3\x48\x1c\xda\x06\x95\x68\xb6\x33\xac\xb8\xb5\xb2\x80\xfb\xb5\x3e\x7d\x78\x3f\x87\x3f\x51\x04\x00\x90\x24\xb0\x65\x85\x06\x7e\xa3\xd3\x1e\x01\x0a\x76\x80\xe0\xa8\x20\x47\x56\x11\x08\x83\x94\x04\x39\x19\x3a\xa2\xb0\x03\x3e\xfc\x22\x25\xbd\xdb\x90\x3c\x5d\xdc\x51\xb1\x80\x37\x2f\xd3\xc4\x3b\xce\x29\x0d\xaa\x68\x34\x16\x21\xc1\x93\xb1\xff\x8c\xbf\x63\x6b\x64\xd0\xd5\x8e\x6a\x74\x34\x43\xa5\x64\x01\xcb\x56\xca\xa5\x52\x3e\x88\x0f\x00\xe7\x4a\x12\x38\xb0\x73\xdc\xfd\x37\xb7\xaf\x86\x4c\x11\x4f\xe1\xe1\x23\xf8\x36\xf1\xf0\xaf\xeb\x7f\x26\xf9\x34\xf3\x93\x5f\x5c\x78\xbf\x78\xd4\xec\x85\x1d\x1e\xe9\x1b\x4a\x39\x1f\x3b\xfb\xba\xb9\x81\x1a\xad\x56\xb3\xab\x2f\xdc\x9a\x1c\x2c\x4b\x08\xf1\x2c\x42\x73\xde\x08\xcc\x2b\x6d\xaf\xe6\xd1\x73\xfc\xe9\x08\x2f\xe1\x4f\xe6\x19\x68\x93\x66\x40\x4a\x46\x6f\x7f\xfd\x3a\x3a\xbf\x73\xd0\xfb\x03\xda\xe3\x70\xd0\x89\x54\x2b\x14\xb6\xec\x22\x70\x9c\x53\xcd\x8d\x96\x33\xd8\xf5\xdb\x17\x2f\x12\x77\x5a\xca\xdc\x61\x77\x6f\xfd\x1c\x28\xef\xad\xcd\xb8\xcb\xc3\x39\x1f\x5b\x3f\xfe\x0d\x00\x00\xff\xff\x25\x29\x97\xc0\x52\x03\x00\x00"

func idtablestakingDelegationDel_withdraw_unstaked_tokensCdcBytes() ([]byte, error) {
	return bindataRead(
		_idtablestakingDelegationDel_withdraw_unstaked_tokensCdc,
		"idTableStaking/delegation/del_withdraw_unstaked_tokens.cdc",
	)
}

func idtablestakingDelegationDel_withdraw_unstaked_tokensCdc() (*asset, error) {
	bytes, err := idtablestakingDelegationDel_withdraw_unstaked_tokensCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "idTableStaking/delegation/del_withdraw_unstaked_tokens.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x8f, 0xb6, 0xed, 0x54, 0x52, 0x1d, 0x47, 0x45, 0x7d, 0xec, 0xd7, 0x70, 0x4a, 0x4e, 0xf5, 0x39, 0x8e, 0xda, 0x57, 0xea, 0x35, 0x5c, 0x33, 0xcd, 0xae, 0x27, 0x42, 0x6f, 0x3, 0xcd, 0x14, 0x31}}
	return a, nil
}

var _idtablestakingDelegationGet_delegator_committedCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x8f\x41\x4b\xc3\x40\x10\x85\xef\xfb\x2b\xde\xd1\x82\xb4\xa2\xe2\xa1\xe0\xa1\xba\x29\x2c\x88\x07\x93\x1e\x3c\x6e\x92\x49\xba\x34\x3b\x13\x36\x13\x2c\x88\xff\x5d\x62\x68\x15\xe9\x69\x98\xc7\xe3\x7b\x7c\x21\xf6\x92\x14\xdb\x4e\x3e\x9c\x2d\x7c\xd9\x51\xae\xfe\x10\xb8\x45\x93\x24\xe2\xe6\xe8\x6c\xf6\x5a\xb8\xe2\xbd\xd8\x3c\xbd\x64\x1b\x6b\xdf\xb2\x3c\x37\x66\xb5\x42\xb1\x0f\x03\x86\x2a\x85\x5e\x91\x48\xc7\xc4\x03\x74\x4f\x28\x7d\xe7\xb9\x22\x48\x83\x4a\x62\x0c\xaa\x54\x43\xe5\x40\x3c\x4c\x99\x47\x4d\x1d\xb5\x5e\x25\x19\xd3\x8f\x25\x9a\x91\x11\x7d\xe0\x2b\x96\x9a\x9c\x5d\x23\xd7\x14\xb8\xbd\xfe\xed\x4d\xe1\xce\xb1\xde\xdd\x2e\xd6\xd8\x6d\xc3\xf1\xe1\x1e\x9f\x06\x00\x3a\xd2\xa9\xe6\xb8\x11\x3c\x5e\x90\x58\xda\x33\x83\x1b\x39\x2f\xcc\xf7\xdf\xc2\x9f\x67\xf1\x03\x9f\xa5\x4e\xfc\xe5\xac\xf0\x7c\x52\x32\x5f\xdf\x01\x00\x00\xff\xff\xd0\x83\xf2\x49\x3b\x01\x00\x00"

func idtablestakingDelegationGet_delegator_committedCdcBytes() ([]byte, error) {
	return bindataRead(
		_idtablestakingDelegationGet_delegator_committedCdc,
		"idTableStaking/delegation/get_delegator_committed.cdc",
	)
}

func idtablestakingDelegationGet_delegator_committedCdc() (*asset, error) {
	bytes, err := idtablestakingDelegationGet_delegator_committedCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "idTableStaking/delegation/get_delegator_committed.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x5d, 0xb5, 0xf, 0xba, 0xf, 0x7b, 0x39, 0xf1, 0x31, 0xef, 0x95, 0x64, 0x1f, 0x4, 0xc8, 0xd9, 0xc1, 0xc4, 0x5b, 0x9a, 0xb2, 0x85, 0x44, 0xde, 0x8d, 0x99, 0x72, 0x68, 0x5, 0xc4, 0x36, 0x2b}}
	return a, nil
}

var _idtablestakingDelegationGet_delegator_infoCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x8e\x41\x4b\xc4\x30\x10\x46\xef\xf9\x15\xdf\xd1\x05\x71\x45\x6f\x7b\x5b\x49\x85\x80\x78\x30\xf1\xe0\x71\x76\x9b\xb6\x83\xe9\xa4\x24\x53\x56\x10\xff\xbb\x14\xa5\x8a\x08\x7b\x1a\xe6\xe3\xc1\x7b\x3c\x4e\xb9\x28\xee\x53\x3e\x39\x1b\xe8\x90\xa2\x57\x7a\x65\xe9\xd1\x95\x3c\xe2\xfa\xcd\xd9\xe6\x31\xb8\xf0\x12\xf6\x77\x0f\xcd\xde\xda\xa7\xc6\x7b\x63\xb6\x5b\x84\x81\x2b\xea\xb1\xf0\xa4\x28\x51\xe7\x22\x15\x94\x12\x74\x88\x60\xe9\x32\xa8\xd6\x7c\x64\xd2\xd8\xe2\xc4\x3a\x80\xd0\xc6\x14\x7b\xd2\x5c\x8c\x99\xe6\x03\xba\x59\x30\x12\xcb\x85\xe4\x36\x3a\xbb\x83\xd7\xc2\xd2\x5f\xfe\x70\xcb\xf8\xec\x44\x6f\x6f\x36\xbb\x7f\x1a\xaf\xec\x0a\x2e\xc2\x77\x03\xe0\xbb\xe5\x2c\xbd\x4a\xbf\xee\x1f\xe9\xaf\x67\x63\x3e\x3e\x03\x00\x00\xff\xff\x51\x05\x16\x8f\x25\x01\x00\x00"

func idtablestakingDelegationGet_delegator_infoCdcBytes() ([]byte, error) {
	return bindataRead(
		_idtablestakingDelegationGet_delegator_infoCdc,
		"idTableStaking/delegation/get_delegator_info.cdc",
	)
}

func idtablestakingDelegationGet_delegator_infoCdc() (*asset, error) {
	bytes, err := idtablestakingDelegationGet_delegator_infoCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "idTableStaking/delegation/get_delegator_info.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x8b, 0x21, 0xa8, 0x94, 0x85, 0xd9, 0xe1, 0x14, 0x1f, 0x3d, 0x6a, 0x33, 0xd5, 0xbe, 0xc1, 0x84, 0x39, 0xc8, 0x4a, 0x14, 0x55, 0x44, 0xdc, 0xa6, 0x75, 0xae, 0x4f, 0xff, 0xc4, 0xc4, 0xeb, 0xd6}}
	return a, nil
}

var _idtablestakingDelegationGet_delegator_info_from_addressCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x90\x41\x8b\xdb\x30\x10\x85\xef\xfa\x15\xaf\x39\x14\x1b\x8a\xdd\x73\x68\x1a\xdc\x38\x05\x43\x09\xa5\xf1\xa5\x47\xd9\x1a\x3b\xda\x55\x34\x46\x1e\x93\x5d\x42\xfe\xfb\x92\x38\x89\x77\x21\xb0\x3a\x8d\x66\x9e\xde\xfb\x34\x76\xdf\x71\x10\xfc\x76\x7c\x28\xf2\x52\x57\x8e\xb6\xa2\x9f\xad\x6f\xd1\x04\xde\xe3\xfb\x4b\x91\xaf\x37\x65\x51\xfe\x2f\xb3\x5f\x7f\xd6\x59\x9e\xff\x5b\x6f\xb7\x4a\xa5\x29\xca\x9d\xed\xd1\xd7\xc1\x76\x82\x96\xa4\x87\x76\x0e\xb2\x23\x58\xdf\x30\x74\xc5\x83\x40\xc3\x90\xa3\x56\x0b\x07\x68\x6f\x10\x48\x86\xe0\x7b\x58\x51\xaa\x1b\x2a\x34\x83\xc7\x5e\x5b\x1f\x69\x63\x02\xf5\xfd\x1c\xd9\x58\xc4\xf3\x07\x48\x49\x7e\x33\x2b\xce\x11\x47\xa5\x00\xc0\x91\x40\xd7\x35\x0f\x5e\xb0\x38\x93\x64\xe3\xe5\xe6\x19\x4f\xb2\x09\x66\x71\x7b\x92\xb4\x24\x2b\xdd\xe9\xca\x3a\x2b\xaf\x3f\xbe\x1e\x1f\xc4\x6e\xd8\xd0\x3d\xfa\xef\x50\x39\x5b\x9f\x7e\x46\x69\x77\xa9\xd2\xc6\xf1\xe1\xaa\xbc\x8b\xe2\x2f\x97\xcc\xf3\x49\x2a\x0e\x81\x0f\x51\x8c\xe5\x12\x9d\xf6\xb6\x8e\x66\x2b\x1e\x9c\x81\x67\xc1\x38\x44\xa0\x86\x02\xf9\x9a\x20\xfc\x8e\x92\xab\x27\xaa\x65\x76\xfd\xc1\xb8\xbc\x4f\xf7\x12\x79\x36\x54\xe4\xf3\xc9\x27\x19\x3b\xdf\xa6\xce\xc7\xb1\x35\xb1\x3a\xa9\xb7\x00\x00\x00\xff\xff\x85\x56\x65\x44\x0a\x02\x00\x00"

func idtablestakingDelegationGet_delegator_info_from_addressCdcBytes() ([]byte, error) {
	return bindataRead(
		_idtablestakingDelegationGet_delegator_info_from_addressCdc,
		"idTableStaking/delegation/get_delegator_info_from_address.cdc",
	)
}

func idtablestakingDelegationGet_delegator_info_from_addressCdc() (*asset, error) {
	bytes, err := idtablestakingDelegationGet_delegator_info_from_addressCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "idTableStaking/delegation/get_delegator_info_from_address.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xcd, 0xf7, 0x98, 0x6, 0x4c, 0x51, 0x6f, 0x30, 0xff, 0x7, 0xec, 0x6, 0x32, 0x50, 0x1d, 0xcd, 0x6e, 0x3e, 0xdf, 0x86, 0x57, 0xfb, 0x4, 0xe9, 0x8c, 0x7, 0x66, 0x95, 0x51, 0xdd, 0xc4, 0x2b}}
	return a, nil
}

var _idtablestakingDelegationGet_delegator_requestCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x8f\x41\x4b\xc3\x40\x10\x85\xef\xfb\x2b\xde\xd1\x82\xb4\xa2\xe2\xa1\xe0\xa1\xb2\x2d\x2c\x88\x87\x66\x73\xf0\xb8\x69\x26\xe9\xd2\x64\x26\xee\x4e\xb0\x20\xfe\x77\x69\x6b\xab\x88\xa7\x61\x1e\x8f\xef\xf1\xc5\x7e\x90\xa4\x58\x75\xf2\xee\xac\x0f\x55\x47\x85\x86\x5d\xe4\x16\x4d\x92\x1e\x37\x7b\x67\x97\x2f\xde\xf9\x57\xbf\x78\x7a\x5e\x2e\xac\x5d\x2f\x8b\xc2\x98\xd9\x0c\x7e\x1b\x33\xf2\x26\xc5\x41\x91\x48\xc7\xc4\x19\xba\x25\x24\x7a\x1b\x29\x2b\xd5\x18\x39\x7f\xb3\xaa\xd0\x05\xde\x10\xa4\x41\x40\x4d\x1d\xb5\x41\x25\x19\x33\x8c\x15\x9a\x91\xd1\x87\xc8\x57\x2c\x35\x39\x3b\x47\xa1\x29\x72\x7b\xfd\xd3\x3b\x84\xa5\x63\xbd\xbb\x9d\xcc\x51\xae\xe2\xfe\xe1\x1e\x1f\x06\x00\x3a\xd2\x43\xcd\x71\x23\x78\xfc\x47\x62\x6a\x2f\x0c\x6e\xe4\xb2\x70\xba\x7f\x16\x7e\x3d\x93\x23\xfc\x24\x75\xe6\x4f\x55\x76\xc4\x79\x7d\xb6\xf3\x52\x1e\xf5\xc8\x7c\x7e\x05\x00\x00\xff\xff\xa8\x39\xca\x4b\x44\x01\x00\x00"

func idtablestakingDelegationGet_delegator_requestCdcBytes() ([]byte, error) {
	return bindataRead(
		_idtablestakingDelegationGet_delegator_requestCdc,
		"idTableStaking/delegation/get_delegator_request.cdc",
	)
}

func idtablestakingDelegationGet_delegator_requestCdc() (*asset, error) {
	bytes, err := idtablestakingDelegationGet_delegator_requestCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "idTableStaking/delegation/get_delegator_request.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xaa, 0x6, 0x0, 0x57, 0x46, 0x94, 0xda, 0x7f, 0x98, 0xf0, 0x3a, 0xb8, 0xa9, 0xe7, 0xe4, 0x9a, 0xea, 0xbe, 0xf6, 0xe9, 0xbe, 0x9e, 0x8a, 0x20, 0xad, 0x44, 0x2, 0x5d, 0x20, 0xa9, 0x12, 0xb8}}
	return a, nil
}

var _idtablestakingDelegationGet_delegator_rewardedCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x8f\x41\x4b\xc3\x40\x10\x85\xef\xfb\x2b\xde\xd1\x82\xb4\xa2\xe2\xa1\xe0\xa1\xb2\x29\x2c\x88\x87\x66\x7b\xf0\xb8\x69\x66\xd3\xa5\x9b\xd9\xb0\x99\xd0\x82\xf8\xdf\x25\x46\xa3\x88\xa7\x61\x1e\x8f\xef\xf1\x85\xb6\x4b\x59\xb0\x8d\xe9\x6c\xb4\x75\x55\xa4\x52\xdc\x29\x70\x03\x9f\x53\x8b\x9b\x8b\xd1\xc5\x8b\x35\xf6\xd5\x6e\x9e\x9e\x8b\x8d\xd6\xbb\xa2\x2c\x95\x5a\xad\x60\x8f\xa1\x47\x7f\xc8\xa1\x13\x64\x92\x21\x73\x0f\x39\x12\x2a\x17\x1d\x1f\x08\xc9\x23\xd3\xd9\xe5\x9a\x6a\x48\x3a\x11\xf7\x63\xe4\x50\x53\xa4\xc6\x49\xca\x4a\x75\x43\x05\x3f\x30\x5a\x17\xf8\x8a\x53\x4d\x46\xaf\x51\x4a\x0e\xdc\x5c\xff\xf4\xc6\x70\x6f\x58\xee\x6e\x17\x6b\xec\xb7\xe1\xf2\x70\x8f\x37\x05\x00\x91\x64\xac\x19\xf6\x09\x8f\xff\x38\x2c\xf5\xcc\x60\x9f\xe6\x85\xe9\xfe\x59\xf8\xf5\x2c\x3e\xe1\x93\xd3\x37\x7f\x39\x29\xec\xbe\x8c\xd4\xfb\x47\x00\x00\x00\xff\xff\x68\x0c\xb5\xcb\x39\x01\x00\x00"

func idtablestakingDelegationGet_delegator_rewardedCdcBytes() ([]byte, error) {
	return bindataRead(
		_idtablestakingDelegationGet_delegator_rewardedCdc,
		"idTableStaking/delegation/get_delegator_rewarded.cdc",
	)
}

func idtablestakingDelegationGet_delegator_rewardedCdc() (*asset, error) {
	bytes, err := idtablestakingDelegationGet_delegator_rewardedCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "idTableStaking/delegation/get_delegator_rewarded.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xa4, 0xe2, 0x1d, 0xb1, 0x8f, 0x92, 0x3c, 0xb3, 0x88, 0xe3, 0xf7, 0x4a, 0xc, 0xdd, 0x45, 0xa6, 0x56, 0x82, 0x78, 0xe4, 0x42, 0xbb, 0xa3, 0xf8, 0x81, 0xc0, 0x20, 0x10, 0x3b, 0x3f, 0x1d, 0x5e}}
	return a, nil
}

var _idtablestakingDelegationGet_delegator_stakedCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x8f\x41\x4b\x03\x31\x10\x85\xef\xf9\x15\xef\x68\x41\x5a\x51\xf1\x50\xf0\x50\x49\x0b\x01\xf1\xe0\xa6\x07\x8f\xd9\xee\x64\x1b\x36\x3b\x59\x92\x59\x2c\x88\xff\x5d\xb6\x8b\x55\xc4\xd3\x30\x8f\xc7\xf7\xf8\x42\x3f\xa4\x2c\xd8\xc5\xf4\x6e\xb4\x75\x75\xa4\x4a\x5c\x17\xb8\x85\xcf\xa9\xc7\xcd\xc9\xe8\xed\x8b\x35\xf6\xcd\x6e\x9e\x9e\xb7\x1b\xad\x5f\xb7\x55\xa5\xd4\x6a\x05\x7b\x0c\x05\xe5\x90\xc3\x20\xc8\x24\x63\xe6\x02\x39\x12\x6a\x17\x1d\x1f\x08\xc9\xa3\x88\xeb\xa8\x81\xa4\x8e\xb8\x4c\x81\x43\x43\x91\x5a\x27\x29\x2b\x35\x8c\x35\xfc\xc8\xe8\x5d\xe0\x2b\x4e\x0d\x19\xbd\x46\x25\x39\x70\x7b\xfd\xd3\x9b\xc2\xbd\x61\xb9\xbb\x5d\xac\xb1\xdf\x85\xd3\xc3\x3d\x3e\x14\x00\x44\x92\xa9\x66\xd8\x27\x3c\xfe\x63\xb0\xd4\x17\x06\xfb\x74\x59\x98\xef\x9f\x85\x5f\xcf\xe2\x0c\x9f\x8d\xbe\xf9\xcb\x59\xa1\x3a\xfb\xa8\xcf\xaf\x00\x00\x00\xff\xff\xb5\xc8\x55\xe1\x35\x01\x00\x00"

func idtablestakingDelegationGet_delegator_stakedCdcBytes() ([]byte, error) {
	return bindataRead(
		_idtablestakingDelegationGet_delegator_stakedCdc,
		"idTableStaking/delegation/get_delegator_staked.cdc",
	)
}

func idtablestakingDelegationGet_delegator_stakedCdc() (*asset, error) {
	bytes, err := idtablestakingDelegationGet_delegator_stakedCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "idTableStaking/delegation/get_delegator_staked.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xfb, 0x1a, 0x98, 0xb2, 0xb2, 0x34, 0xae, 0x31, 0x6d, 0x97, 0xe8, 0xb4, 0x15, 0x21, 0x0, 0xd9, 0xcc, 0x76, 0xb5, 0x42, 0x72, 0xc5, 0x28, 0x29, 0x17, 0x94, 0x27, 0x49, 0x89, 0x4a, 0x83, 0xbb}}
	return a, nil
}

var _idtablestakingDelegationGet_delegator_unstakedCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x8f\xc1\x4a\xf4\x40\x10\x84\xef\xf3\x14\x75\xfc\x17\x7e\x76\x45\xc5\xc3\x82\x87\x95\xc9\xc2\x80\x78\x30\xc9\xc1\xe3\x24\xe9\x64\x87\x4c\xba\xc3\xa4\x83\x0b\xe2\xbb\x4b\x0c\xae\x22\x9e\x9a\x2e\x8a\xaf\xf8\xc2\x30\x4a\x52\x1c\xa3\xbc\x3a\x5b\xf8\x2a\x52\xae\xbe\x0f\xdc\xa1\x4d\x32\xe0\xea\xec\x6c\xf6\x54\xb8\xe2\xa5\x38\x3c\x3c\x66\x07\x6b\x9f\xb3\x3c\x37\x66\xb7\x43\x71\x0a\x13\xa6\x3a\x85\x51\x91\x48\xe7\xc4\x13\xf4\x44\xa8\x7c\xf4\x5c\x13\xa4\xc5\xcc\x51\xea\x9e\x1a\xa8\xf4\xc4\xd3\x12\x79\x34\x14\xa9\xf3\x2a\xc9\x98\x71\xae\xd0\xce\x8c\xc1\x07\xfe\xc7\xd2\x90\xb3\x7b\xe4\x9a\x02\x77\xff\xbf\x7b\x4b\x58\x3a\xd6\x9b\xeb\xcd\x1e\xe5\x31\x9c\xef\x6e\xf1\x66\x00\x20\x92\x2e\x35\xc7\xad\xe0\xfe\x0f\x87\xad\xbd\x30\xb8\x95\xcb\xc2\x7a\x7f\x2d\xfc\x78\x36\x9f\xf0\xd5\xe9\x8b\xbf\x5d\x15\x4a\x9e\xd4\xf7\xd4\x98\xf7\x8f\x00\x00\x00\xff\xff\x38\x38\xde\x6a\x39\x01\x00\x00"

func idtablestakingDelegationGet_delegator_unstakedCdcBytes() ([]byte, error) {
	return bindataRead(
		_idtablestakingDelegationGet_delegator_unstakedCdc,
		"idTableStaking/delegation/get_delegator_unstaked.cdc",
	)
}

func idtablestakingDelegationGet_delegator_unstakedCdc() (*asset, error) {
	bytes, err := idtablestakingDelegationGet_delegator_unstakedCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "idTableStaking/delegation/get_delegator_unstaked.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xd2, 0xbf, 0x6e, 0x9a, 0xf7, 0x0, 0xbe, 0xa, 0x1e, 0x24, 0x27, 0xfd, 0x32, 0x5a, 0xe9, 0x93, 0xd, 0x78, 0x58, 0x6b, 0x3b, 0x89, 0x34, 0x82, 0x8, 0x4a, 0x9e, 0x8a, 0x86, 0xe9, 0x4b, 0xd2}}
	return a, nil
}

var _idtablestakingDelegationGet_delegator_unstakingCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x8f\xc1\x4a\x33\x31\x14\x85\xf7\x79\x8a\xb3\xfc\x0b\x3f\xad\xa8\xb8\x28\xb8\xa8\x64\x0a\x01\x71\xe1\x64\x16\x2e\x33\x6d\x32\x0d\xcd\xdc\x3b\x24\x77\xb0\x20\xbe\xbb\x8c\x63\xab\x88\xab\xcb\x3d\x1c\xbe\xc3\x17\xfb\x81\xb3\x60\x9b\xf8\xd5\x68\xeb\xda\xe4\x6b\x71\xc7\x48\x1d\x42\xe6\x1e\x57\x27\xa3\xab\x27\x6b\xec\x8b\xdd\x3c\x3c\x56\x1b\xad\x9f\xab\xba\x56\x6a\xb5\x82\x3d\xc4\x82\xb2\xcb\x71\x10\x64\x2f\x63\xa6\x02\x39\x78\xb4\x2e\x39\xda\x79\x70\xc0\x48\xe5\x0b\x26\x7c\xf4\x54\xa6\xcc\x61\xef\x93\xef\x9c\x70\x56\x6a\x18\x5b\x84\x91\xd0\xbb\x48\xff\x88\xf7\xde\xe8\x35\x6a\xc9\x91\xba\xff\xdf\xbd\x29\x6c\x0c\xc9\xcd\xf5\x62\x8d\x66\x1b\x4f\x77\xb7\x78\x53\x00\x90\xbc\x4c\x35\x43\x81\x71\xff\x87\xc4\x52\x5f\x18\x14\xf8\xb2\x30\xdf\x5f\x0b\x3f\x9e\xc5\x27\x7c\x96\x3a\xf3\x97\xb3\x42\x73\x56\x52\xef\x1f\x01\x00\x00\xff\xff\x59\x64\x08\x22\x3b\x01\x00\x00"

func idtablestakingDelegationGet_delegator_unstakingCdcBytes() ([]byte, error) {
	return bindataRead(
		_idtablestakingDelegationGet_delegator_unstakingCdc,
		"idTableStaking/delegation/get_delegator_unstaking.cdc",
	)
}

func idtablestakingDelegationGet_delegator_unstakingCdc() (*asset, error) {
	bytes, err := idtablestakingDelegationGet_delegator_unstakingCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "idTableStaking/delegation/get_delegator_unstaking.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xf8, 0xcc, 0xb4, 0xc7, 0x5b, 0x20, 0xa9, 0x46, 0xd8, 0x41, 0x41, 0x21, 0x21, 0x9e, 0x97, 0x29, 0x8a, 0x19, 0x72, 0x4e, 0x64, 0x3, 0x3a, 0xd5, 0x46, 0x41, 0xa6, 0x9f, 0xdf, 0x8d, 0xbb, 0xf6}}
	return a, nil
}

var _idtablestakingDelegationGet_delegator_unstaking_requestCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x8f\xc1\x4a\xf3\x40\x14\x85\xf7\xf3\x14\x67\xf9\x17\x7e\x5a\x51\x71\x51\x70\x51\x99\x14\x06\xc4\x45\x33\x59\xb8\x9c\x34\x37\xe9\xd0\xe4\x4e\x9c\xb9\x83\x05\xf1\xdd\x25\x8d\x56\x11\x57\x97\x7b\x38\x7c\x87\xcf\x0f\x63\x88\x82\x6d\x1f\x5e\x8d\xb6\xae\xee\xa9\x14\x77\xf4\xdc\xa1\x8d\x61\xc0\xd5\xc9\xe8\xe2\xc9\x1a\xfb\x6c\x37\x0f\x8f\xc5\x46\xeb\x5d\x51\x96\x4a\xad\x56\xb0\x07\x9f\x90\xf6\xd1\x8f\x82\x48\x92\x23\x27\xc8\x81\x50\xbb\xde\xf1\x9e\x10\x5a\x64\x4e\x9f\x30\x09\x47\xe2\x34\x65\x0e\x0d\xf5\xd4\x39\x09\x51\xa9\x31\xd7\x68\x33\x63\x70\x9e\xff\x71\x68\xc8\xe8\x35\x4a\x89\x9e\xbb\xff\xdf\xbd\x29\xac\x0c\xcb\xcd\xf5\x62\x8d\x6a\xeb\x4f\x77\xb7\x78\x53\x00\xd0\x93\x4c\x35\xc3\x6d\xc0\xfd\x1f\x12\x4b\x7d\x61\x70\x1b\x2e\x0b\xf3\xfd\xb5\xf0\xe3\x59\x9c\xe1\xb3\xd4\x17\x7f\x39\x2b\xec\xe8\x25\x53\x12\x6a\x6c\xa8\xce\x76\xa4\xde\x3f\x02\x00\x00\xff\xff\xd5\x52\xe0\xa9\x44\x01\x00\x00"

func idtablestakingDelegationGet_delegator_unstaking_requestCdcBytes() ([]byte, error) {
	return bindataRead(
		_idtablestakingDelegationGet_delegator_unstaking_requestCdc,
		"idTableStaking/delegation/get_delegator_unstaking_request.cdc",
	)
}

func idtablestakingDelegationGet_delegator_unstaking_requestCdc() (*asset, error) {
	bytes, err := idtablestakingDelegationGet_delegator_unstaking_requestCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "idTableStaking/delegation/get_delegator_unstaking_request.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x3a, 0x11, 0x6f, 0xac, 0xf2, 0xc9, 0x38, 0x6a, 0x2f, 0x9d, 0x96, 0xd5, 0xe2, 0xfd, 0x20, 0x61, 0x12, 0xcd, 0xc8, 0xa8, 0x97, 0x82, 0x66, 0xa4, 0xec, 0xda, 0xde, 0xae, 0xdb, 0xc0, 0x2b, 0xf1}}
	return a, nil
}

var _idtablestakingDelegationRegister_delegatorCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x8f\x41\x6b\x32\x31\x10\x86\xef\xfb\x2b\xe6\xf4\xb1\xc2\xa7\xdb\xb3\x48\x61\xdb\x58\x58\x28\x22\xdd\xbd\xf4\x38\xc6\x31\xa6\xc6\xcc\x32\x8e\xb5\x20\xfe\xf7\x12\x5b\xc2\xb6\x78\x69\x2e\x99\xc3\x33\xef\xfb\x8c\xdf\xf7\x2c\x0a\x4f\x81\x4f\x8d\xe9\x70\x15\xa8\x55\xdc\xf9\xe8\x60\x23\xbc\x87\xbb\x8f\xc6\xcc\x17\x5d\xd3\xbd\x76\xf5\xc3\xf3\xbc\x36\xe6\x65\xde\xb6\x45\xa1\x82\xf1\x80\x56\x3d\xc7\x32\xf2\x9a\x1a\x33\x85\x56\xc5\x47\x37\x82\x73\x51\x00\x00\xf4\x42\x3d\x0a\x95\x68\xad\x4e\xa1\x3e\xea\xb6\xb6\x96\x8f\x51\x33\x91\x5e\x55\xc1\xa3\x10\x2a\x01\x42\xa4\x13\xac\x29\x90\x43\x65\x01\x5e\xbd\x91\x55\xd8\xb0\x80\x6e\x09\x52\x4b\xde\x0a\xa4\x89\x36\x19\x9e\x8d\x6f\x9c\x30\x11\x72\xfe\xa0\x24\x8b\x01\x9a\x75\xbf\xfe\xd1\x0f\x95\x56\x59\xe8\x5a\xf7\xdb\x23\x53\xe9\x9c\xc9\x01\xdf\xa9\x9c\x8d\x87\x0a\xff\x41\x79\x7a\x4b\x22\x13\x29\x1c\x1d\x2d\x51\xb7\x83\xd6\x6b\x5e\xf0\x71\x37\xfb\x77\xbe\xb1\xbd\xe0\x35\xe5\x84\xe5\x71\x15\xbc\xbd\xdc\x97\x55\x7f\x9d\xaa\x4d\xe0\xd3\x37\x39\x14\x41\x71\xa4\x7f\x90\x49\x1e\x97\xa2\xb8\x7c\x06\x00\x00\xff\xff\xf3\x74\xf7\xf1\x0d\x02\x00\x00"

func idtablestakingDelegationRegister_delegatorCdcBytes() ([]byte, error) {
	return bindataRead(
		_idtablestakingDelegationRegister_delegatorCdc,
		"idTableStaking/delegation/register_delegator.cdc",
	)
}

func idtablestakingDelegationRegister_delegatorCdc() (*asset, error) {
	bytes, err := idtablestakingDelegationRegister_delegatorCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "idTableStaking/delegation/register_delegator.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x3f, 0xc, 0x8a, 0xa9, 0xbb, 0xce, 0xd0, 0xa9, 0x9b, 0x8e, 0x98, 0xaa, 0x6e, 0x55, 0x2e, 0x18, 0xa0, 0x6a, 0x59, 0x99, 0xea, 0x3f, 0x1a, 0x6b, 0x7a, 0x55, 0xa4, 0x55, 0xf0, 0xcc, 0x50, 0x0}}
	return a, nil
}

var _idtablestakingDelegationRegister_many_delegatorsCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x50\x4d\x6b\xc2\x40\x14\xbc\xef\xaf\x98\xa3\x52\xbf\x7a\x0d\x7a\x48\x1b\x0b\x81\x22\xa5\xc9\xa5\x88\x87\x35\x3e\x93\x6d\xe3\x6e\x78\x79\x6a\x41\xfc\xef\x65\x53\xb5\x26\xf4\x9d\x96\x79\x6f\x66\x67\xc6\xec\x2a\xc7\x82\x97\xd2\x1d\xe3\x28\xd5\xeb\x92\x12\xd1\x5f\xc6\xe6\xd8\xb2\xdb\x61\xf2\x1d\x47\xf3\x45\x1a\xa7\x1f\x69\xf8\xf4\x3a\x0f\xa3\xe8\x7d\x9e\x24\x4a\x09\x6b\x5b\xeb\x4c\x8c\xb3\x3d\xeb\x36\x14\x47\x75\x80\x65\x22\x6c\x6c\xbe\x1a\xa0\xd2\x52\x78\xe0\x4d\x4b\xb1\xea\xe3\xa4\x14\x00\x54\x4c\x95\x66\xea\xe9\x2c\x93\x00\xe1\x5e\x8a\x30\xcb\xdc\xde\xca\xed\xc2\xcf\x41\x33\x0c\x66\x98\xfc\x41\x5b\xc7\x8d\x24\x8c\xfd\x95\xc6\xe9\xb6\xf3\x33\x1e\xe3\x99\x49\x0b\x41\xc3\xd2\x11\x1b\x2a\x29\xd7\xe2\x18\x6e\xfd\x49\x99\x34\x02\x52\x10\xbc\xd5\x16\xb3\x24\xf1\x8c\xe8\x46\x98\x0e\xff\xe9\x62\xc4\x94\x9b\x5a\x88\x17\x77\xa7\x97\xdc\x01\x2e\xf9\x97\x66\xd5\x57\x5d\x5b\x89\x38\xa6\xe6\xeb\xae\xa7\xd6\xa5\x6f\x64\x54\xeb\x03\xf5\xa6\xc3\x7b\x3b\x03\x88\x0b\x9a\xc8\x1d\x69\x5f\x90\xc1\x03\x1e\xdb\xe8\xd6\x2f\x66\x57\x47\xa3\x92\x6c\x2e\x45\xa7\xac\x2b\x7d\xd2\x42\xcf\xaa\xfd\x3a\x2b\x75\xfe\x09\x00\x00\xff\xff\x03\xdc\x3f\xa1\x1c\x02\x00\x00"

func idtablestakingDelegationRegister_many_delegatorsCdcBytes() ([]byte, error) {
	return bindataRead(
		_idtablestakingDelegationRegister_many_delegatorsCdc,
		"idTableStaking/delegation/register_many_delegators.cdc",
	)
}

func idtablestakingDelegationRegister_many_delegatorsCdc() (*asset, error) {
	bytes, err := idtablestakingDelegationRegister_many_delegatorsCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "idTableStaking/delegation/register_many_delegators.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x32, 0x2d, 0xcf, 0xd4, 0x5b, 0xae, 0x30, 0xda, 0x82, 0x6d, 0x9a, 0x90, 0x9e, 0x28, 0xf3, 0x22, 0xc4, 0x89, 0x4f, 0x79, 0xcd, 0x84, 0xaa, 0x69, 0x21, 0x2e, 0xc8, 0x9f, 0xdf, 0x6a, 0xd7, 0x3e}}
	return a, nil
}

var _idtablestakingNodeRegister_many_nodesCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x93\x41\x6f\xda\x40\x10\x85\xef\xfe\x15\xa3\x1c\x2a\xa3\x26\x90\x4a\x55\x55\xad\x48\x23\x1a\x40\x42\x44\xa4\x02\xb7\x55\x85\x38\x2c\xde\x01\xb6\xb1\x77\xac\xf1\x10\x27\xaa\xf2\xdf\xab\xb5\x05\x38\x4e\xa8\x50\xe7\xe0\xc3\xbe\xb7\xcf\xeb\x7d\x9f\x6d\x9a\x11\x0b\x0c\x13\x2a\x46\xfd\x48\x2f\x13\x9c\x89\xbe\xb7\x6e\x0d\x2b\xa6\x14\x2e\x1f\x47\xfd\xc1\x24\x1a\x45\xbf\xa2\xde\xd7\xdb\x41\xaf\xdf\x9f\x0e\x66\xb3\xa0\xb6\x2b\xa2\x7b\x74\x3b\xf3\xf0\xf6\xee\x67\x74\x37\x1e\x4c\x76\xc6\x40\x58\xbb\x5c\xc7\x62\xc9\x85\xd6\xe4\x0a\xe6\x33\x61\xeb\xd6\x8b\x73\x08\xa0\x36\x4c\x09\x7a\xf5\xfb\xc8\xc9\xe7\xa6\xe8\x50\x0a\x62\x7f\xaa\x9e\x31\x8c\x79\x8e\xc7\x83\x0e\xde\x31\x3e\x1d\xb7\xe5\xd5\x57\xfe\xd3\xa3\x53\xda\x3a\x29\x4f\x35\xb4\x8f\x9f\x3e\x36\xf5\x4c\xcb\xc6\xab\xdf\xb4\x6c\x16\x2d\xf8\x13\x94\x6a\xc6\x98\x69\xc6\x50\xc7\xb1\x28\xe8\x6d\x65\xd3\x8b\x63\x1f\xb4\x77\xf8\x79\xd0\x0c\x16\xae\xe0\xf2\xb0\xb4\x22\x2e\x23\xc1\xba\x2a\xba\xee\xf7\x93\xa0\xc0\x6a\x77\xe5\x53\x5c\xc1\x15\xf8\x97\xb4\x97\xc4\x4c\x45\xf7\xdd\xbe\x8e\xf6\x0f\xbd\x4d\xe4\x4b\xe8\x5b\x51\xd0\xc9\x85\x58\xaf\xb1\xb3\xdf\x5b\xca\xad\x17\xd9\x7e\xae\xaf\x21\xd3\xce\xc6\xe1\xd9\x0d\x6d\x13\x03\x8e\x04\xaa\x6c\x60\x5c\x21\xa3\x8b\x11\x84\xc0\xb7\x0c\x65\xc6\x59\xeb\xf5\x09\x1d\x99\x92\x21\x64\xe8\x5e\xbc\x01\x56\x5b\x1b\x33\x21\x83\x53\x8c\x89\x4d\x68\x8d\x02\x6b\xf2\xb9\x6d\xde\xee\xb1\xf1\xa4\xa8\x8a\x97\xd3\x37\xbd\x22\x48\xbd\x05\xd5\xff\xe4\x8d\xf1\x49\x35\xa0\x3b\x3d\xe6\x40\xa1\xaa\x13\x79\x7a\x80\xf8\x3a\xf3\x1b\x4a\x53\x2b\x82\x46\x41\xf7\xa2\x4e\x48\xbb\xb0\xb2\x31\xac\x8b\xb0\x62\x59\xed\x98\x9e\xdb\x45\xab\xd1\x5d\xa7\x03\x33\x21\x46\x90\x0d\x96\x25\x02\x2d\x7f\x63\x2c\x2f\x7f\x09\xcf\x5b\xae\x1f\x30\xec\x5e\x1c\x8a\x3e\x07\x21\x55\x32\xdb\xc8\xf4\x84\x5b\x78\x0f\x1f\xf6\xab\xcf\x41\xf5\x0c\x9e\xff\x06\x00\x00\xff\xff\xdd\xdb\x6b\x92\x7a\x04\x00\x00"

func idtablestakingNodeRegister_many_nodesCdcBytes() ([]byte, error) {
	return bindataRead(
		_idtablestakingNodeRegister_many_nodesCdc,
		"idTableStaking/node/register_many_nodes.cdc",
	)
}

func idtablestakingNodeRegister_many_nodesCdc() (*asset, error) {
	bytes, err := idtablestakingNodeRegister_many_nodesCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "idTableStaking/node/register_many_nodes.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xbc, 0xdd, 0x29, 0x52, 0x71, 0x4c, 0xb3, 0x3c, 0x50, 0xcb, 0xb6, 0xc7, 0xd6, 0x56, 0xd, 0xe5, 0x54, 0x16, 0x55, 0x61, 0x26, 0x36, 0xf5, 0xbc, 0xe5, 0x81, 0x14, 0x77, 0x22, 0x3, 0xdf, 0x93}}
	return a, nil
}

var _idtablestakingNodeRegister_nodeCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x53\x41\x6f\xe2\x3c\x10\xbd\xe7\x57\x8c\x7a\xa8\x82\xd4\xc2\x77\xf8\xb4\x5a\x45\xb4\x15\x5b\xa8\x84\x5a\xd1\x0a\xd2\x5d\xed\xd1\xd8\x13\xf0\x12\x3c\x91\x3d\xd9\x14\x21\xfe\xfb\xca\x89\x02\x01\x4a\x05\x39\x04\x13\xbf\xf7\x3c\x33\xef\x59\x2f\x33\xb2\x0c\x4f\x29\x15\xc3\x7e\x2c\xa6\x29\x4e\x58\x2c\xb4\x99\x41\x62\x69\x09\xff\x7d\x0c\xfb\x83\x51\x3c\x8c\x7f\xc7\xbd\x1f\x2f\x83\x5e\xbf\x3f\x1e\x4c\x26\x41\x83\x15\xd3\x02\x4d\x0d\x7e\x7a\x79\xfd\x15\xbf\x3e\x0f\x46\x35\x30\xe8\x74\x20\x9e\x6b\x07\x6c\x85\x71\x42\xb2\x26\x03\xd2\xa2\x60\x74\x20\xc0\x60\x01\x86\x14\x82\x63\x9b\x4b\x06\x9a\xfe\x41\xc9\x9e\x24\x8c\x82\x3c\x53\x25\x8e\xe7\x08\x99\xa5\x8c\x1c\x2a\x18\x2a\x34\xac\x79\x05\x65\xb1\x41\xd0\x10\x0e\xb5\x8a\x60\xc2\x56\x9b\xd9\x0d\x04\xd0\x78\x2c\xa5\x18\xc1\xfb\xd0\xf0\xf7\x83\x1d\x83\x5c\x90\xf5\x0d\xf7\x94\xb2\xe8\xdc\x09\x85\x1d\xee\x19\x57\x27\x30\xae\x9a\xdc\x69\x80\x58\x52\x6e\x38\x82\xf7\x27\xfd\xf1\xed\xff\x16\xac\x83\x72\x3b\x45\x86\xa4\x1e\xe5\x18\x93\x08\xae\xb7\x93\x6d\xff\x14\x79\xca\x15\x2e\xb3\x98\x09\x8b\xa1\x90\x92\x23\xe8\xe5\x3c\xef\x49\xe9\x15\xb7\x4a\x65\x15\x98\x26\xed\xa6\x1c\xdc\x81\x67\xb4\xa7\x64\x2d\x15\xdd\x43\xed\xfb\xd0\x9b\x17\x41\xc7\x31\x59\x31\xc3\xce\x96\x5b\x6e\xb7\xf6\x3a\x78\x78\x80\x4c\x18\x2d\xc3\xab\x47\xca\x53\x05\x86\x18\x2a\x5d\xb0\x98\xa0\x45\x23\x11\x98\xc0\x07\x01\x4a\xfe\x55\x6b\x57\x9a\x6f\xd4\xdb\xed\x23\x86\x16\xba\xb7\x9f\xe4\xae\x2d\x94\x1a\x91\xc2\x31\x4a\xb2\xaa\xb4\x54\xab\x83\x39\x9e\x7a\x2a\x9b\xfd\xfb\x4c\xc2\x27\xee\x1f\x7d\xba\x58\xaa\xf4\x7f\xef\xef\x99\x12\xcd\xfc\xec\xd6\x67\x92\xd9\x3b\xe6\x1e\x69\xb9\xd4\xcc\xa8\x22\xe8\xde\x1e\x25\xa1\x5d\x68\x9e\x2b\x2b\x8a\xb0\x4e\x62\xf5\xdb\x6a\x78\xb4\x5d\xe8\xe4\x38\x36\x07\x56\x8d\xb6\x5e\xd6\x21\xfa\x12\x34\xa9\x02\xf6\x26\x78\xde\x82\xbb\x3b\x30\x3a\x85\xf5\xfe\x05\xf1\x07\x3a\xf1\x17\xc3\xee\xed\x2e\x28\x37\xc0\x74\x81\x74\x70\x2c\x99\x6a\xb3\xe8\x5e\xaf\xbf\x94\x78\xcb\xa7\xa9\x96\x9b\xfb\xf0\x0c\x94\x3f\xe7\x06\x58\xd8\x19\xf2\x25\x95\xd5\x45\x6d\x00\x53\x87\x07\xcd\x2b\x74\x6c\x69\xd5\xb8\x21\x3b\x7c\x50\xbd\x37\xff\x02\x00\x00\xff\xff\x5f\x0e\x00\xc0\xaf\x05\x00\x00"

func idtablestakingNodeRegister_nodeCdcBytes() ([]byte, error) {
	return bindataRead(
		_idtablestakingNodeRegister_nodeCdc,
		"idTableStaking/node/register_node.cdc",
	)
}

func idtablestakingNodeRegister_nodeCdc() (*asset, error) {
	bytes, err := idtablestakingNodeRegister_nodeCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "idTableStaking/node/register_node.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xd, 0x88, 0x9, 0x25, 0xf6, 0xf4, 0x7e, 0xa8, 0xdd, 0xe8, 0x45, 0xf3, 0x81, 0x2f, 0x4f, 0x3b, 0x1c, 0x4c, 0xd8, 0x3a, 0x60, 0xc6, 0x3d, 0xd, 0x55, 0x3f, 0xa4, 0x20, 0x48, 0x3e, 0x2e, 0x6e}}
	return a, nil
}

var _idtablestakingNodeRequest_unstakeCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x91\x31\x6f\xe2\x40\x10\x85\x7b\xff\x8a\x11\xc5\xc9\x34\xf6\x15\xa7\x2b\xac\xbb\x20\x27\x06\x09\x09\xa1\x08\x9b\x22\xe5\xb0\x1e\x83\x83\xbd\xe3\x8c\xc7\x01\x29\xe2\xbf\x47\x8b\xc1\x4a\x44\x14\xe5\x35\xb3\xc5\xee\x9b\x6f\xdf\x2b\xeb\x86\x45\x61\x56\xf1\x61\x9e\x64\xb8\xa9\x28\x55\xdc\x97\x76\x0b\x85\x70\x0d\xbf\x8f\xf3\x64\xba\xcc\xe6\xd9\x53\x16\xdf\x2f\xa6\x71\x92\xac\xa6\x69\xea\x79\x9e\x0a\xda\x16\x8d\x96\x6c\x7d\xac\xb9\xb3\x1a\xc1\x7a\x56\x1e\xff\xfe\x19\xc3\x9b\xe7\x01\x00\x84\x21\x2c\xd8\x60\x05\xaf\x28\xa5\x73\x86\x82\x05\x10\x84\x0a\x12\xb2\x86\x40\x19\x74\x47\x60\x39\x27\xe0\xcd\x33\x19\x3d\x3f\xac\x48\xa1\x55\xdc\x93\xac\xa8\x88\xe0\xd7\x2d\x5c\xb0\xe4\xfc\x7c\x26\xe9\x77\x35\x42\x0d\x0a\xf9\x68\x8c\x46\x10\x77\xba\x8b\x8d\x71\x54\x8e\x06\x2e\x0a\x43\xd8\xb0\x08\x1f\x7e\x02\xe1\xd4\x52\x55\x04\x03\x09\xfc\x07\x67\x1f\xf4\x1e\xff\xbe\xc7\xba\xf3\x5d\x7e\xd1\x17\xc1\x7e\xb8\x94\x2a\x0b\x6e\xe9\x11\x75\x37\x1e\x96\x3a\x4d\x26\xd0\xa0\x2d\x8d\x3f\x7a\xe0\xae\xca\xc1\xb2\x5e\xd1\x3f\x81\xb7\x97\xae\x30\xaf\x4b\x3b\x1a\xf7\x59\x9c\xfa\x41\x47\x32\x9d\xd2\xb5\x8d\xdb\xff\x04\x42\x2f\x1d\xb5\xba\xb6\x17\x9b\xa1\xc8\x7e\x0e\x76\xa7\xf7\x00\x00\x00\xff\xff\x65\xbf\x23\x0e\x25\x02\x00\x00"

func idtablestakingNodeRequest_unstakeCdcBytes() ([]byte, error) {
	return bindataRead(
		_idtablestakingNodeRequest_unstakeCdc,
		"idTableStaking/node/request_unstake.cdc",
	)
}

func idtablestakingNodeRequest_unstakeCdc() (*asset, error) {
	bytes, err := idtablestakingNodeRequest_unstakeCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "idTableStaking/node/request_unstake.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xba, 0x93, 0xf7, 0xfd, 0x74, 0xe4, 0xb4, 0x10, 0x8c, 0xbb, 0x7c, 0x49, 0xa8, 0x1b, 0x44, 0x12, 0x83, 0xb, 0x97, 0xf1, 0x30, 0xf8, 0xd6, 0x58, 0xef, 0x5a, 0xe9, 0x88, 0x94, 0xdf, 0x7, 0xd9}}
	return a, nil
}

var _idtablestakingNodeStake_new_tokensCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x92\x41\x8f\x94\x40\x10\x85\xef\xfc\x8a\xca\x1e\x0c\x73\x10\x3c\x18\x0f\x93\xd5\x0d\x0a\x93\x4c\x9c\xb0\x66\x41\x8d\xc7\x9a\xa6\x58\xda\x81\x2e\xd2\x14\x32\x89\xd9\xff\x6e\x1a\x16\x64\x33\x1b\x63\xb6\x2e\xdd\x84\xf7\xba\xbf\x7e\x55\xba\x69\xd9\x0a\xec\x6a\x1e\xf6\x71\x8e\xc7\x9a\x32\xc1\x93\x36\xf7\x50\x5a\x6e\xe0\xcd\x79\x1f\x27\x69\xbe\xcf\x7f\xe4\xd1\xc7\x43\x12\xc5\xf1\x5d\x92\x65\xde\xca\x95\xf3\x89\xcc\x2c\xde\x1d\x6e\xbf\xe7\xb7\x9f\x93\x74\x16\x7a\x9e\x58\x34\x1d\x2a\xd1\x6c\x7c\x6c\xb8\x37\xb2\x85\xaf\x3b\x7d\x7e\xf7\x76\x03\xbf\x3d\x0f\x00\x20\x0c\xe1\xc0\x0a\x6b\xf8\x85\x56\x3b\x04\x28\xd9\x02\x82\xa5\x92\x2c\x19\x45\x20\x0c\x52\x11\x18\x2e\x08\xf8\xf8\x93\x94\x8c\xc6\x9a\x04\x3a\xc1\x13\xd9\x3b\x2a\xb7\xf0\xea\xf2\x15\x41\xca\xc5\xb8\x27\xeb\x2d\x96\x72\xc6\xfe\xeb\x1a\x3f\x83\x6f\xd8\xd7\x32\xe9\x5a\x4b\x2d\x5a\xf2\x51\x29\xd9\x42\xd4\x4b\x15\x29\xe5\xe8\x1d\x35\x3c\x56\x18\xc2\x91\xad\xe5\xe1\x7f\x60\x5d\x75\x54\x97\xc1\x42\x0c\xef\xc1\x1d\x1f\x4c\x67\x5c\xff\x1b\xff\x83\xef\x32\xde\x3e\xd3\xa9\x95\x28\x13\xb6\x78\x4f\x5f\x50\xaa\xcd\x72\xa9\xab\x9b\x1b\x68\xd1\x68\xe5\x5f\x7d\xe2\xbe\x2e\xc0\xb0\xcc\xe8\x4f\xc0\xbb\xc7\xe6\x63\xd1\x68\x73\xb5\xf1\x9e\x92\xaf\x83\x7b\x0e\x7e\x95\xe2\x8c\x1b\x76\x13\x52\xb8\x78\xc7\xdf\x2f\xa3\x73\xe3\x05\xa3\x7f\x46\x7b\x98\x16\x3a\x93\xea\x85\xe6\x81\xba\x8c\x7a\xda\xa5\x34\x21\x74\xfe\xf5\xeb\x8b\x07\x05\x83\x96\xaa\xb0\x38\x2c\x63\x3a\xad\x9b\xe5\xaa\x87\x3f\x01\x00\x00\xff\xff\xaf\x11\x7b\x27\x2d\x03\x00\x00"

func idtablestakingNodeStake_new_tokensCdcBytes() ([]byte, error) {
	return bindataRead(
		_idtablestakingNodeStake_new_tokensCdc,
		"idTableStaking/node/stake_new_tokens.cdc",
	)
}

func idtablestakingNodeStake_new_tokensCdc() (*asset, error) {
	bytes, err := idtablestakingNodeStake_new_tokensCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "idTableStaking/node/stake_new_tokens.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x95, 0x77, 0xa8, 0x37, 0x8d, 0xbf, 0xc4, 0xb3, 0x88, 0x38, 0xfc, 0x4f, 0x33, 0x8e, 0x10, 0xab, 0x31, 0xd1, 0x0, 0xf2, 0x11, 0x2f, 0xd3, 0xe2, 0x52, 0x3f, 0xf2, 0x20, 0xf8, 0xe0, 0x96, 0x7d}}
	return a, nil
}

var _idtablestakingNodeStake_rewarded_tokensCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x91\x41\x6b\xea\x50\x10\x85\xf7\xf9\x15\x83\x8b\x47\xdc\x98\xb7\x78\xbc\x45\x78\xaf\x92\x36\x0a\x82\x48\x31\xe9\xa2\xcb\xf1\x66\xa2\xb7\x26\x77\xc2\x64\x52\x85\xe2\x7f\x2f\xd7\x68\x68\xb1\x94\x9e\xcd\xcc\x22\x39\xf3\xdd\x73\x6c\xdd\xb0\x28\xcc\x2b\x3e\x2c\xd2\x1c\x37\x15\x65\x8a\x7b\xeb\xb6\x50\x0a\xd7\xf0\xfb\xb8\x48\x67\xab\x7c\x91\x3f\xe7\xc9\xfd\x72\x96\xa4\xe9\x7a\x96\x65\x41\x10\xa8\xa0\x6b\xd1\xa8\x65\x17\x62\xcd\x9d\xd3\x18\x9e\xe6\xf6\xf8\xf7\xcf\x18\xde\x82\x00\x00\x20\x8a\x60\xc9\x06\x2b\x78\x45\xb1\xde\x19\x4a\x16\x40\x10\x2a\x49\xc8\x19\x02\x65\xd0\x1d\x81\xe3\x82\x80\x37\x2f\x64\xf4\xfc\x63\x45\x0a\xad\xe2\x9e\x64\x4d\x65\x0c\xbf\x6e\xe1\x26\x2b\x2e\xce\x3b\x49\x7f\xab\x11\x6a\x50\x28\x44\x63\x34\x86\xa4\xd3\x5d\x62\x8c\xa7\xf2\x34\x70\x51\x14\xc1\x86\x45\xf8\xf0\x13\x08\xaf\x96\xaa\x72\x32\x90\xc0\x7f\xf0\xf6\x93\xde\xe3\xdf\xf7\x58\x77\xa1\xcf\x2f\xfe\x22\xd8\x0f\x1f\x65\xca\x82\x5b\x7a\x44\xdd\x8d\x87\xa3\x5e\xd3\x29\x34\xe8\xac\x09\x47\x0f\xdc\x55\x05\x38\xd6\x2b\xfa\x27\xf0\xf6\xd2\x15\x16\xb5\x75\xa3\x71\x9f\xc5\xa9\x1f\x74\x24\xd3\x29\x5d\xdb\xb8\x7d\x4f\xbf\xad\xe9\x80\x52\x50\x91\xf3\x9e\x5c\x3b\x74\xd9\xcf\xc1\xf1\xf4\x1e\x00\x00\xff\xff\xd4\xe3\x63\x22\x28\x02\x00\x00"

func idtablestakingNodeStake_rewarded_tokensCdcBytes() ([]byte, error) {
	return bindataRead(
		_idtablestakingNodeStake_rewarded_tokensCdc,
		"idTableStaking/node/stake_rewarded_tokens.cdc",
	)
}

func idtablestakingNodeStake_rewarded_tokensCdc() (*asset, error) {
	bytes, err := idtablestakingNodeStake_rewarded_tokensCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "idTableStaking/node/stake_rewarded_tokens.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x80, 0xd8, 0xd6, 0x8e, 0x1d, 0x42, 0xf9, 0x9c, 0xac, 0x43, 0xc2, 0x32, 0x6a, 0x81, 0xe6, 0xce, 0xc8, 0xeb, 0xc3, 0xed, 0xf6, 0x37, 0x35, 0x0, 0xb8, 0x8b, 0x1c, 0xea, 0x94, 0x25, 0x94, 0x50}}
	return a, nil
}

var _idtablestakingNodeStake_unstaked_tokensCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x91\xc1\x8a\xe2\x40\x10\x86\xef\x79\x8a\x1f\x0f\x4b\xbc\x98\x3d\x2c\x7b\x08\xbb\x23\x99\x89\x82\x20\x1e\x34\x1e\xe6\xd8\x76\x2a\x9a\x31\xe9\x0a\x95\xca\x28\x0c\xbe\xfb\x10\x5b\x03\x83\x30\x4c\x5d\xfe\x82\xa6\xbf\xfe\xba\xaa\xac\x1b\x16\xc5\xbc\xe2\xd3\x22\xcd\xcc\xae\xa2\x8d\x9a\x63\xe9\xf6\x28\x84\x6b\xfc\x3e\x2f\xd2\xd9\x2a\x5b\x64\xaf\x59\xf2\xbc\x9c\x25\x69\xba\x9e\x6d\x36\x41\x10\xa8\x18\xd7\x1a\xab\x25\xbb\xd0\xd4\xdc\x39\x8d\xb1\x9d\x97\xe7\xbf\x7f\xc6\xf8\x08\x02\x00\x88\x22\x2c\xd9\x9a\x0a\xef\x46\xca\x9e\x8c\x82\x05\x06\x42\x05\x09\x39\x4b\x50\x86\x1e\x08\x8e\x73\x02\xef\xde\xc8\xea\xf5\x62\x45\x8a\x56\xcd\x91\x64\x4d\x45\x8c\x5f\x8f\x72\x93\x15\xe7\xd7\x9e\xc4\xbf\xd5\x08\x35\x46\x28\x34\xd6\x6a\x8c\xa4\xd3\x43\x62\x6d\x6f\xd5\xdb\xe0\x56\x51\x84\x1d\x8b\xf0\xe9\x27\x12\x7d\xb5\x54\x15\x93\xc1\x04\xff\xd1\xe3\x27\x9e\xf1\xef\x7b\xad\xa7\xb0\x9f\x5f\x8c\xa8\x55\x16\xb3\xa7\xa8\xa8\xf8\xe4\x8f\xc6\x03\xbf\xaf\xe9\x14\x8d\x71\xa5\x0d\x47\x2f\xdc\x55\x39\x1c\xeb\xdd\xf2\x8b\x63\x7b\x5b\x8b\xc9\xeb\xd2\x8d\xc6\xfe\xdb\x17\x1f\x74\x26\xdb\x29\xdd\x07\xff\xa8\xee\xbb\xad\xbb\x46\x9e\xf1\x91\x5c\x3b\xac\xcd\xe7\x40\xbc\x7c\x06\x00\x00\xff\xff\x64\xf9\x79\xf2\x13\x02\x00\x00"

func idtablestakingNodeStake_unstaked_tokensCdcBytes() ([]byte, error) {
	return bindataRead(
		_idtablestakingNodeStake_unstaked_tokensCdc,
		"idTableStaking/node/stake_unstaked_tokens.cdc",
	)
}

func idtablestakingNodeStake_unstaked_tokensCdc() (*asset, error) {
	bytes, err := idtablestakingNodeStake_unstaked_tokensCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "idTableStaking/node/stake_unstaked_tokens.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xf3, 0x30, 0xa3, 0x9c, 0x9e, 0x73, 0xb7, 0x91, 0xad, 0x93, 0x14, 0x23, 0x72, 0x3b, 0x88, 0xd, 0x59, 0x36, 0x5d, 0xa5, 0x28, 0xc7, 0xb0, 0x54, 0x96, 0x65, 0x40, 0x91, 0xdf, 0x5f, 0x3f, 0x0}}
	return a, nil
}

var _idtablestakingNodeUnstake_allCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x91\x41\x6b\xc2\x40\x10\x85\xef\xf9\x15\x83\x87\x12\x2f\xb1\x67\x69\x2b\x69\x63\x41\x10\x29\x26\x97\x1e\xc7\xcd\x44\xb7\x6e\x76\xc2\x64\x52\x05\xf1\xbf\x97\x24\x1a\x5a\x2c\xa5\x73\xd9\x39\xcc\xbc\xf9\xf6\x3d\x5b\x56\x2c\x0a\xaf\x8e\x0f\x8b\x24\xc3\x8d\xa3\x54\x71\x6f\xfd\x16\x0a\xe1\x12\xee\x8f\x8b\x64\xbe\xca\x16\xd9\x7b\x16\x3f\x2f\xe7\x71\x92\xac\xe7\x69\x1a\x04\x81\x0a\xfa\x1a\x8d\x5a\xf6\x70\x0a\x02\x00\x80\xc9\x04\x96\x6c\xd0\xc1\x27\x8a\x6d\x95\xa0\x60\x01\x04\xa1\x82\x84\xbc\x21\x50\x06\xdd\x11\x78\xce\x09\x78\xf3\x41\x46\xbb\x45\x47\x0a\xb5\xe2\x9e\x64\x4d\xc5\x14\xee\x6e\x61\xa2\x15\xe7\x5d\x4f\xd2\xdf\xaa\x84\x2a\x14\x0a\xd1\x18\x9d\x42\xdc\xe8\x2e\x36\x86\x1b\xaf\x63\x38\x75\x03\x17\xa0\x0d\x8b\xf0\xe1\x3f\x10\x6d\xd5\xe4\x8a\x68\x20\x81\x47\x68\xe5\xa3\x5e\xe3\xe1\x6f\xac\xa7\xb0\xf5\x6b\xfa\x8b\x91\xdf\x86\x52\x65\xc1\x2d\xbd\xa1\xee\xc6\xc3\xd1\xb6\x66\x33\xa8\xd0\x5b\x13\x8e\x5e\xb8\x71\x39\x78\xd6\x2b\xfa\x0f\xf0\xfa\x92\x0d\xe6\xa5\xf5\xa3\x71\xef\xc5\xb9\x7f\xe8\x48\xa6\x51\xba\xa6\x71\xfb\x9f\xa8\xf1\x5d\x1f\x3b\x17\x0e\xab\xe7\xaf\x00\x00\x00\xff\xff\xd1\x51\x7b\x27\x01\x02\x00\x00"

func idtablestakingNodeUnstake_allCdcBytes() ([]byte, error) {
	return bindataRead(
		_idtablestakingNodeUnstake_allCdc,
		"idTableStaking/node/unstake_all.cdc",
	)
}

func idtablestakingNodeUnstake_allCdc() (*asset, error) {
	bytes, err := idtablestakingNodeUnstake_allCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "idTableStaking/node/unstake_all.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x84, 0x9c, 0xa9, 0x97, 0x53, 0x7, 0x36, 0xf0, 0x21, 0x96, 0x21, 0x8c, 0xf0, 0x38, 0x21, 0x9d, 0x94, 0xec, 0xb4, 0xb5, 0x16, 0xf, 0x4d, 0x4d, 0xdc, 0x72, 0xf, 0xdb, 0xfa, 0x21, 0xf9, 0xd8}}
	return a, nil
}

var _idtablestakingNodeWithdraw_reward_tokensCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x92\xc1\x8e\xd3\x40\x0c\x86\xef\x79\x0a\x6b\x0f\xa8\x3d\x90\x70\x40\x1c\xaa\x85\x55\xa1\xad\x54\x51\x75\x51\x1b\x40\x1c\xdd\x19\x67\x3b\x34\x19\x47\x8e\x43\x2a\xa1\x7d\x77\x34\x49\x13\x52\x51\x21\x84\x2f\x4e\x94\xff\xb7\xbf\xd8\x76\x45\xc9\xa2\xb0\xca\xb9\x59\x2f\x52\x3c\xe4\xb4\x57\x3c\x39\xff\x04\x99\x70\x01\xaf\xce\xeb\xc5\x72\x9b\xae\xd3\x6f\xe9\xfc\xfd\x66\x39\x5f\x2c\x76\xcb\xfd\x3e\x1a\xb9\x52\x3e\x91\xef\xc5\xab\xcd\xe3\xd7\xf4\xf1\xe3\x72\xdb\x0b\xa3\x48\x05\x7d\x85\x46\x1d\xfb\x09\x16\x5c\x7b\x9d\xc1\xe7\x95\x3b\xbf\x79\x3d\x85\x9f\x51\x04\x00\x90\x24\xb0\x61\x83\x39\xfc\x40\x71\x01\x01\x32\x16\x40\x10\xca\x48\xc8\x1b\x02\x65\xd0\x23\x81\x67\x4b\xc0\x87\xef\x64\xb4\x35\xe6\xa4\x50\x29\x9e\x48\x76\x94\xcd\xe0\xc5\x9f\x7f\x11\x6f\xd9\xb6\xcf\x24\xd1\x60\xc9\x7a\xec\xdf\xae\xf6\x35\xfe\x82\x75\xae\x9d\xae\x14\x2a\x51\x68\x82\xc6\xe8\x0c\xe6\xb5\x1e\xe7\xc6\x04\xfa\x40\x0d\x97\x48\x12\x38\xb0\x08\x37\xff\x02\x1b\xa2\xa2\x3c\x8b\x07\x62\x78\x0b\xa1\x7c\xdc\xd5\xb8\xff\x3b\xfe\xbb\x49\x98\xf1\xec\xc6\xa6\x46\xa2\xbd\xb2\xe0\x13\x7d\x42\x3d\x4e\x87\xa6\x21\x1e\x1e\xa0\x44\xef\xcc\xe4\xee\x03\xd7\xb9\x05\xcf\xda\xa3\x5f\x81\x57\x97\xe5\xa3\x2d\x9c\xbf\x9b\x46\xd7\xe4\xe3\xc1\xdd\x82\x1f\x4d\xb1\xc7\x4d\xaa\x0e\x29\x19\xbc\xed\xe7\xff\xa3\x0b\xe7\x05\xad\xbf\x47\x7b\xee\x12\x9d\xc9\xd4\x4a\xfd\x41\xdd\x04\x8e\x2d\x95\x5c\x39\xbd\x80\xdd\xbf\xbc\x5e\x46\xdc\x38\x3d\x5a\xc1\x66\x47\x0d\x8a\x25\xdb\xfa\xaa\xe1\x66\xbb\x3c\x1d\xfa\x3e\xff\x0a\x00\x00\xff\xff\x41\x8b\x9d\xe3\x3a\x03\x00\x00"

func idtablestakingNodeWithdraw_reward_tokensCdcBytes() ([]byte, error) {
	return bindataRead(
		_idtablestakingNodeWithdraw_reward_tokensCdc,
		"idTableStaking/node/withdraw_reward_tokens.cdc",
	)
}

func idtablestakingNodeWithdraw_reward_tokensCdc() (*asset, error) {
	bytes, err := idtablestakingNodeWithdraw_reward_tokensCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "idTableStaking/node/withdraw_reward_tokens.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x4, 0xe0, 0xee, 0x6d, 0xd3, 0x38, 0xad, 0x95, 0x95, 0xb3, 0x5f, 0xe4, 0xdb, 0x96, 0xe7, 0xfb, 0x67, 0x5f, 0x70, 0x20, 0xa8, 0x33, 0x4, 0x7a, 0x24, 0xd7, 0x86, 0x6a, 0xc8, 0xc, 0x35, 0xaa}}
	return a, nil
}

var _idtablestakingNodeWithdraw_unstaked_tokensCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x92\xcf\x8e\x9b\x40\x0c\xc6\xef\x3c\x85\xb5\x87\x2a\x39\x14\x7a\xa8\x7a\x40\xdb\xae\x68\x21\x52\xd4\x28\x5b\x2d\x6c\xab\x1e\x9d\xc1\x2c\xd3\xc0\x18\x0d\xa6\x44\xaa\xf6\xdd\xab\x81\x40\x89\x1a\x55\xd5\xfa\x32\xfc\xf9\x3e\xfb\x37\xb6\x75\xdd\xb0\x15\xd8\x54\xdc\x6f\xe3\x0c\x0f\x15\xa5\x82\x47\x6d\x9e\xa0\xb0\x5c\xc3\x9b\xd3\x36\x4e\xf6\xd9\x36\xfb\x9e\x45\x1f\x77\x49\x14\xc7\x0f\x49\x9a\x7a\x0b\x57\xc6\x47\x32\x93\x78\xb3\xbb\xff\x96\xdd\x7f\x4e\xf6\x93\xd0\xf3\xc4\xa2\x69\x51\x89\x66\xb3\xc2\x9a\x3b\x23\x21\x3c\x6e\xf4\xe9\xdd\xdb\x35\xfc\xf2\x3c\x00\x80\x20\x80\x1d\x2b\xac\xe0\x27\x5a\xed\x10\xa0\x60\x0b\x08\x96\x0a\xb2\x64\x14\x81\x30\x48\x49\x60\x38\x27\xe0\xc3\x0f\x52\x32\x18\x2b\x12\x68\x05\x8f\x64\x1f\xa8\x08\xe1\xd5\xdf\xb7\xf0\xf7\x9c\x0f\xcf\x64\xbd\xd9\x52\x4c\xd8\x7f\x5c\xc3\xab\xff\x15\xbb\x4a\x46\x5d\x63\xa9\x41\x4b\x2b\x54\x4a\x42\x88\x3a\x29\x23\xa5\x1c\xbd\xa3\x86\x73\x04\x01\x1c\xd8\x5a\xee\xff\x07\xd6\x45\x4b\x55\xe1\xcf\xc4\xf0\x1e\x5c\x7a\x7f\xcc\x71\xfb\x6f\xfc\x0f\x2b\xd7\xe3\xf0\xca\xa4\x16\xa2\x54\xd8\xe2\x13\x7d\x41\x29\xd7\x73\x51\x17\x77\x77\xd0\xa0\xd1\x6a\x75\xf3\x89\xbb\x2a\x07\xc3\x32\xa1\x5f\x80\xb7\xe7\xe1\x63\x5e\x6b\x73\xb3\xf6\x2e\xc9\x97\x8d\xbb\x06\xbf\xe8\xe2\x84\x1b\xb4\x23\x52\x30\x7b\x87\xdf\x2f\xa3\x73\xeb\x05\x83\x7f\x42\x7b\x1e\x0f\x3a\x91\xea\x84\xa6\x85\xba\x0a\xec\xe7\xd4\x70\xab\xe5\x0c\x76\xfb\xfa\x72\x18\x7e\xaf\xa5\xcc\x2d\xf6\x8f\x66\xf8\x96\x0f\xbe\x76\xde\xd9\xf1\x5c\xcf\x75\x9f\x7f\x07\x00\x00\xff\xff\x2c\x06\x62\x48\x3a\x03\x00\x00"

func idtablestakingNodeWithdraw_unstaked_tokensCdcBytes() ([]byte, error) {
	return bindataRead(
		_idtablestakingNodeWithdraw_unstaked_tokensCdc,
		"idTableStaking/node/withdraw_unstaked_tokens.cdc",
	)
}

func idtablestakingNodeWithdraw_unstaked_tokensCdc() (*asset, error) {
	bytes, err := idtablestakingNodeWithdraw_unstaked_tokensCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "idTableStaking/node/withdraw_unstaked_tokens.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x20, 0x63, 0xca, 0x5b, 0x97, 0x52, 0x42, 0xdd, 0xe8, 0x52, 0xed, 0xde, 0x1a, 0x73, 0xfe, 0xa2, 0xd4, 0x74, 0xe2, 0xcb, 0xb6, 0xdc, 0x19, 0xea, 0xeb, 0x15, 0x91, 0xd, 0x1a, 0xba, 0x57, 0x29}}
	return a, nil
}

var _idtablestakingNode_add_capabilityCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x91\x41\x6b\xc2\x40\x10\x85\xef\xf9\x15\xe3\x45\x22\x14\xed\x59\x54\x48\x9b\x08\x52\x51\x31\x0b\xa5\xc7\xc9\x66\x93\x6c\x5d\x77\xc3\x66\x44\x8b\xe4\xbf\x97\xc4\xc6\xa8\x95\xd2\x42\xe7\x94\x09\x6f\x66\xbe\xf7\x56\x6e\x73\x63\x09\xa6\xca\xec\x67\x3e\xc3\x48\x89\x90\x70\x23\x75\x0a\x89\x35\x5b\x78\x3c\xcc\xfc\x60\xc1\x66\xec\x8d\x79\x4f\xf3\xc0\xf3\xfd\x75\x10\x86\xce\xc5\x14\x33\x1b\xa1\x1b\xf1\x74\xbe\x7c\x65\xcb\x97\x60\xd1\x08\x9d\xc1\x00\x58\x26\x0b\x20\x8b\xba\x40\x4e\xd2\x68\xc0\x38\x2e\x00\x21\xdf\x45\x4a\x72\xd0\x26\x16\xc0\x31\xc7\x48\x2a\x49\x1f\x40\x06\x50\x03\x72\x6e\x76\x9a\x60\x2f\x29\xab\x96\xa0\x06\x71\x90\x05\x55\x64\x0b\x13\xd7\x94\xc2\x82\x89\xde\x05\x27\xc7\xb9\x5c\x7f\x74\x1c\x00\x80\xdc\x8a\x1c\xad\x70\x91\x73\x1a\x82\xb7\xa3\xcc\x3b\xed\xec\xc1\xb1\x16\x54\x75\xfe\x90\x49\x75\x92\xfa\x91\xb1\xd6\xec\x47\xdd\xef\x81\xf4\xdb\xb3\x13\xb7\xf2\x3b\xbc\x93\xda\x85\x28\x24\x63\x31\x15\x2b\xa4\xac\x07\x9d\x31\x68\xa9\x1a\xb4\xa6\x94\xa0\xda\xfe\x73\xeb\x7e\x7c\xc2\x48\x05\xb5\x3f\x47\xdd\xe3\x8f\x97\x56\x75\x90\xe5\xc4\xfd\x85\xaa\xc6\xe9\xdc\xc7\x58\x8b\x04\xc6\x37\x40\x5f\x81\xb8\x3d\xb8\x1a\xb9\x6a\x64\xd2\x8e\x37\x3e\xe1\xa6\x6a\x57\x4a\xea\xcd\x7f\x9b\x79\x00\x42\x9b\x0a\xfa\xc3\x6b\x5c\xc1\x95\xe7\xae\x3c\xb9\x2a\x9d\xf2\x33\x00\x00\xff\xff\x94\xa0\x85\xf8\x15\x03\x00\x00"

func idtablestakingNode_add_capabilityCdcBytes() ([]byte, error) {
	return bindataRead(
		_idtablestakingNode_add_capabilityCdc,
		"idTableStaking/node_add_capability.cdc",
	)
}

func idtablestakingNode_add_capabilityCdc() (*asset, error) {
	bytes, err := idtablestakingNode_add_capabilityCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "idTableStaking/node_add_capability.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x22, 0x47, 0xcc, 0x57, 0xbf, 0x21, 0xb5, 0xf2, 0x45, 0x8e, 0x8, 0x47, 0x51, 0x78, 0xed, 0x3c, 0x76, 0x46, 0x75, 0xdc, 0x7b, 0x3a, 0xa9, 0x67, 0x36, 0x4e, 0x53, 0x11, 0x16, 0x42, 0x1, 0x1b}}
	return a, nil
}

var _idtablestakingScriptsGet_current_tableCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\xce\xb1\x4a\xc4\x40\x10\x87\xf1\x7e\x9f\xe2\x5f\xde\x35\x9e\xb5\xdd\xc9\x46\x58\x90\x2b\xdc\x6d\x44\x2c\x72\xc9\x64\x33\x98\xcc\x86\xd9\x59\x54\xc4\x77\x97\x80\xe5\x75\x5f\xf5\xe3\xe3\x75\x2b\x6a\x78\x5a\xca\x67\xf0\xa9\xbf\x2e\x14\xad\xff\x60\xc9\x98\xb4\xac\xb8\xff\x0a\xbe\xbb\xa4\x90\x5e\xd3\xf9\xf1\xb9\x3b\x7b\xff\xd2\xc5\xe8\xdc\xe9\x84\x34\x73\x45\x1d\x94\x37\x83\x92\x35\x95\x0a\x9b\x09\x43\x53\x25\x31\xf0\x48\x62\x6c\xdf\xb0\x5d\xc5\x42\x92\x6d\x76\x6e\x6b\x57\x4c\x4d\xb0\xf6\x2c\x87\xe3\x03\xde\xa2\x29\x4b\x7e\xc7\x8f\x03\xf0\x2f\xdd\xf8\xb9\xcb\x64\x7b\xd2\x78\x29\x23\x05\x5f\x0f\x47\xf7\xfb\x17\x00\x00\xff\xff\x4a\xf4\xfe\xa9\xbe\x00\x00\x00"

func idtablestakingScriptsGet_current_tableCdcBytes() ([]byte, error) {
	return bindataRead(
		_idtablestakingScriptsGet_current_tableCdc,
		"idTableStaking/scripts/get_current_table.cdc",
	)
}

func idtablestakingScriptsGet_current_tableCdc() (*asset, error) {
	bytes, err := idtablestakingScriptsGet_current_tableCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "idTableStaking/scripts/get_current_table.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x58, 0x1e, 0x72, 0x94, 0xe0, 0x76, 0x87, 0xd9, 0x75, 0x4c, 0x72, 0xa3, 0xa1, 0x74, 0x9e, 0xa3, 0x3e, 0x29, 0x8a, 0xe4, 0xeb, 0x5e, 0x72, 0x24, 0x51, 0x5b, 0x77, 0xb4, 0xfb, 0xda, 0xf0, 0x72}}
	return a, nil
}

var _idtablestakingScriptsGet_cut_percentageCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\xce\xb1\x4e\x85\x30\x14\x87\xf1\xbd\x4f\xf1\x1f\xef\x5d\xbc\x0e\xc6\xc1\x0d\x2d\x24\x24\xc6\x18\xa8\x83\xe3\x01\x0e\xd0\x00\xa7\xa4\x3d\x0d\x24\xc6\x77\x37\x26\x8e\xae\xdf\xf0\xe5\xe7\xb7\x3d\x44\x45\xb5\x86\xa3\xb6\x8e\xba\x95\x5b\xa5\xc5\xcb\x84\x31\x86\x0d\xf7\x67\x6d\xcb\x37\x57\xbb\x4f\x57\x3c\xbf\x96\x85\xb5\x4d\xd9\xb6\xc6\xdc\x6e\x70\xb3\x4f\x48\x7d\xf4\xbb\x22\xb2\xe6\x28\x09\x3a\x33\x3a\x5a\x49\x7a\x46\x18\x91\x94\x16\x1e\xa0\x61\x61\x49\xbf\x81\x20\x61\x60\x63\xf6\xdc\x61\xcc\x82\x8d\xbc\x5c\xae\x4f\xf8\xa8\xfc\xf9\xf8\x80\x2f\x03\xe0\x6f\xf6\x0f\xe9\x6e\x62\x6d\xf8\xa0\x38\xbc\x64\x7d\xe7\xd8\xb3\x28\x4d\x7c\xb9\x9a\xef\x9f\x00\x00\x00\xff\xff\x28\x6a\xf6\x9f\xc7\x00\x00\x00"

func idtablestakingScriptsGet_cut_percentageCdcBytes() ([]byte, error) {
	return bindataRead(
		_idtablestakingScriptsGet_cut_percentageCdc,
		"idTableStaking/scripts/get_cut_percentage.cdc",
	)
}

func idtablestakingScriptsGet_cut_percentageCdc() (*asset, error) {
	bytes, err := idtablestakingScriptsGet_cut_percentageCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "idTableStaking/scripts/get_cut_percentage.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xa3, 0x9, 0x30, 0xa9, 0xd4, 0x7, 0x19, 0x3d, 0x43, 0x39, 0x32, 0xda, 0x6f, 0xaa, 0xf3, 0xcb, 0xa5, 0x4d, 0x97, 0x58, 0x23, 0x1b, 0xec, 0x30, 0x61, 0x49, 0x8e, 0x9, 0x33, 0x2a, 0x4d, 0x92}}
	return a, nil
}

var _idtablestakingScriptsGet_node_committed_tokensCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x8e\x31\x6b\xc3\x30\x10\x46\x77\xfd\x8a\x6f\x6c\x96\xa4\x43\xe9\x10\xe8\x90\x56\x0e\x08\x4a\x86\x5a\x1d\x3a\xca\xf1\x39\x11\xb6\xee\x8c\x74\xa6\x81\xd2\xff\x5e\x12\x17\x4f\x99\x0e\xbe\xe3\x3d\x5e\x4c\xa3\x64\xc5\x7e\x90\x6f\x67\x7d\x68\x06\xaa\x35\xf4\x91\x4f\xe8\xb2\x24\x3c\x5e\x9c\xad\x0e\xde\xf9\x2f\xbf\x7b\x7d\xaf\x76\xd6\x7e\x54\x75\x6d\xcc\x66\x03\x7f\x8e\x05\xe5\x98\xe3\xa8\xc8\xa4\x53\xe6\x02\x3d\x13\x9a\x30\x04\x3e\x12\xa4\x43\xd1\xd0\x53\x0b\x95\x9e\xb8\x5c\x87\x00\x96\x96\x8c\x19\xa7\x06\xdd\xc4\x48\x21\xf2\xc3\x75\x72\x76\x8b\x5a\x73\xe4\xd3\x6a\x8b\xcf\x7d\xbc\x3c\x3f\xe1\xc7\x00\xc0\x40\x7a\x83\x1c\x77\x82\x97\x3b\xa1\xeb\xc3\xff\x77\x11\xcd\x77\x75\xc3\xe7\xb2\xc5\xb0\x9e\x5b\xde\x24\xa5\xa8\x4a\xad\xf9\xfd\x0b\x00\x00\xff\xff\xd7\xe0\x3c\x12\x01\x01\x00\x00"

func idtablestakingScriptsGet_node_committed_tokensCdcBytes() ([]byte, error) {
	return bindataRead(
		_idtablestakingScriptsGet_node_committed_tokensCdc,
		"idTableStaking/scripts/get_node_committed_tokens.cdc",
	)
}

func idtablestakingScriptsGet_node_committed_tokensCdc() (*asset, error) {
	bytes, err := idtablestakingScriptsGet_node_committed_tokensCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "idTableStaking/scripts/get_node_committed_tokens.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x51, 0x11, 0x65, 0x3, 0x17, 0x42, 0x11, 0x30, 0xfa, 0xb9, 0xb6, 0xd9, 0x8a, 0x5c, 0x41, 0xaa, 0xe7, 0xc4, 0xbb, 0x42, 0xf5, 0xe9, 0x39, 0x84, 0x75, 0x26, 0xa5, 0x46, 0x5e, 0xdc, 0xef, 0xfe}}
	return a, nil
}

var _idtablestakingScriptsGet_node_infoCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\xce\x31\x4b\xc5\x30\x14\xc5\xf1\x3d\x9f\xe2\x8c\x76\xb1\xce\xdd\x2a\xa9\x10\x90\x0e\x26\x8b\x63\x6a\xd3\xf6\x62\x7a\x53\x92\x1b\x14\xc4\xef\x2e\xc5\xc7\x9b\x1e\x6f\x3a\xcb\x9f\x1f\x87\xf6\x23\x65\xc1\x4b\x4c\x5f\x46\x3b\x3f\xc5\x60\xc5\x7f\x12\xaf\x58\x72\xda\xf1\xf4\x6d\xf4\x30\x3a\xe3\xde\x5d\xff\xfc\x3a\xf4\x5a\xbf\x0d\xd6\x2a\xd5\xb6\x70\x1b\x15\x94\x8f\x4c\x87\x60\x0d\x52\xe0\x63\x84\x6c\x01\xc4\x4b\x82\x9f\x52\x15\x78\x70\x9a\x03\x3c\xcf\xc8\x41\x6a\xe6\x02\x12\xa5\x8e\x3a\x61\xa9\x8c\xdd\x13\x3f\x9c\x85\xd1\x1d\xac\x64\xe2\xb5\xe9\x6e\x7c\x79\x1c\xcf\xe6\x64\x7f\x14\x80\x8b\x75\x2f\xbc\xaa\xff\xdb\xa8\x5f\xf5\x17\x00\x00\xff\xff\x58\x6d\x78\x81\xea\x00\x00\x00"

func idtablestakingScriptsGet_node_infoCdcBytes() ([]byte, error) {
	return bindataRead(
		_idtablestakingScriptsGet_node_infoCdc,
		"idTableStaking/scripts/get_node_info.cdc",
	)
}

func idtablestakingScriptsGet_node_infoCdc() (*asset, error) {
	bytes, err := idtablestakingScriptsGet_node_infoCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "idTableStaking/scripts/get_node_info.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x5d, 0x5c, 0x8d, 0xac, 0x80, 0x53, 0x4, 0xd4, 0x7f, 0x6, 0x1f, 0xa9, 0x73, 0x36, 0xfa, 0x49, 0x9b, 0x3, 0x97, 0x47, 0x1b, 0xb3, 0x5b, 0x19, 0x13, 0x20, 0x54, 0xd8, 0x98, 0xec, 0x23, 0x73}}
	return a, nil
}

var _idtablestakingScriptsGet_node_info_from_addressCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x50\x4f\x4b\xf3\x30\x18\xbf\xe7\x53\xfc\xde\x1d\x5e\xda\x4b\xe7\x79\x38\x47\x5d\x27\x14\x64\x0c\xd7\x8b\xc7\xb4\x7d\xba\x45\xb3\x3c\x25\x7d\xc2\x94\xb1\xef\x2e\x35\x0e\x3d\xa8\x98\x53\x42\x7e\xff\xcd\xa1\x67\x2f\xb8\xb3\x7c\x2c\x8b\x4a\xd7\x96\xb6\xa2\x9f\x8d\xdb\xa1\xf3\x7c\xc0\xd5\x4b\x59\xac\xd6\x55\x59\x3d\x56\xf9\xed\xfd\x2a\x2f\x8a\x87\xd5\x76\xab\xd4\x74\x8a\x6a\x6f\x06\x0c\x8d\x37\xbd\x60\x47\x32\x40\x5b\x0b\xd9\x13\x8c\xeb\x18\xba\xe6\x20\xd0\x70\xdc\x12\xb4\x6b\xe1\x49\x82\x77\x03\x8c\x28\xd5\x87\x1a\x5d\x70\x38\x68\xe3\x12\xdd\xb6\x9e\x86\x61\x86\x3c\x5e\xd2\xd9\x37\x69\xb2\x35\xb7\x54\x8e\xc2\x27\xa5\x00\xc0\x92\x40\x37\x0d\x07\x27\x98\x8f\xfe\x79\x7c\x5c\xe4\xd2\x4f\xd8\x18\x61\x94\x21\x8f\xf9\x85\x93\xed\x48\x96\xba\xd7\xb5\xb1\x46\x5e\xaf\xff\x9f\x7e\xb0\x8c\xbc\x4d\xa8\xad\x69\xce\x37\xc9\x1f\x50\x1b\x2d\xfb\xf4\xdf\xbb\xf9\x78\xb2\x9a\xbd\xe7\x63\x92\x62\xb1\x40\xaf\x9d\x69\x92\xc9\x92\x83\x6d\xe1\x58\x10\x3f\xe1\xa9\x23\x4f\xae\x21\x08\xc7\xc5\x86\x98\x97\xeb\x27\x6a\x64\xf2\x51\x26\x4e\xf8\xdb\x3a\xc9\x48\x2e\x8b\xd9\x97\xce\x99\x69\x53\x75\x56\x6f\x01\x00\x00\xff\xff\x44\xc7\x5c\xe3\xe8\x01\x00\x00"

func idtablestakingScriptsGet_node_info_from_addressCdcBytes() ([]byte, error) {
	return bindataRead(
		_idtablestakingScriptsGet_node_info_from_addressCdc,
		"idTableStaking/scripts/get_node_info_from_address.cdc",
	)
}

func idtablestakingScriptsGet_node_info_from_addressCdc() (*asset, error) {
	bytes, err := idtablestakingScriptsGet_node_info_from_addressCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "idTableStaking/scripts/get_node_info_from_address.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x7, 0xe6, 0xac, 0x7, 0xde, 0xa4, 0x99, 0x5c, 0x6b, 0xfc, 0x15, 0x36, 0x27, 0x2b, 0xd5, 0x56, 0x46, 0x2, 0xa9, 0x8d, 0xed, 0xb9, 0xa0, 0x3b, 0x9b, 0x99, 0xb1, 0x2c, 0xcb, 0x46, 0x31, 0xa}}
	return a, nil
}

var _idtablestakingScriptsGet_node_initial_weightCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\xce\x41\x4b\xc4\x30\x10\x05\xe0\x7b\x7e\xc5\x3b\xba\x97\x5d\x0f\xe2\x61\xc1\xc3\x4a\x2a\x04\xa4\x07\x13\x11\x8f\xa9\x26\xed\x60\x3a\x29\xe9\x94\x0a\xe2\x7f\x17\xdb\xd2\xd3\x9e\x06\xe6\xf1\x1e\x1f\xf5\x43\x2e\x82\xa7\x94\x67\xa3\x9d\x6f\x52\xb0\xe2\xbf\x88\x5b\xc4\x92\x7b\xdc\x7e\x1b\x5d\xd5\xce\xb8\x77\x77\x79\x7c\xae\x2e\x5a\xbf\x54\xd6\x2a\x75\x3a\xc1\x75\x34\x62\xfc\x28\x34\x08\x4a\x90\xa9\xf0\x08\xe9\x02\x88\x49\xc8\x27\xcc\x81\xda\x4e\x90\x23\x3c\x38\x7f\x06\xa5\x86\xa9\x41\x9c\x18\xbd\x27\xbe\xf9\x7f\x19\x7d\x86\x95\x42\xdc\x1e\xce\x78\x35\x2c\xf7\x77\xf8\x51\x00\x90\x82\x2c\x25\xc3\x31\xe3\xe1\x0a\xef\x58\x6f\xe9\x3e\xb4\xde\xc3\x52\x5f\x3d\xfb\xc2\x71\x33\xbd\x2d\x24\xf5\xfb\x17\x00\x00\xff\xff\x4a\xf0\xca\x23\xf5\x00\x00\x00"

func idtablestakingScriptsGet_node_initial_weightCdcBytes() ([]byte, error) {
	return bindataRead(
		_idtablestakingScriptsGet_node_initial_weightCdc,
		"idTableStaking/scripts/get_node_initial_weight.cdc",
	)
}

func idtablestakingScriptsGet_node_initial_weightCdc() (*asset, error) {
	bytes, err := idtablestakingScriptsGet_node_initial_weightCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "idTableStaking/scripts/get_node_initial_weight.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xf, 0xc0, 0x17, 0x67, 0x2c, 0xf0, 0xf8, 0xba, 0x42, 0x20, 0x9f, 0x54, 0x8b, 0x43, 0x3, 0x86, 0x8c, 0x2b, 0xbf, 0x6b, 0x3f, 0xa2, 0x5f, 0x47, 0xbc, 0x87, 0xa7, 0x24, 0x30, 0xc2, 0x95, 0xf5}}
	return a, nil
}

var _idtablestakingScriptsGet_node_networking_addrCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x8e\x41\x4b\xc4\x30\x10\x46\xef\xf9\x15\xdf\xd1\xbd\xec\x7a\x16\x3c\x54\x52\x21\x20\x7b\x30\xb9\x78\x4c\x6d\xd2\x06\xdb\x49\x99\x4c\xa9\x20\xfe\x77\xb1\xad\xf5\xb2\xa7\x19\x66\x78\x8f\x97\xc6\x29\xb3\xe0\x79\xc8\x8b\xd1\xce\x37\x43\xb0\xe2\x3f\x12\x75\x88\x9c\x47\xdc\x7f\x1a\x5d\x5f\x9d\x71\x6f\xae\x7a\x7a\xa9\x2b\xad\x5f\x6b\x6b\x95\xba\x5c\xe0\xfa\x54\x50\xde\x39\x4d\x02\x0e\x32\x33\x15\x48\x1f\x40\x41\x96\xcc\xab\xa2\x6a\x5b\x0e\xa5\x20\x47\x78\x50\x6e\x83\x52\xd3\xdc\x20\xce\x84\xd1\x27\xba\xfb\x3d\x19\xfd\x00\x2b\x9c\xa8\x3b\xfd\x2d\xf8\x52\x00\x30\x04\x59\x21\x43\x31\xe3\xf1\x46\xe2\xf9\xba\x7f\x0f\xd1\x36\x4f\x2b\xbe\x35\x1d\x86\xf3\x7f\xd7\x9e\xa5\xbe\x7f\x02\x00\x00\xff\xff\xe4\xf6\x2e\xea\xfd\x00\x00\x00"

func idtablestakingScriptsGet_node_networking_addrCdcBytes() ([]byte, error) {
	return bindataRead(
		_idtablestakingScriptsGet_node_networking_addrCdc,
		"idTableStaking/scripts/get_node_networking_addr.cdc",
	)
}

func idtablestakingScriptsGet_node_networking_addrCdc() (*asset, error) {
	bytes, err := idtablestakingScriptsGet_node_networking_addrCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "idTableStaking/scripts/get_node_networking_addr.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x6, 0x77, 0x9c, 0xbc, 0xa2, 0xdd, 0xeb, 0xde, 0xcd, 0xad, 0x72, 0x18, 0xa9, 0x16, 0x54, 0x32, 0xe6, 0x4, 0xd9, 0x5a, 0x2f, 0xed, 0x4e, 0x90, 0x88, 0x2, 0x16, 0x9, 0x5c, 0xe3, 0x45, 0x8c}}
	return a, nil
}

var _idtablestakingScriptsGet_node_networking_keyCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x8e\xb1\x4f\x85\x30\x10\x87\xf7\xfe\x15\xbf\xd1\xb7\xbc\xe7\x6c\xe2\x80\x29\x26\x8d\x86\xc1\x76\x71\x2c\x7a\x85\x06\xb8\x92\x72\x04\x89\xf1\x7f\x37\x82\xe2\xf2\xa6\xbb\xdc\xe5\xfb\xf2\xc5\x61\x4c\x59\xf0\xd8\xa7\xc5\x68\xe7\xeb\x9e\xac\xf8\x2e\x72\x83\x90\xd3\x80\xdb\x0f\xa3\xcb\xca\x19\xf7\xea\x8a\x87\xe7\xb2\xd0\xfa\xa5\xb4\x56\xa9\xcb\x05\xae\x8d\x13\xa6\xb7\x1c\x47\x41\x26\x99\x33\x4f\x90\x96\xc0\x24\x4b\xca\x9b\xa2\xa3\x15\x29\xc0\x83\xd3\x3b\x29\x35\xce\x35\xc2\xcc\x18\x7c\xe4\x9b\x9f\x93\xd1\x77\xb0\x92\x23\x37\xa7\xbf\x05\x9f\x0a\x00\x7a\x92\x0d\x32\x1c\x12\xee\xaf\xe4\x9d\xab\xdf\xef\x21\xda\xe7\x69\xc3\xf7\x9e\xc3\x70\xfe\x6f\x7a\xa2\x55\x7d\x7d\x07\x00\x00\xff\xff\xd1\xf6\x05\xda\xf5\x00\x00\x00"

func idtablestakingScriptsGet_node_networking_keyCdcBytes() ([]byte, error) {
	return bindataRead(
		_idtablestakingScriptsGet_node_networking_keyCdc,
		"idTableStaking/scripts/get_node_networking_key.cdc",
	)
}

func idtablestakingScriptsGet_node_networking_keyCdc() (*asset, error) {
	bytes, err := idtablestakingScriptsGet_node_networking_keyCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "idTableStaking/scripts/get_node_networking_key.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xba, 0x39, 0x41, 0x31, 0x6, 0x4d, 0x30, 0xeb, 0xd3, 0x9d, 0xc8, 0x3f, 0xee, 0x5a, 0x9, 0x3, 0x4c, 0x73, 0xa0, 0xfe, 0x29, 0x92, 0x56, 0xea, 0xc3, 0x25, 0x7c, 0x59, 0x6f, 0xb3, 0xa9, 0xac}}
	return a, nil
}

var _idtablestakingScriptsGet_node_rewarded_tokensCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\xce\x31\x6b\xc3\x30\x10\x05\xe0\x5d\xbf\xe2\x8d\xcd\x92\x74\x28\x1d\x02\x1d\x52\xe4\x80\xa0\x64\x88\xd5\xa1\xa3\x1c\x9f\x13\x11\xf9\x64\x4e\x67\x12\x28\xfd\xef\x25\x71\xf0\x94\xe9\xe0\x1d\xef\xf1\xc5\x7e\xc8\xa2\xd8\xa6\x7c\x71\xd6\x87\x26\x51\xad\xe1\x1c\xf9\x88\x4e\x72\x8f\xd7\xab\xb3\xd5\xce\x3b\xff\xe3\x37\x9f\x5f\xd5\xc6\xda\x7d\x55\xd7\xc6\xac\x56\xf0\xa7\x58\x50\x0e\x12\x07\x85\x90\x8e\xc2\x05\x7a\x22\x34\x21\x05\x3e\x10\x72\x07\xa1\x4b\x90\x96\x5a\x68\x3e\x13\x97\x5b\x14\xc0\xb9\x25\x63\x86\xb1\x41\x37\x32\xfa\x10\xf9\xe5\x16\x39\xbb\x46\xad\x12\xf9\xb8\x58\xe3\x7b\x1b\xaf\xef\x6f\xf8\x35\x00\x90\x48\xef\x25\xc7\x5d\xc6\xc7\x13\xea\x72\xf7\xf8\xce\x43\xd3\x5d\xdc\xeb\x93\x6d\x5e\x58\x4e\x96\xfd\x83\x66\xfe\xfe\x03\x00\x00\xff\xff\x1e\xee\x86\x4b\x02\x01\x00\x00"

func idtablestakingScriptsGet_node_rewarded_tokensCdcBytes() ([]byte, error) {
	return bindataRead(
		_idtablestakingScriptsGet_node_rewarded_tokensCdc,
		"idTableStaking/scripts/get_node_rewarded_tokens.cdc",
	)
}

func idtablestakingScriptsGet_node_rewarded_tokensCdc() (*asset, error) {
	bytes, err := idtablestakingScriptsGet_node_rewarded_tokensCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "idTableStaking/scripts/get_node_rewarded_tokens.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x91, 0x31, 0x52, 0xe3, 0xb5, 0xc6, 0x8e, 0x86, 0x7b, 0xee, 0xce, 0x3f, 0x8f, 0x80, 0x32, 0xbe, 0x41, 0xf5, 0x1, 0x7, 0xf8, 0x80, 0x7c, 0xca, 0x2, 0x28, 0x8, 0x5c, 0x7c, 0x30, 0xd5, 0x56}}
	return a, nil
}

var _idtablestakingScriptsGet_node_roleCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x8e\x31\x6b\x85\x30\x14\x46\xf7\xfc\x8a\x6f\xac\x8b\x76\x2c\x42\x07\x4b\x2c\x04\x8a\x43\x93\x0e\x1d\x63\x9b\x68\x68\xbc\x91\x78\xa5\x85\xf2\xfe\xfb\x43\x7d\x38\xbd\xe9\xc2\xfd\x38\x87\x13\xa6\x39\x65\xc6\x6b\x4c\xbf\x4a\x1a\xdb\x47\xa7\xd9\xfe\x04\x1a\xe0\x73\x9a\xf0\xf8\xa7\x64\xdb\x19\x65\x3e\x4d\xf3\xf2\xd6\x36\x52\xbe\xb7\x5a\x0b\x51\x55\x30\x63\x58\xb0\x7c\xe5\x30\x33\xb2\xe3\x35\xd3\x02\x1e\x1d\x72\x8a\x0e\xc9\xc3\x82\xd2\xb7\x13\x62\x5e\x7b\xf8\x95\x30\xd9\x40\x0f\xdb\x4b\xc9\x1a\x9a\x73\xa0\xa1\xa8\xf1\xa1\x88\x9f\xf0\x2f\x00\x20\x3a\xde\x19\x45\x3e\xe1\xf9\x4e\x53\xd9\xdd\xd6\xd3\x73\xdc\x62\xc7\x8f\x88\xd3\x50\x6e\x21\xe2\x72\x0d\x00\x00\xff\xff\xf4\x8e\xc6\x37\xe1\x00\x00\x00"

func idtablestakingScriptsGet_node_roleCdcBytes() ([]byte, error) {
	return bindataRead(
		_idtablestakingScriptsGet_node_roleCdc,
		"idTableStaking/scripts/get_node_role.cdc",
	)
}

func idtablestakingScriptsGet_node_roleCdc() (*asset, error) {
	bytes, err := idtablestakingScriptsGet_node_roleCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "idTableStaking/scripts/get_node_role.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x2e, 0x9e, 0xda, 0x8e, 0x65, 0x95, 0xfa, 0x4e, 0xa1, 0xbc, 0xcc, 0x44, 0xe8, 0xa4, 0x4b, 0xbb, 0xe5, 0x51, 0x79, 0xb1, 0x87, 0x98, 0xe, 0xfe, 0x5e, 0x5d, 0x35, 0x73, 0x4, 0xec, 0xc8, 0x57}}
	return a, nil
}

var _idtablestakingScriptsGet_node_staked_tokensCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\xce\x31\x6b\xc3\x30\x10\x05\xe0\x5d\xbf\xe2\x8d\xcd\x92\x74\x28\x1d\x02\x1d\x52\xe4\x80\xa0\x64\xa8\xd4\xa1\xa3\x9c\x9c\x12\x61\xf9\x64\xa4\x33\x0d\x94\xfe\xf7\x62\xbb\x78\xea\x74\xf0\x8e\xf7\xf8\x62\x3f\xe4\x22\x38\xa6\xfc\x65\xb4\xf3\x6d\x22\x2b\xbe\x8b\x7c\x45\x28\xb9\xc7\xe3\xdd\xe8\xe6\xe4\x8c\xfb\x74\x87\xd7\xb7\xe6\xa0\xf5\x7b\x63\xad\x52\xbb\x1d\xdc\x2d\x56\xd4\x73\x89\x83\xa0\x90\x8c\x85\x2b\xe4\x46\x68\x7d\xf2\x7c\x26\xe4\x80\x2a\xbe\xa3\x0b\x24\x77\xc4\x75\x0a\x3c\x38\x5f\x48\xa9\x61\x6c\x11\x46\x46\xef\x23\x3f\x4c\x91\xd1\x7b\x58\x29\x91\xaf\x9b\x3d\x3e\x8e\xf1\xfe\xfc\x84\x6f\x05\x00\x89\x64\x2e\x19\x0e\x19\x2f\xff\x40\xb7\xa7\xbf\xef\x3a\xb4\xdc\xcd\x5c\x5f\x64\xeb\xc2\x76\xb1\xd8\x19\xa6\x7e\x7e\x03\x00\x00\xff\xff\x46\xae\x83\xcb\xfe\x00\x00\x00"

func idtablestakingScriptsGet_node_staked_tokensCdcBytes() ([]byte, error) {
	return bindataRead(
		_idtablestakingScriptsGet_node_staked_tokensCdc,
		"idTableStaking/scripts/get_node_staked_tokens.cdc",
	)
}

func idtablestakingScriptsGet_node_staked_tokensCdc() (*asset, error) {
	bytes, err := idtablestakingScriptsGet_node_staked_tokensCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "idTableStaking/scripts/get_node_staked_tokens.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xc9, 0xa5, 0xe0, 0x6e, 0x32, 0xb4, 0x2d, 0xce, 0xcf, 0xef, 0x6c, 0xad, 0xa0, 0xc, 0x96, 0x72, 0x4d, 0x32, 0x5b, 0xfa, 0x45, 0xea, 0x74, 0x20, 0x42, 0x4b, 0x9e, 0x2c, 0x86, 0xa0, 0x44, 0x9e}}
	return a, nil
}

var _idtablestakingScriptsGet_node_staking_keyCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x8e\x31\xaf\x82\x30\x14\x46\xf7\xfe\x8a\x6f\x7c\x2c\xf0\xe6\x97\xbc\x01\x53\x4c\x1a\x0c\x83\xed\xe2\x58\xb4\x85\x46\x68\x49\x5b\xa2\xc4\xf8\xdf\x8d\x80\x4c\x4e\xf7\xe6\xde\x9c\x93\x63\xfa\xc1\xf9\x88\x7d\xe7\x6e\x8c\x0a\x59\x77\x8a\x47\x79\x35\xb6\x81\xf6\xae\xc7\xef\x9d\xd1\xa2\x12\x4c\x9c\x44\xbe\x3b\x14\x39\xa5\xc7\x82\x73\x42\xb2\x0c\xa2\x35\x01\xe1\xec\xcd\x10\xe1\x55\x1c\xbd\x0d\x88\xad\x42\x58\xf9\x52\x4d\x70\x1a\x12\xd6\x5d\x14\x21\xc3\x58\x43\x8f\x16\xbd\x34\xf6\xe7\x7d\x62\xf4\x0f\x3c\x7a\x63\x9b\xe4\xb3\xe0\x41\x00\xa0\x53\x71\x86\x98\xd5\x0e\xff\x5f\xda\xd2\x6a\xfd\x6e\xa2\x65\x26\x33\xbe\xc4\x6c\x86\x74\x0d\x2a\xd5\x44\x9e\xaf\x00\x00\x00\xff\xff\x09\x99\x69\xfa\xef\x00\x00\x00"

func idtablestakingScriptsGet_node_staking_keyCdcBytes() ([]byte, error) {
	return bindataRead(
		_idtablestakingScriptsGet_node_staking_keyCdc,
		"idTableStaking/scripts/get_node_staking_key.cdc",
	)
}

func idtablestakingScriptsGet_node_staking_keyCdc() (*asset, error) {
	bytes, err := idtablestakingScriptsGet_node_staking_keyCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "idTableStaking/scripts/get_node_staking_key.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xab, 0x13, 0x1f, 0xf1, 0xf9, 0x2c, 0xc6, 0x26, 0x45, 0x9a, 0xa, 0xf0, 0x4f, 0x7, 0xa2, 0x39, 0x1a, 0xd, 0x99, 0xd6, 0x51, 0x83, 0x95, 0xa, 0x58, 0xb5, 0x72, 0xf8, 0xa1, 0xe7, 0xf0, 0x62}}
	return a, nil
}

var _idtablestakingScriptsGet_node_total_commitmentCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\xce\x31\x4f\xc3\x30\x10\xc5\xf1\xdd\x9f\xe2\x8d\x74\xa1\x0c\x88\xa1\x5b\x8b\x53\x29\x12\xea\x40\x8c\x10\xa3\xd3\x5c\x92\x53\xe2\xbb\xc8\xbe\x88\x4a\x88\xef\x8e\x2a\x3a\x76\xfd\x0f\xbf\xf7\x38\x2d\x9a\x0d\xc7\x59\xbf\x6b\x1f\x62\x3b\x53\x63\x71\x62\x19\xd0\x67\x4d\x78\xba\xd4\xbe\x3a\x85\x3a\x7c\x85\xfd\xe1\xad\xda\x7b\xff\x5e\x35\x8d\x73\xdb\x2d\xc2\xc8\x05\xe5\x9c\x79\x31\x64\xb2\x35\x4b\x81\x8d\x84\x36\xce\x51\xce\x04\xed\x51\x2c\x4e\xd4\xc1\x74\x22\x29\xd7\x10\x21\xda\x91\x73\xcb\xda\xa2\x5f\x05\x29\xb2\x3c\x5c\x53\xed\x77\x68\x2c\xb3\x0c\x9b\x1d\x3e\x8e\x7c\x79\x79\xc6\x8f\x03\x70\xa3\xef\x1c\x7c\x1c\xc8\x4e\xda\xd1\xab\xa6\xc4\x66\xd4\x1d\xfe\x87\x3f\xd9\x46\x4f\x33\x0d\xd1\x34\x97\x9b\xbe\x71\xbf\xee\x2f\x00\x00\xff\xff\x87\xb6\xf6\x05\xeb\x00\x00\x00"

func idtablestakingScriptsGet_node_total_commitmentCdcBytes() ([]byte, error) {
	return bindataRead(
		_idtablestakingScriptsGet_node_total_commitmentCdc,
		"idTableStaking/scripts/get_node_total_commitment.cdc",
	)
}

func idtablestakingScriptsGet_node_total_commitmentCdc() (*asset, error) {
	bytes, err := idtablestakingScriptsGet_node_total_commitmentCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "idTableStaking/scripts/get_node_total_commitment.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x4c, 0x3d, 0x7c, 0xf1, 0xe, 0xb1, 0x3b, 0x92, 0x24, 0x31, 0x5d, 0x5, 0x61, 0x26, 0xc5, 0xe3, 0x6, 0x93, 0x2e, 0x90, 0xe9, 0x83, 0xef, 0x1c, 0xd4, 0xee, 0xbd, 0xfd, 0x7, 0x84, 0xb6, 0xcb}}
	return a, nil
}

var _idtablestakingScriptsGet_node_total_commitment_without_delegatorsCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\xce\x31\x4f\xc3\x30\x10\xc5\xf1\xdd\x9f\xe2\x8d\x74\xa1\x0c\x88\xa1\x5b\x8b\x53\x29\x12\xea\x40\x8c\x10\xa3\xd3\x5c\x92\x53\xe2\xbb\xc8\xbe\x88\x4a\x88\xef\x8e\x2a\x3a\x76\xfd\x0f\xef\xf7\x38\x2d\x9a\x0d\xc7\x59\xbf\x6b\x1f\x62\x3b\x53\x63\x71\x62\x19\xd0\x67\x4d\x78\xba\xd4\xbe\x3a\x85\x3a\x7c\x85\xfd\xe1\xad\xda\x7b\xff\x5e\x35\x8d\x73\xdb\x2d\xc2\xc8\x05\xe5\x9c\x79\x31\x64\xb2\x35\x4b\x81\x8d\x84\x36\xce\x51\xce\x04\xed\x51\x2c\x4e\xd4\xc1\x74\x22\x29\xd7\x10\x21\xda\x91\x73\xcb\xda\xa2\x5f\x05\x29\xb2\x3c\x5c\x53\xed\x77\x68\x2c\xb3\x0c\x9b\x1d\x3e\x8e\x7c\x79\x79\xc6\x8f\x03\x70\x9b\xbe\x73\xf0\x71\x20\x3b\x69\x47\xaf\x9a\x12\x9b\x51\x77\xf8\x87\x3f\xd9\x46\x5d\xcd\xd3\x4c\x43\x34\xcd\xe5\x06\x6c\xdc\xaf\xfb\x0b\x00\x00\xff\xff\x56\xb6\x77\x52\xee\x00\x00\x00"

func idtablestakingScriptsGet_node_total_commitment_without_delegatorsCdcBytes() ([]byte, error) {
	return bindataRead(
		_idtablestakingScriptsGet_node_total_commitment_without_delegatorsCdc,
		"idTableStaking/scripts/get_node_total_commitment_without_delegators.cdc",
	)
}

func idtablestakingScriptsGet_node_total_commitment_without_delegatorsCdc() (*asset, error) {
	bytes, err := idtablestakingScriptsGet_node_total_commitment_without_delegatorsCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "idTableStaking/scripts/get_node_total_commitment_without_delegators.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x2, 0x80, 0x48, 0xf2, 0x2f, 0xea, 0x67, 0x9f, 0x3a, 0xdd, 0xb0, 0xaa, 0xc2, 0x24, 0x71, 0x5e, 0xb, 0x8c, 0xe6, 0x2a, 0x16, 0x1d, 0x61, 0x3f, 0x0, 0x24, 0x6, 0x14, 0xfa, 0xe9, 0xaf, 0x1a}}
	return a, nil
}

var _idtablestakingScriptsGet_node_type_ratioCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x8e\x41\x4b\xc3\x40\x10\x85\xef\xfb\x2b\x9e\xb7\xf6\x62\x3d\x88\x48\xc1\x43\x25\x29\x04\xc4\x43\xb2\x3d\x88\x78\x98\x34\x93\x76\xc9\x66\x27\xcc\x4e\x68\x41\xfc\xef\xd2\xea\xb1\xd7\xc7\xfb\x3e\xbe\x30\x4e\xa2\x86\x6d\x94\x53\x55\x78\x6a\x23\x37\x46\x43\x48\x07\xf4\x2a\x23\x1e\xce\x55\x51\xbe\xfb\xca\x7f\xf8\xcd\xeb\x5b\xb9\x29\x8a\xba\x6c\x1a\xe7\x56\x2b\xf8\x63\xc8\xc8\x7b\x0d\x93\x41\xd9\x66\x4d\x19\x76\x64\xb4\x14\x29\xed\x19\xd2\x23\x1b\x0d\xdc\xc1\x64\xe0\x94\x2f\x03\x21\x49\xc7\xce\x4d\x73\x8b\x7e\x4e\x18\x29\xa4\x85\x4a\xe4\x35\x76\x55\xb2\xe7\xe5\x1a\xbb\x6d\x38\x3f\x3d\xe2\xdb\x01\x40\x64\x83\x92\x05\xc9\x78\xb9\xd1\x78\x7f\x60\xab\xf9\x44\xda\xd5\xd7\xd3\x62\xe9\xae\xd8\x5f\xce\x3f\xf9\x79\xf1\x7f\xdd\xb9\x9f\xdf\x00\x00\x00\xff\xff\xd9\xe6\xb6\x53\xeb\x00\x00\x00"

func idtablestakingScriptsGet_node_type_ratioCdcBytes() ([]byte, error) {
	return bindataRead(
		_idtablestakingScriptsGet_node_type_ratioCdc,
		"idTableStaking/scripts/get_node_type_ratio.cdc",
	)
}

func idtablestakingScriptsGet_node_type_ratioCdc() (*asset, error) {
	bytes, err := idtablestakingScriptsGet_node_type_ratioCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "idTableStaking/scripts/get_node_type_ratio.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xa4, 0x27, 0xe6, 0x4, 0x86, 0x23, 0x25, 0x65, 0xf9, 0xf4, 0xdb, 0x7e, 0xdf, 0xf4, 0xcc, 0x96, 0xf1, 0xd7, 0xda, 0xd8, 0x20, 0xa, 0xc1, 0xb, 0x17, 0x4c, 0xf8, 0xb8, 0x4c, 0xfa, 0x5a, 0xf2}}
	return a, nil
}

var _idtablestakingScriptsGet_node_unstaked_tokensCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\xce\xb1\x6a\x03\x31\x10\x04\xd0\x5e\x5f\x31\x65\xdc\xd8\x29\x42\x0a\x43\x0a\x07\x9d\x41\x10\x5c\x44\x72\x91\x52\x67\xaf\x6c\x71\xba\xd5\x21\xad\x88\x21\xe4\xdf\x83\x7d\xc6\x55\xaa\x85\x59\x66\x78\x71\x9c\x72\x11\x6c\x53\xfe\x36\xda\xf9\x3e\x91\x15\x3f\x44\x3e\x21\x94\x3c\xe2\xf9\x62\x74\xb7\x73\xc6\x7d\xb9\xcd\xfb\x47\xb7\xd1\xfa\xb3\xb3\x56\xa9\xd5\x0a\xee\x1c\x2b\xea\xa1\xc4\x49\x50\x48\x5a\xe1\x0a\x39\x13\x7a\x9f\x3c\x1f\x08\x39\xa0\x71\x15\x3f\xd0\x11\x92\x07\xe2\x7a\x8d\x3c\x38\x1f\x49\xa9\xa9\xf5\x08\x8d\x31\xfa\xc8\x4f\xd7\xc8\xe8\x35\xac\x94\xc8\xa7\xc5\x1a\xfb\x6d\xbc\xbc\xbe\xe0\x47\x01\x40\x22\xb9\x95\x0c\x87\x8c\xb7\x7f\xa8\xcb\xdd\xfd\xfb\x18\x9a\xef\xe2\x56\x9f\x6d\x8f\x85\xe5\x6c\xd9\xdf\x69\xea\xf7\x2f\x00\x00\xff\xff\xed\xa2\xe5\x11\x02\x01\x00\x00"

func idtablestakingScriptsGet_node_unstaked_tokensCdcBytes() ([]byte, error) {
	return bindataRead(
		_idtablestakingScriptsGet_node_unstaked_tokensCdc,
		"idTableStaking/scripts/get_node_unstaked_tokens.cdc",
	)
}

func idtablestakingScriptsGet_node_unstaked_tokensCdc() (*asset, error) {
	bytes, err := idtablestakingScriptsGet_node_unstaked_tokensCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "idTableStaking/scripts/get_node_unstaked_tokens.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xca, 0xa8, 0x4b, 0x66, 0x19, 0x7f, 0x23, 0x8c, 0x14, 0x37, 0x8f, 0xc6, 0xfb, 0x78, 0x7a, 0x4d, 0x97, 0xc, 0x94, 0xe7, 0x9b, 0x1e, 0xa, 0xa8, 0x8b, 0xcf, 0xbb, 0x18, 0x65, 0xc7, 0x5d, 0x9a}}
	return a, nil
}

var _idtablestakingScriptsGet_node_unstaking_requestCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x8e\x31\x6b\x02\x41\x10\x46\xfb\xfd\x15\x5f\x19\x1b\x4d\x11\x52\x08\x29\x0c\x7b\xc2\x42\xb0\xf0\xd6\x22\xe5\x1a\xe7\x74\xf1\x76\xe6\xb2\x3b\x4b\x84\x90\xff\x1e\x72\x9a\xab\xac\x06\xe6\xe3\x3d\x5e\x4c\x83\x64\xc5\xba\x97\x2f\x67\x7d\xd8\xf7\xd4\x6a\x38\x47\x3e\xa2\xcb\x92\xf0\x78\x71\xb6\xd9\x78\xe7\xdf\xfd\xea\xf5\xad\x59\x59\xbb\x6d\xda\xd6\x98\xc5\x02\xfe\x14\x0b\xca\x47\x8e\x83\x22\x93\xd6\xcc\x05\x7a\x22\x64\xfa\xac\x54\x94\x0e\xa8\x5c\x6e\xae\x90\xa4\xb2\xa2\x93\x8c\x00\x96\x03\x19\x33\xd4\x3d\xba\xca\x48\x21\xf2\xc3\xdf\xcb\xd9\x25\x5a\xcd\x91\x8f\xb3\x25\x76\xeb\x78\x79\x7e\xc2\xb7\x01\x80\x9e\x74\x84\x1c\x77\x82\x97\x3b\xad\xf3\xcd\x6d\x9d\x44\xd7\x3b\x1b\xf1\x6b\xdc\x64\x98\xab\x9c\x89\xcb\xf6\x3f\xd3\xcb\x6e\xec\x24\xf3\xf3\x1b\x00\x00\xff\xff\x79\x9d\x09\x48\x0d\x01\x00\x00"

func idtablestakingScriptsGet_node_unstaking_requestCdcBytes() ([]byte, error) {
	return bindataRead(
		_idtablestakingScriptsGet_node_unstaking_requestCdc,
		"idTableStaking/scripts/get_node_unstaking_request.cdc",
	)
}

func idtablestakingScriptsGet_node_unstaking_requestCdc() (*asset, error) {
	bytes, err := idtablestakingScriptsGet_node_unstaking_requestCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "idTableStaking/scripts/get_node_unstaking_request.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x0, 0x9a, 0x2b, 0x37, 0x6, 0x8a, 0x4, 0xbb, 0xdd, 0x5f, 0xc4, 0xae, 0x23, 0x26, 0x8d, 0x28, 0xee, 0xe8, 0x4, 0xc1, 0xde, 0x14, 0x1f, 0x48, 0x86, 0x41, 0xef, 0xb4, 0xc3, 0x29, 0x4a, 0xcb}}
	return a, nil
}

var _idtablestakingScriptsGet_node_unstaking_tokensCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x8e\xbd\x6a\xc3\x30\x14\x46\x77\x3d\xc5\x37\x36\x4b\xd2\xa1\x74\x08\x74\x48\x91\x03\x82\x92\xa1\x52\x86\x8e\x72\x2a\x25\x22\xf2\x95\x91\xae\xa8\xa1\xf4\xdd\x8b\x7f\xea\xa9\xd3\x85\xef\x72\x0e\x27\x74\x7d\xca\x8c\x63\x4c\x5f\x4a\x1a\xdb\x46\xa7\xd9\xde\x03\x5d\xe1\x73\xea\xf0\x38\x28\xd9\x9c\x8c\x32\x1f\xe6\xf0\xfa\xd6\x1c\xa4\x7c\x6f\xb4\x16\x62\xb7\x83\xb9\x85\x82\x72\xc9\xa1\x67\x64\xc7\x35\x53\x01\xdf\x1c\x5a\x1b\x2d\x5d\x1c\x92\x47\xa5\xb2\xc8\x38\xdd\x1d\x95\x71\xb3\xa0\xf4\xe9\x84\xe8\x6b\x0b\x5f\x09\x9d\x0d\xf4\x30\x4e\x4a\xee\xa1\x39\x07\xba\x6e\xf6\x38\x1f\xc3\xf0\xfc\x84\x6f\x01\x00\xd1\xf1\x04\x29\xf2\x09\x2f\xff\xb4\x6e\x4f\xcb\x77\x15\xcd\x77\x33\xe1\x73\xdc\x6a\xd8\xce\x2d\xe7\xbf\x36\xf1\xf3\x1b\x00\x00\xff\xff\xc7\x92\x11\x03\x04\x01\x00\x00"

func idtablestakingScriptsGet_node_unstaking_tokensCdcBytes() ([]byte, error) {
	return bindataRead(
		_idtablestakingScriptsGet_node_unstaking_tokensCdc,
		"idTableStaking/scripts/get_node_unstaking_tokens.cdc",
	)
}

func idtablestakingScriptsGet_node_unstaking_tokensCdc() (*asset, error) {
	bytes, err := idtablestakingScriptsGet_node_unstaking_tokensCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "idTableStaking/scripts/get_node_unstaking_tokens.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xbd, 0xf6, 0x22, 0xda, 0x4e, 0x2a, 0x9, 0x28, 0x40, 0x45, 0xb2, 0x8, 0x55, 0xc6, 0x13, 0x27, 0xf4, 0xcb, 0x53, 0x99, 0x5b, 0x2d, 0xab, 0x76, 0x7, 0x33, 0xe7, 0xa, 0x2, 0xb2, 0xd9, 0x6b}}
	return a, nil
}

var _idtablestakingScriptsGet_proposed_tableCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\xce\xb1\x4a\x04\x31\x10\x06\xe0\x3e\x4f\xf1\x97\x77\x8d\x67\x6d\x77\x92\x15\x02\x72\x88\x49\x23\x62\xb1\x77\x3b\x9b\x1d\xdc\x9d\x84\xc9\x04\x15\xf1\xdd\x45\xb0\xbc\x17\xf8\xf8\x78\xab\x45\x0d\x0f\x6b\xf9\x08\x3e\x8d\xe7\x95\xa2\x8d\xef\x2c\x19\xb3\x96\x0d\xb7\x9f\xc1\x0f\xa7\x14\xd2\x4b\x3a\xde\x3f\x0e\x47\xef\x9f\x87\x18\x9d\x3b\x1c\x90\x16\x6e\x68\x17\xe5\x6a\x50\xb2\xae\xd2\x60\x0b\xe1\xd2\x55\x49\x0c\x3c\x91\x18\xdb\x17\xec\x4f\xc5\x4a\x92\x6d\x71\xae\xf6\x33\xe6\x2e\xd8\x46\x96\xdd\xfe\x0e\xaf\xd1\x94\x25\xbf\xe1\xdb\x01\xf8\x97\xae\x7c\x6e\x32\xd9\x93\x96\x5a\x1a\x4d\xa7\x32\x51\xf0\x6d\xb7\x77\x3f\xbf\x01\x00\x00\xff\xff\xd3\xe0\x18\x61\xc0\x00\x00\x00"

func idtablestakingScriptsGet_proposed_tableCdcBytes() ([]byte, error) {
	return bindataRead(
		_idtablestakingScriptsGet_proposed_tableCdc,
		"idTableStaking/scripts/get_proposed_table.cdc",
	)
}

func idtablestakingScriptsGet_proposed_tableCdc() (*asset, error) {
	bytes, err := idtablestakingScriptsGet_proposed_tableCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "idTableStaking/scripts/get_proposed_table.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x8f, 0xca, 0x75, 0x49, 0x77, 0x1d, 0x0, 0x4c, 0x7b, 0x1a, 0xc3, 0x14, 0x3f, 0xd9, 0x9e, 0x45, 0xf1, 0x9a, 0xeb, 0x3e, 0x4e, 0x8a, 0x4, 0x5e, 0x94, 0x18, 0xcf, 0x6b, 0x8b, 0x24, 0xd6, 0x5e}}
	return a, nil
}

var _idtablestakingScriptsGet_stake_requirementsCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x8e\x31\x4b\x33\x41\x14\x45\xfb\xf9\x15\xf7\xeb\x92\xe6\x8b\x85\x88\x04\x2c\x22\xbb\x81\x05\xb5\xc8\x4e\x0a\x11\x8b\xd9\xe4\x6d\xf2\xd8\x99\x37\x9b\x99\x37\x18\x10\xff\xbb\x8c\xb6\xb6\x07\xee\xb9\x87\xc3\x1c\x93\x62\xeb\xe3\x47\xd7\x58\x37\x78\xea\xd5\x4d\x2c\x27\x8c\x29\x06\xdc\x5c\xbb\xa6\x7d\xb1\x9d\x7d\xb5\x9b\xc7\xa7\x76\xd3\x34\xbb\xb6\xef\x8d\x59\xad\x60\xcf\x9c\x91\x0f\x89\x67\x45\x22\x2d\x49\x32\xf4\x4c\x18\x9c\x77\x72\x20\xc4\x11\x59\xdd\x44\x47\x68\x9c\x48\x72\x05\x0e\x12\x8f\x64\xcc\x5c\x06\x8c\x45\x10\x1c\xcb\x22\x45\x4f\x6b\xec\x3b\xd1\xfb\xe5\x1a\xfb\x2d\x5f\xef\x6e\xf1\x69\x00\xc0\x53\x75\x5f\xf0\xf0\x47\xe0\xff\x13\xe9\x33\x0b\x87\x12\x2a\xa1\x1d\x5d\x0a\x27\x0a\x24\x9a\x17\x4b\xf3\xb3\xff\xed\xaa\x8a\xb7\xfa\xf2\xfe\xcf\x7c\x7d\x07\x00\x00\xff\xff\x94\x17\x67\xd0\xf1\x00\x00\x00"

func idtablestakingScriptsGet_stake_requirementsCdcBytes() ([]byte, error) {
	return bindataRead(
		_idtablestakingScriptsGet_stake_requirementsCdc,
		"idTableStaking/scripts/get_stake_requirements.cdc",
	)
}

func idtablestakingScriptsGet_stake_requirementsCdc() (*asset, error) {
	bytes, err := idtablestakingScriptsGet_stake_requirementsCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "idTableStaking/scripts/get_stake_requirements.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xa2, 0x42, 0x8e, 0x32, 0x9e, 0x5d, 0x9, 0x77, 0x67, 0x63, 0xb3, 0x34, 0x22, 0x62, 0x79, 0x87, 0xaf, 0x67, 0x2c, 0x9b, 0xed, 0x6c, 0x82, 0xf7, 0x38, 0xaa, 0x16, 0x74, 0xcd, 0x2a, 0xf8, 0x5d}}
	return a, nil
}

var _idtablestakingScriptsGet_tableCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\xce\xbf\x4a\x04\x31\x10\x07\xe0\x3e\x4f\xf1\x2b\xef\x1a\xcf\xda\xee\x24\x2b\x04\x64\x0b\x93\x46\xc4\x62\xff\xcc\x66\x07\x77\x27\xcb\x64\x82\x8a\xf8\xee\x22\x58\xfa\x02\x1f\x1f\xef\x47\x51\xc3\xc3\x56\xde\x83\x4f\xc3\xb8\x51\xb4\xe1\x8d\x25\x63\xd1\xb2\xe3\xf6\x23\xf8\xae\x4f\x21\x3d\xa7\xeb\xfd\x63\x77\xf5\xfe\xa9\x8b\xd1\xb9\xcb\x05\x69\xe5\x8a\x3a\x29\x1f\x06\x25\x6b\x2a\x15\xb6\x12\xa6\xa6\x4a\x62\xe0\x99\xc4\xd8\x3e\x61\xbf\x2a\x36\x92\x6c\xab\x73\x47\x1b\xb1\x34\xc1\x3e\xb0\x9c\xce\x77\x78\x89\xa6\x2c\xf9\x15\x5f\x0e\xc0\x9f\xf4\xcf\xe7\x26\x93\xf5\x65\xa6\xe0\xeb\xe9\xec\xbe\x7f\x02\x00\x00\xff\xff\x94\x0c\xfa\xd5\xb8\x00\x00\x00"

func idtablestakingScriptsGet_tableCdcBytes() ([]byte, error) {
	return bindataRead(
		_idtablestakingScriptsGet_tableCdc,
		"idTableStaking/scripts/get_table.cdc",
	)
}

func idtablestakingScriptsGet_tableCdc() (*asset, error) {
	bytes, err := idtablestakingScriptsGet_tableCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "idTableStaking/scripts/get_table.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x8f, 0xf8, 0x5a, 0xde, 0x69, 0xf4, 0xb2, 0x52, 0xda, 0x8c, 0xf5, 0xfd, 0xb, 0x8, 0x27, 0x24, 0xc0, 0x38, 0xc, 0x44, 0x35, 0xdf, 0xfc, 0x26, 0xe7, 0xe6, 0x2d, 0xd, 0x2d, 0x51, 0x84, 0x99}}
	return a, nil
}

var _idtablestakingScriptsGet_total_stakedCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x8f\xc1\x6b\xfa\x30\x1c\xc5\xef\xfd\x2b\x9e\x37\xe5\x07\xea\xe1\xb7\x31\x06\x3d\x28\x55\x28\x0c\x0f\x6b\x3c\x8c\xb1\x43\xac\xdf\xba\xd0\x34\x91\xe4\x9b\x4d\x19\xfe\xef\xc3\xc4\x39\x0b\xeb\xa1\x21\xf0\xde\xe7\x7d\xa2\xba\xbd\x75\x8c\xa5\xb6\x9f\x65\x21\xe4\x46\x53\xc5\xb2\x55\x66\x87\xc6\xd9\x0e\xd3\x43\x59\x2c\x56\xa2\x14\x2f\x62\x36\x7f\x5a\xcc\x8a\xe2\x79\x51\x55\x59\xb6\x0f\x1b\x34\xc1\xa0\x93\xca\x0c\x47\x8f\x58\x2f\xd5\xe1\xfe\x3f\xbe\x32\x00\xd0\xc4\xf0\x2c\x5b\xda\x0a\xdb\x92\xf1\xc8\xff\xe0\x8f\x77\xc4\xc2\xb2\xd4\x29\x53\xc5\xfc\xfc\xb8\xb2\x5b\x12\xc7\x3d\x0d\x47\x59\x64\x4d\x26\xa8\xa5\xae\x83\x96\x4c\xe0\x77\x02\x9f\x3b\x30\xa1\xdb\x90\x83\x6d\xc0\x69\x22\xed\xc5\xca\x87\x74\x29\x95\x98\x57\xb9\x1c\xd3\xf1\x34\x26\x1a\xeb\x60\x2e\x43\x50\xa6\x27\x3b\x6e\xe9\xe8\x2f\x0f\xb9\x08\x14\x16\xc6\x32\x6a\x1b\x0c\x43\xd6\x35\x79\x1f\xeb\xfe\x1a\x52\xcd\x2f\x6f\x90\x63\x5d\x1a\x7e\x18\xde\x8d\x6e\x30\xe7\xef\x46\x0a\x79\xef\xf6\xaf\xa7\xf0\xfa\xc3\x7a\x1b\x5c\xfb\xa7\x2c\xfd\xe3\xe1\x88\x83\x33\xb7\x84\xec\xf4\x1d\x00\x00\xff\xff\x92\x54\xac\x93\xc9\x01\x00\x00"

func idtablestakingScriptsGet_total_stakedCdcBytes() ([]byte, error) {
	return bindataRead(
		_idtablestakingScriptsGet_total_stakedCdc,
		"idTableStaking/scripts/get_total_staked.cdc",
	)
}

func idtablestakingScriptsGet_total_stakedCdc() (*asset, error) {
	bytes, err := idtablestakingScriptsGet_total_stakedCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "idTableStaking/scripts/get_total_staked.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xed, 0xe, 0x2f, 0xe3, 0x9c, 0xa, 0x4d, 0xce, 0x85, 0x12, 0x72, 0x14, 0x74, 0x65, 0x62, 0x3b, 0x74, 0x22, 0x25, 0xaf, 0x1a, 0x94, 0x4d, 0x5d, 0x4c, 0x74, 0xb6, 0x76, 0xd3, 0x6d, 0x7e, 0xf6}}
	return a, nil
}

var _idtablestakingScriptsGet_total_staked_by_typeCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x8e\xc1\x4a\xc3\x40\x14\x45\xf7\xf3\x15\xd7\x5d\xbb\xb1\x2e\x44\xa4\xe0\xa2\x25\x29\x04\xa4\x0b\x33\x5d\x88\xb8\x98\x34\x2f\xed\x90\xc9\x7b\xc3\xcc\x0b\xb6\x88\xff\x2e\x89\xba\x73\x7b\xb9\x9c\x73\xfc\x10\x25\x29\x76\x41\x3e\xaa\xc2\xba\x26\x50\xad\xae\xf7\x7c\x42\x97\x64\xc0\xdd\xa5\x2a\xca\xbd\xad\xec\xab\xdd\x6c\x9f\xcb\x4d\x51\xbc\x94\x75\x6d\xcc\x6a\x05\x7b\xf6\x19\xf9\x98\x7c\x54\x24\xd2\x31\x71\x86\x9e\x09\x8d\x0b\x8e\x8f\x04\xe9\x90\xd5\xf5\xd4\x42\xa5\x27\xce\xd3\xe0\xc0\xd2\x92\x31\x71\x6c\xd0\x8d\x8c\xc1\x79\x5e\x24\x09\xb4\xc6\xa1\x62\x7d\x5c\xae\x71\xd8\xf9\xcb\xc3\x3d\x3e\x0d\x00\x04\xd2\x3f\xc8\xd3\x3f\x8d\xb7\x27\x52\x2b\xea\x82\x9d\x0d\xf5\xfc\xdc\x5e\xf7\xd2\x92\xbd\x46\x5a\x2c\xcd\x4c\xf9\xa9\xfb\x05\xbd\x4d\xba\xf7\x1b\xf3\xf5\x1d\x00\x00\xff\xff\xa3\x91\xa6\x55\xfa\x00\x00\x00"

func idtablestakingScriptsGet_total_staked_by_typeCdcBytes() ([]byte, error) {
	return bindataRead(
		_idtablestakingScriptsGet_total_staked_by_typeCdc,
		"idTableStaking/scripts/get_total_staked_by_type.cdc",
	)
}

func idtablestakingScriptsGet_total_staked_by_typeCdc() (*asset, error) {
	bytes, err := idtablestakingScriptsGet_total_staked_by_typeCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "idTableStaking/scripts/get_total_staked_by_type.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xea, 0x23, 0xae, 0xad, 0x6a, 0x8a, 0xa, 0x6e, 0x26, 0x92, 0x41, 0x25, 0x43, 0x64, 0x93, 0x17, 0xde, 0xa4, 0x31, 0x94, 0x9d, 0xb7, 0xb2, 0x15, 0xcb, 0xe1, 0xf8, 0x7b, 0x9a, 0x28, 0xf6, 0xa4}}
	return a, nil
}

var _idtablestakingScriptsGet_weekly_payoutCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\xce\xb1\x4b\xc4\x30\x14\xc7\xf1\x3d\x7f\xc5\x6f\xbc\x5b\x3c\x07\x71\x70\x3b\x49\x0e\x0a\x22\x62\xe3\xe0\xf8\xda\x7b\x6d\x43\xdb\xbc\x90\xbc\x60\x45\xfc\xdf\xa5\xe0\x78\xeb\x77\xf8\xf0\x0d\x6b\x92\xac\xb8\x2c\xf2\xd5\x58\x4f\xdd\xc2\xad\xd2\x1c\xe2\x88\x21\xcb\x8a\xfb\xad\xb1\xee\xd5\x37\xfe\xd3\x9f\x9f\x5f\xdc\xd9\xda\x77\xd7\xb6\xc6\x9c\x4e\xf0\x53\x28\x28\x7d\x0e\x49\x91\x59\x6b\x8e\x05\x3a\x31\x3a\x5a\x28\xf6\x0c\x19\x50\x94\x66\xbe\x42\x65\xe6\x58\xf6\x40\x88\x72\x65\x63\x52\xed\x30\xd4\x88\x95\x42\x3c\x1c\x9f\xf0\x71\x09\xdb\xe3\x03\x7e\x0c\x80\x7f\xec\xc6\xd2\xdd\xc8\xea\x92\xf4\x93\xdf\xc1\x37\xfa\x96\xaa\x87\xa3\xf9\xfd\x0b\x00\x00\xff\xff\xaa\x9e\x1d\x2b\xc4\x00\x00\x00"

func idtablestakingScriptsGet_weekly_payoutCdcBytes() ([]byte, error) {
	return bindataRead(
		_idtablestakingScriptsGet_weekly_payoutCdc,
		"idTableStaking/scripts/get_weekly_payout.cdc",
	)
}

func idtablestakingScriptsGet_weekly_payoutCdc() (*asset, error) {
	bytes, err := idtablestakingScriptsGet_weekly_payoutCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "idTableStaking/scripts/get_weekly_payout.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x9b, 0xeb, 0x9b, 0x20, 0x40, 0xd3, 0x5b, 0x8, 0x6d, 0xe7, 0x22, 0xb, 0xdd, 0x87, 0xa4, 0x41, 0xf2, 0xb5, 0xc2, 0x43, 0x2d, 0x8f, 0x9a, 0x65, 0xf4, 0x31, 0xfa, 0xd2, 0x6f, 0xda, 0x4f, 0x9d}}
	return a, nil
}

var _inspect_fieldCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\xcc\xc1\x09\x42\x31\x0c\x06\xe0\x7b\xa7\xf8\x8f\x7a\x91\x22\x5a\x1f\xde\xbc\x74\x01\x71\x80\xbe\x9a\x42\xc0\x26\x8f\x98\xea\x03\x71\x77\x17\x70\x81\x8f\xfb\xa2\xe6\xc8\x0f\x7d\x5f\xc9\x5e\x5c\xe9\x52\xab\x0e\x71\x34\xd3\x8e\xb8\xb6\xe9\x9e\x28\x1e\xa7\x34\xc7\xb2\x8f\xf5\x14\xc2\x32\x66\xb4\x21\xe8\x85\x65\xb3\x3d\xe3\x96\x79\x4d\x07\x7c\x02\x00\x18\xf9\x30\xf9\xe3\xed\xdc\x8a\x3c\x4b\x75\x56\xc9\x44\xe1\xfb\x0b\x00\x00\xff\xff\x7c\xe1\x51\x3b\x7a\x00\x00\x00"

func inspect_fieldCdcBytes() ([]byte, error) {
	return bindataRead(
		_inspect_fieldCdc,
		"inspect_field.cdc",
	)
}

func inspect_fieldCdc() (*asset, error) {
	bytes, err := inspect_fieldCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "inspect_field.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x74, 0xeb, 0x82, 0x68, 0x87, 0xc8, 0xaf, 0x97, 0x60, 0xf6, 0x63, 0x18, 0x23, 0x85, 0x7b, 0xb6, 0xf6, 0xbb, 0x8c, 0x4d, 0x40, 0x9c, 0x25, 0xc, 0xc5, 0x56, 0xa, 0xdf, 0x63, 0xa8, 0x28, 0xea}}
	return a, nil
}

var _lockedtokensAdminAdmin_create_shared_accountsCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x56\x4d\x6f\xe3\x36\x10\xbd\xeb\x57\x0c\xf6\x50\xc8\x80\x63\x79\x6f\xad\x90\x64\xe1\xe6\xa3\x0d\xe2\x6e\x82\x7c\x74\x0f\x45\x0f\x13\x69\x6c\x13\x96\x49\x95\xa4\x9c\x1a\x41\xfe\x7b\x41\x52\x92\x49\x5b\xda\x38\x68\x80\xf5\x21\x08\xc4\x79\x9c\x99\x37\xf3\x38\xc3\x56\xa5\x90\x1a\x2e\x0b\xf1\xfc\x20\x96\xc4\x61\x26\xc5\x0a\xc6\xff\x5e\x4e\x6f\xbe\x3d\xdc\x5c\x5f\x7c\x9d\x9c\x9f\xdf\x5d\xdc\xdf\x47\x8d\x61\xc5\xe7\xec\xa9\xa0\xd0\xf8\xf1\xeb\x6f\x57\xbf\x4e\x2f\xba\x00\x53\x91\x2d\x29\xb7\xe6\xaa\xb1\x9f\xde\x9c\x5d\x5f\x9c\x07\xd6\x51\x92\x24\xf0\x20\x91\x2b\xcc\x34\x13\x1c\xf4\x02\x35\xe8\x05\xc1\x0a\x19\x07\x6d\xdd\x61\xbe\x62\x1c\x9e\x45\x55\xe4\xa0\xd8\x9c\x5b\x90\x16\x90\x49\x42\x4d\x80\xa0\x16\x28\x29\x07\xcc\x32\x51\x71\x0d\xc8\x73\x40\x0e\x15\x2f\x6c\x10\xd6\x1c\xdd\xd1\x4c\x48\x40\xa8\x14\xc9\x28\xd2\x5b\xb7\x71\x04\x00\x50\xa2\xd4\x0c\x8b\x89\x71\x77\x5b\x3d\x15\x2c\xbb\xa6\x4d\x0a\x7f\x3d\x5e\x71\xfd\xf3\xdf\x43\x48\x12\xf8\x46\x6c\xbe\xd0\x29\x7c\x1e\x8f\x7d\xc8\xa3\x22\xf9\x06\xe2\x97\x1a\x31\xab\x8a\x43\xcc\x3f\x8f\xc7\xe3\x68\x00\xf0\x12\x39\x3f\x92\x4a\x94\x14\x5b\x2a\x52\x98\x54\x7a\x31\x71\xd9\x0e\x1a\x13\xf3\x4b\x12\x38\x73\xa4\x18\x0a\x39\x3d\x37\x9c\x28\x47\x4a\x9e\x9b\x03\x26\x61\x49\x1b\xd5\xa2\x0a\xd2\x35\x85\xf5\x9d\x70\xe2\x7b\x88\x4b\xdc\x90\x4c\x5d\x19\x06\x01\xca\x10\x79\x08\xa6\x05\x05\x6e\x46\x98\xe7\x2d\x0d\x71\x27\xfb\x83\x77\x20\x03\x56\x3d\x9f\x5e\x90\x21\x6e\xaf\x14\x83\x2e\x26\x11\x4a\xc9\xd6\xe6\xbf\x82\xf1\xa5\xe9\x3b\xc3\xad\xd2\xc2\xb4\xdc\x1a\xab\x42\x07\x94\xd8\x2f\x67\x58\xe2\x13\x2b\x98\xde\xc0\x49\x18\x79\x6b\x6b\x7e\x23\x73\xe3\xf1\x4f\xad\x0a\x47\x7f\x1a\xf0\x69\x9c\xd4\x1e\x93\x59\x73\x62\x0f\x86\xa0\x51\xce\x49\xa7\x90\x18\xf7\x38\xdf\x35\x18\x04\xb7\x7f\xf9\x02\x25\x72\x96\xc5\x9f\xce\xac\x74\xb8\xd0\x2e\x05\xe3\x0f\x9c\x92\x2d\x0c\xb2\x36\xdc\x4f\x21\x05\xad\xc2\x9c\x92\x6a\x3d\xae\x90\xe3\x9c\xa4\x6d\xa9\x9a\x07\xa6\xc1\xc8\xd5\x10\x13\x68\x31\xa0\xa6\xd8\xbe\x09\x7f\xd4\x57\x1c\x1f\x05\x2f\xc5\xc8\x39\x9c\xee\x19\xc6\x96\xd6\x74\x97\xdd\xbe\xf6\x50\xb8\xa6\xf8\xf8\x68\xdf\xe1\x10\xb4\x48\x43\x97\xfb\xce\xee\x1d\xb9\xb7\xa8\x17\x1e\x1d\x26\x03\xed\x59\xbd\xaf\xc6\x6f\xb8\x3c\x8d\x03\x90\xf9\xbd\x81\xb8\x75\x2d\x62\x82\x1c\xee\x61\x9b\x3e\x39\x3c\xd1\xf6\x8a\xc1\xf7\x3a\x27\xac\x7f\x77\xdb\xb4\x3c\xfd\x2e\x8a\xbc\xb7\xc4\x0f\x5b\x8b\xd8\x95\x69\x92\xe7\x92\x94\x4a\xf7\x95\x6e\x3e\x0f\x03\xee\xd3\x9e\x4a\xf4\xa8\xde\xb6\x43\x40\xd2\xf1\x91\x17\xe2\x10\x82\xb3\xbd\x0e\xf1\x62\xf5\x18\xdb\xb2\xde\xe3\xb5\xa3\xf0\xde\x4d\x2f\x1d\xb5\xa9\x91\x57\x7c\x26\x5e\x4f\xe3\xef\x1b\xb8\x47\xcb\x06\xd2\x5d\xee\xee\xa8\xbb\x0a\x65\x9f\xdc\x1f\xd5\xce\xee\xbd\xff\xd8\x66\x3e\xf0\x1d\xf4\xb7\x0b\xf3\xac\xfb\xcd\xdd\xd9\xd1\x8e\x28\x51\x14\xe4\x96\x95\x13\x07\x0e\x09\x7a\x12\x52\x8a\xe7\xae\xc2\xef\xc0\x4f\x63\xb3\x17\xf5\xe7\xb5\x63\xfe\xae\xfc\x5c\x10\x20\x69\x46\x92\x78\x46\x26\x3f\x97\x68\xd6\x5e\xe8\xa7\xd8\x95\x9e\x91\x5e\x33\xce\x83\x86\x78\x4b\xa9\xcd\xe2\xb5\x6b\xbe\x33\x88\x3d\x59\x4f\xdc\x5a\xd3\xd5\x8d\xe1\x40\xba\x59\x93\x94\x2c\x77\xfb\x4d\x4e\x33\x3b\xbe\xb6\x5b\xac\xa4\x8c\xd8\x9a\x64\xcf\x58\xa8\xb8\xa9\x7b\x9c\x94\x56\x3b\xdb\xe1\x79\x57\xc3\x42\x5e\x3b\x06\xa1\xd9\xa8\x1a\x1f\x6e\x55\x5d\xa1\x5c\xaa\xe6\x5b\x3d\x20\x15\xa0\xda\x6e\x9f\xdd\xa1\x38\x19\x4d\xf8\xe6\x8e\x94\xa8\x64\x46\x2f\xc1\x8a\x3d\x6a\x42\x7a\xdd\x91\x52\x6f\xec\xa1\x6e\xfe\xcf\x00\x08\x08\x2f\x2b\x0d\x5c\xc8\x15\x16\xdb\xc4\x19\x37\x3b\xb7\x59\x48\x0d\x27\x15\x67\xff\x54\x04\xa5\x7f\xc7\xc7\xe6\xea\x88\xbc\x3c\x2c\xe3\x9e\xd5\xc8\x4b\xcf\xfc\x7d\x8d\x5e\xa3\xff\x02\x00\x00\xff\xff\xf8\x87\x68\x2e\x04\x0d\x00\x00"

func lockedtokensAdminAdmin_create_shared_accountsCdcBytes() ([]byte, error) {
	return bindataRead(
		_lockedtokensAdminAdmin_create_shared_accountsCdc,
		"lockedTokens/admin/admin_create_shared_accounts.cdc",
	)
}

func lockedtokensAdminAdmin_create_shared_accountsCdc() (*asset, error) {
	bytes, err := lockedtokensAdminAdmin_create_shared_accountsCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "lockedTokens/admin/admin_create_shared_accounts.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x7a, 0xfb, 0xc5, 0x7f, 0xb7, 0xa8, 0x96, 0x5a, 0xc3, 0x7b, 0xbd, 0xb9, 0xb, 0xed, 0x63, 0xd3, 0xd0, 0x87, 0xa1, 0xd0, 0x72, 0xc5, 0xd0, 0x68, 0xa5, 0x2f, 0x4d, 0xbd, 0x87, 0xc1, 0xcc, 0xe}}
	return a, nil
}

var _lockedtokensAdminAdmin_deploy_contractCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\x8f\x41\x4b\xc4\x30\x10\x85\xef\xfd\x15\x73\x4c\x61\xe9\x59\x0a\x1e\xf6\xa6\x08\x22\xa8\xa7\x65\x0f\xe3\xcc\xa8\xa1\xdd\x49\x48\xa6\x60\x90\xfd\xef\xd2\x4a\x6c\xc0\x1c\x5e\x08\xbc\xf7\xf2\x3d\x4b\xa8\x19\xc9\x7c\x50\x47\x41\x2d\x21\xd9\x23\x5e\x64\x84\x67\x4b\x5e\x3f\x0e\x40\x81\x9b\x57\x5c\xde\x66\x4f\x0f\x52\xf2\x08\xa7\xd3\xeb\xbd\xda\xcd\xf9\xdc\xc3\x77\x07\x00\xb0\x49\x4c\x12\x31\x89\x43\xbe\x78\x1d\xe1\xb8\xd8\xe7\x91\x28\x2c\x6a\xd5\xb6\x9e\x59\x0c\xe6\x40\x93\xf0\x4b\x98\x44\x33\xdc\xb6\x4e\x17\xb1\x48\x1a\x61\xeb\xe8\xf7\x50\x13\x18\x2a\x6d\x1e\x90\xd9\xe9\xc6\xdc\x2e\xa8\xe4\xab\x0e\x2c\xeb\x75\x27\x5f\xae\x3f\xd4\xd6\xbf\xda\xf7\x90\x60\x92\x02\x5e\x9b\x79\x0d\xeb\xbf\xaf\x91\xf9\xa9\x1a\xdd\x24\x65\x27\xbc\x76\xbf\x7a\xed\x7e\x02\x00\x00\xff\xff\xf7\x34\x6e\x3d\x59\x01\x00\x00"

func lockedtokensAdminAdmin_deploy_contractCdcBytes() ([]byte, error) {
	return bindataRead(
		_lockedtokensAdminAdmin_deploy_contractCdc,
		"lockedTokens/admin/admin_deploy_contract.cdc",
	)
}

func lockedtokensAdminAdmin_deploy_contractCdc() (*asset, error) {
	bytes, err := lockedtokensAdminAdmin_deploy_contractCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "lockedTokens/admin/admin_deploy_contract.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xb6, 0x7d, 0xf3, 0x9e, 0xd6, 0xcd, 0x4c, 0x53, 0x36, 0x2f, 0x46, 0x2a, 0x35, 0xc5, 0x69, 0xe7, 0xe9, 0x68, 0x3a, 0x66, 0x1, 0xc2, 0xf0, 0xfb, 0xf4, 0xa0, 0xa5, 0xc6, 0x15, 0x52, 0x70, 0x44}}
	return a, nil
}

var _lockedtokensAdminAdmin_deposit_account_creatorCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x92\xc1\x6e\xdb\x30\x0c\x86\xef\x7e\x0a\xae\x87\xcd\xbe\x24\x3b\x07\x6b\x0b\xc3\xc9\xa9\xc5\x1a\xb4\x79\x01\x46\x62\x63\xa1\x8e\x28\x50\x74\xba\xa2\xc8\xbb\x0f\xb2\x8d\xc4\xce\x32\x6c\x3a\x25\xf2\xcf\x8f\xfa\x7f\xd2\xed\x03\x8b\xc2\x23\x9b\x37\xb2\x1b\x7e\x23\x1f\xe1\x55\x78\x0f\xdf\x7f\x3d\x3e\x55\x0f\xab\xe5\xe6\xe9\x61\xf5\xb3\x5c\x2e\x9f\x57\x2f\x2f\x59\x36\x9f\xcf\x41\x93\x0a\xd0\xee\x9d\x87\xe8\x76\x3e\x82\xd6\x2e\x82\x0a\xfa\x88\x46\x1d\x7b\x50\x06\x4b\x81\xa3\x53\x40\x30\x18\x70\xeb\x1a\xa7\x1f\x5d\xb9\xf3\xca\xe9\xb6\x8d\xca\xf6\x03\x82\xf0\xc1\x59\x92\x6f\x11\xd0\x18\x6e\xbd\x82\xd6\xa8\x80\x4d\xc3\xef\x09\x4d\xfb\x84\x43\x6b\xbb\xea\x41\x13\xd3\x9d\xd6\x04\x42\x86\xc5\x66\xd9\xa8\x7b\x3e\xa0\xd7\x03\xb9\xb4\x56\x28\xc6\x05\x0c\x3f\x0a\xf8\xcc\x32\x00\x80\x20\x14\x50\x28\xef\xac\x2c\xa0\x6c\xb5\x2e\x7b\xfc\x49\x92\x4e\x43\x0a\x17\x48\xb8\x85\x1d\xe9\x20\xfe\x4b\xbf\xe2\x04\x48\x67\x4a\x3b\x25\xf2\x4c\x86\xdc\xa1\x03\x5e\x50\x66\x3b\xd2\xea\x9c\xdc\x98\xf5\xe3\xeb\x78\x5c\xb3\xfe\xcf\xf0\x98\x4a\x08\x95\xe5\xf3\x9f\x8a\x75\xbb\x6d\x9c\x39\xde\x4d\xc8\xf9\x7f\x96\xad\x51\xeb\xe2\xcb\xa4\x74\xb6\x65\x11\x7e\xcf\x0b\xb8\xbf\x87\x80\xde\x99\xfc\xa6\xe2\xb6\xb1\xe0\x59\xa1\xff\x38\x32\x9e\x06\xd7\x3b\x17\x7a\x25\x21\x6f\xe8\xa6\x98\x66\xde\xed\x59\x99\x66\x53\x71\xd3\x50\xbf\x59\xb7\xfd\xe2\x4d\x5b\x4f\xa2\xba\x48\x67\x73\x85\x72\x77\xcd\xe7\x59\xb8\x16\x77\x40\xa5\xc1\xe4\xa9\xd5\x9f\x53\x9b\xa1\xb5\xe7\xc6\xb9\xc1\xb0\xb8\xfa\xea\x7e\x15\x8e\xd9\x31\xfb\x1d\x00\x00\xff\xff\xe9\xa1\x4a\x96\x6f\x03\x00\x00"

func lockedtokensAdminAdmin_deposit_account_creatorCdcBytes() ([]byte, error) {
	return bindataRead(
		_lockedtokensAdminAdmin_deposit_account_creatorCdc,
		"lockedTokens/admin/admin_deposit_account_creator.cdc",
	)
}

func lockedtokensAdminAdmin_deposit_account_creatorCdc() (*asset, error) {
	bytes, err := lockedtokensAdminAdmin_deposit_account_creatorCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "lockedTokens/admin/admin_deposit_account_creator.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xde, 0xa5, 0xb1, 0xb9, 0x7, 0x4f, 0x77, 0x92, 0x47, 0xdd, 0x83, 0xe6, 0x1a, 0x2a, 0xc8, 0x29, 0x99, 0x1a, 0x22, 0x91, 0x27, 0xfc, 0x9d, 0x2e, 0xf, 0x7c, 0xf, 0x54, 0x2e, 0xa1, 0x9f, 0x22}}
	return a, nil
}

var _lockedtokensAdminCheck_main_registrationCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x92\xd1\x6f\x9b\x30\x10\xc6\xdf\xf9\x2b\x2e\x79\x98\x40\x9a\xd0\x9e\xd1\xd2\x8a\x91\x74\xab\x1a\x35\x55\x93\x69\xcf\x17\x73\x10\xab\xc6\x46\xf6\xa1\x6e\xaa\xf2\xbf\x4f\x18\x88\xf0\x16\x55\xaa\x5f\x10\xe6\x77\xf7\x7d\xf7\x71\xb2\x69\x8d\x65\xb8\xeb\x74\x2d\x8f\x8a\x0e\xe6\x85\x34\x54\xd6\x34\xf0\xe5\xf7\xdd\xcf\xc7\xef\xf7\xdf\xb6\x9b\xc3\xee\x61\xf3\x98\xaf\xd7\xcf\x9b\xfd\x3e\x9a\x0a\x94\x79\x0d\xe1\xed\xee\x57\x00\x4e\xe4\xd6\x88\x17\x2a\x3d\xeb\x26\x78\xbb\x2b\x1e\x36\xeb\x10\x67\x8b\xda\xa1\x60\x69\x74\xdc\xa0\xd4\xb9\x10\xa6\xd3\x9c\x41\x5e\x96\x96\x9c\x4b\xe0\x2d\x8a\x00\x00\x5a\x4b\x2d\x5a\x8a\x9d\xac\x35\xd9\x0c\xf2\x8e\x4f\x23\x7c\x61\xfa\xa3\x88\x01\xcb\x46\xea\x67\xaa\x60\x05\x03\x9e\x1e\x8d\xb5\xe6\xf5\xeb\xa7\xb9\xad\xd4\x3f\xf2\x9e\x2d\x8c\x52\xe4\x4d\xdc\xc4\xbd\xd9\x2c\xf0\x9f\xce\x5e\xfe\xc1\xf7\x6c\x2c\xd6\xf4\x84\x7c\x4a\x2e\x16\xfa\x73\x7b\x0b\x2d\x6a\x29\xe2\x65\x61\x3a\x55\x82\x36\x0c\x83\x09\x40\xb0\x54\x91\x25\x2d\x08\xd8\x00\x9f\x08\x94\x17\x00\xf6\xd1\x7a\xf7\x20\x2e\x1a\xcb\x24\x9c\x6e\x80\xc7\xd9\xef\x75\x65\x86\x49\x6b\xe2\xf1\x6e\x1e\x64\xe8\x2a\xad\x89\x0b\x6c\xf1\x28\x95\xe4\x3f\xd7\xe2\xf8\x61\x54\x49\xf6\xed\xca\xf8\x33\xc1\xf3\x4d\xfc\x3e\xf0\xd4\x1d\x95\x14\x3e\x95\x45\x68\x60\xc8\x20\x4e\x3e\x10\x50\xeb\x9b\xc1\x7f\x22\xef\xe6\x02\xab\xab\x39\xf5\x01\x04\x8d\xc6\x35\x8b\x67\xbd\xd0\x39\xb2\x0c\x71\x60\x7c\x5a\xa9\x74\x16\x33\x0e\xb5\x59\xa8\x94\xc0\x62\x05\x5a\xaa\xcf\x41\x7d\x43\xce\x61\x4d\x19\x2c\x0f\x27\x02\xd7\x92\x90\x95\xa4\x12\x70\xb4\x2b\x9d\x4f\x00\xa7\x55\x18\xef\x17\x50\xa0\xee\x3f\x38\xd2\x65\xb0\x26\x6e\x79\xe9\x3f\xfc\xe3\x73\x74\x8e\xfe\x06\x00\x00\xff\xff\xa0\xfb\x7a\xe1\xd8\x03\x00\x00"

func lockedtokensAdminCheck_main_registrationCdcBytes() ([]byte, error) {
	return bindataRead(
		_lockedtokensAdminCheck_main_registrationCdc,
		"lockedTokens/admin/check_main_registration.cdc",
	)
}

func lockedtokensAdminCheck_main_registrationCdc() (*asset, error) {
	bytes, err := lockedtokensAdminCheck_main_registrationCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "lockedTokens/admin/check_main_registration.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xa1, 0x19, 0x8f, 0x4c, 0x12, 0x9f, 0xe, 0xce, 0xa5, 0x34, 0x61, 0x53, 0xb6, 0x24, 0xf1, 0x31, 0xd4, 0x82, 0xfb, 0xa5, 0x65, 0x9d, 0x5, 0x4f, 0xe, 0x57, 0x9d, 0x5, 0x31, 0x3c, 0xe0, 0x21}}
	return a, nil
}

var _lockedtokensAdminCheck_shared_registrationCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\x90\x51\xcb\x9b\x30\x14\x86\xef\xfd\x15\xef\xe7\xc5\x50\x18\xb2\x6b\xd9\xb7\xe2\xac\x1d\xa3\xd2\x8e\xb6\x63\xd7\x69\x3c\x6a\x68\x4c\x24\x89\x74\x30\xfa\xdf\x87\x5a\x5d\xb3\xdc\x88\xfa\x9c\x9c\xe7\x7d\x45\xd7\x6b\xe3\xb0\x1b\x54\x23\xae\x92\x2e\xfa\x46\x0a\xb5\xd1\x1d\x3e\xfd\xde\xfd\x3c\x7c\xfb\xfe\xb5\x2c\x2e\xc7\x7d\x71\xc8\xb6\xdb\x53\x71\x3e\x07\xcb\x80\xd4\x77\x1f\x2e\x8f\xbf\x3c\x70\x21\x4b\xcd\x6f\x54\x4d\xac\x5d\xe0\xf2\x98\xef\x8b\xad\x8f\x3b\xc3\x94\x65\xdc\x09\xad\x22\x39\xcd\x64\x9c\xeb\x41\xb9\x14\x59\x55\x19\xb2\x36\xc6\x9f\x20\x00\x80\xde\x50\xcf\x0c\x45\x56\x34\x8a\x4c\x8a\x6c\x70\xed\x13\x5e\x99\xf1\x48\x72\x60\x55\x27\xd4\x89\x6a\xbc\x63\xc6\x93\xab\x36\x46\xdf\x3f\x7f\x78\x15\x4b\xa6\x47\x36\xb2\xb9\x96\x92\x26\x8d\x2f\xd1\xa8\x9b\x7a\x09\x92\x97\x97\xff\xf0\xb3\xd3\x86\x35\xf4\x83\xb9\x36\x5e\x15\xc6\xb3\xd9\xa0\x67\x4a\xf0\x28\xcc\xf5\x20\x2b\x28\xed\x30\x4b\x80\xc1\x50\x4d\x86\x14\x27\x38\x0d\xd7\x12\xe6\xec\x70\x53\xb9\x93\x3d\xf8\xba\x23\x8c\xff\xa5\x63\xd6\x92\x71\x88\xbc\x5d\x4b\xdc\xa4\x21\xf7\xac\x24\x62\x73\x7d\x29\xbc\x5a\x63\xbc\xbd\x43\x09\xf9\xd1\x9b\xef\xc8\x5a\xd6\x50\x8a\xf0\xd2\x12\x6c\x4f\x5c\xd4\x82\x2a\xb0\x79\x08\xc2\x4e\xfa\x6c\xd1\x7c\x7e\x7f\x43\xce\xd4\xf8\xc3\x92\xaa\xbc\x08\x36\x5c\xef\x9f\x5b\x79\x04\x8f\xe0\x6f\x00\x00\x00\xff\xff\xbc\x66\x6c\x69\x76\x02\x00\x00"

func lockedtokensAdminCheck_shared_registrationCdcBytes() ([]byte, error) {
	return bindataRead(
		_lockedtokensAdminCheck_shared_registrationCdc,
		"lockedTokens/admin/check_shared_registration.cdc",
	)
}

func lockedtokensAdminCheck_shared_registrationCdc() (*asset, error) {
	bytes, err := lockedtokensAdminCheck_shared_registrationCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "lockedTokens/admin/check_shared_registration.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xda, 0xb6, 0x7e, 0x98, 0xe7, 0x40, 0x4d, 0xb7, 0x6c, 0xd, 0x16, 0xb, 0xee, 0x68, 0x21, 0xce, 0x15, 0xb6, 0x5f, 0x9, 0xfb, 0x96, 0x47, 0x61, 0x89, 0x5e, 0xc2, 0x29, 0x54, 0xaa, 0x34, 0xb8}}
	return a, nil
}

var _lockedtokensAdminCustody_create_account_with_lease_accountCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x56\x4b\x6f\xe2\x48\x10\xbe\xfb\x57\x94\x72\x58\x19\x89\x60\xf6\xb6\xb2\x08\x11\x4b\xc8\x6e\x14\x26\xa0\x84\x4c\x0e\xa3\x39\x34\x76\x01\x2d\x4c\xb7\xa7\xdd\x86\x41\x11\xff\x7d\xd4\xed\x67\xfb\x91\x10\x4d\xa4\xf1\x81\x03\xfd\x7d\x55\xf5\xd5\xa3\xbb\xe8\x2e\xe4\x42\xc2\x6d\xc0\x0f\x0b\xbe\x45\x06\x2b\xc1\x77\xd0\xff\x79\x3b\x9d\xbd\x2c\x66\xf7\x93\x87\xd1\xcd\xcd\xe3\xe4\xe9\xc9\xca\x80\x31\x5b\xd3\x65\x80\x26\xf8\xf9\xe1\xbf\xbb\x7f\xa7\x93\x26\xc2\x94\x7b\x5b\xf4\x35\x3c\xca\xf0\xd3\xd9\xf8\x7e\x72\x63\xa0\x2d\xc7\x71\x60\x21\x08\x8b\x88\x27\x29\x67\x20\x37\x44\x02\x01\x2f\x8e\x24\xf7\x8f\x10\x0a\xbe\xa7\x3e\x0a\x38\xf0\x38\xf0\x21\xa2\x6b\xa6\x29\x92\x83\x27\x90\x48\x04\x02\xd1\x86\x08\xf4\x81\x78\x1e\x8f\x99\x04\xc2\x7c\x20\x0c\x62\x16\xe8\x10\x34\x3c\x3b\x5b\x71\x01\x04\xe2\x08\x85\x65\xc9\xc2\xab\x6d\x01\x00\xac\xe2\x20\x18\xf9\x3b\xca\xe6\xf1\x32\xa0\xde\x3d\x1e\x5d\xf8\xf6\x7c\xc7\xe4\x3f\xdf\xbb\xe0\x38\xf0\x82\x74\xbd\x91\x2e\xfc\xdd\xef\xf7\x73\xc2\x73\x84\xe2\x1c\x7c\x07\xe0\xd5\xd2\xac\x50\x60\x48\x04\xda\xa9\xc4\x79\xaa\xd0\x85\x51\x2c\x37\xa3\x24\xd0\x4e\x06\x56\x5f\x80\x32\xd5\x98\x9e\xc2\x55\x19\x6b\x87\xe4\xa8\xe8\x15\x7b\x1d\x83\xaf\x24\x7f\x8c\x9d\xd3\x0d\xd7\x3d\xe2\xfb\xb9\x5c\xbb\x9e\xb1\x12\xaf\xe4\xb2\xce\x32\xd2\xd6\x31\xb5\xee\x49\x1c\xc8\x31\x09\xc9\x92\x06\x54\x1e\xe1\xca\x0c\x21\xc7\xaa\xaf\x17\x50\xb6\x1d\xfc\x95\xf7\x71\xef\xab\x22\x0f\x6d\x27\x14\x74\x4f\x24\x3a\xab\xec\x44\x1f\x74\x41\x12\xb1\x46\xe9\x82\x13\x49\x2e\xc8\xba\x0a\xe8\x18\xd6\xaf\xaf\x21\x24\x8c\x7a\xf6\xc5\x58\xb7\x1f\xe3\x12\x94\x43\x3d\x37\x90\xcc\x82\xa6\x81\x97\x87\x7b\x51\x51\x13\x14\x83\xf0\x85\x30\xb2\x46\x01\x83\x4b\x63\x3c\x7a\x49\x27\x4f\x6b\x40\x5b\x67\xc2\xad\x26\xa4\xb5\x36\x11\xd9\xa3\x3d\xb8\xac\x7b\xec\x82\xe4\xae\xe9\xb3\xee\xed\x29\x49\xc8\x9c\xc8\x4d\x45\x82\x2c\xa1\x3e\x56\x97\x77\x5c\x0e\x6d\x83\xa4\xbe\x77\x18\xf3\xa4\xac\x2a\xc8\x6e\x8d\x9b\xd5\xf6\x7c\xa1\xb9\x89\xce\x5b\xd5\xd6\xfa\x61\x97\x56\xaf\xbd\xd4\x1a\xf7\x3f\x0f\xfc\xd6\x1a\x2f\x0a\x84\x9d\x94\x69\xe4\xfb\x02\xa3\xc8\xad\x8f\x99\xfa\xbb\x6b\xe4\xde\x6d\xa9\x44\xcb\xd0\xe9\x76\x30\x92\x34\xb8\x2c\x85\xd8\x05\xe3\xac\xd6\x21\xa5\x58\x4b\x19\x2b\xb2\xde\xe2\xb5\xa1\xf0\x25\x4b\xaf\x0d\xb5\x49\x99\x77\x6c\xc5\x4f\x43\xfb\x6d\x40\x72\x67\xe8\x40\x9a\xcb\xdd\x1c\x75\x53\xa1\xf4\xc5\xf5\xa7\xda\x39\xb9\x35\x3f\xb7\x99\xcf\xbc\xbb\x92\x6e\xae\xdc\xf7\xea\x41\x35\xda\xbc\xf9\x1a\x4b\x73\x33\x56\xcd\xcc\x05\x5c\x55\xcd\x98\x49\x5b\x72\x21\xf8\xa1\x31\x6d\xa6\xa1\xa1\xad\x36\x84\x46\xad\x26\xf0\x43\x6a\x13\xf7\x20\x70\x85\x02\x99\x87\x4a\x63\x93\x51\x43\x6a\xc3\xb9\x1a\xc6\xec\xb5\x34\x5a\xe4\xbd\xd9\xcd\x56\x90\x2a\xbc\xf2\x32\x96\x06\x5d\xb7\x85\xdb\xd8\x9f\xa5\x20\x1d\x07\x66\x7b\x14\x82\xfa\x08\x72\x83\xe0\xe3\x4a\x3f\x42\xc5\x36\x27\xd0\x43\xba\x2f\xd5\xc3\x8c\x30\x66\xaa\x13\x6c\x27\xd4\xd3\x54\x3c\x81\x8f\x29\xcd\xcc\x6d\xd9\x6f\xba\x74\x31\x3c\xe4\x3e\x92\x95\x6d\x47\xc4\x36\xca\xfe\xf3\x13\x05\x11\x90\xa8\xd8\xc3\x9a\x43\x49\x06\x6b\xc4\x8e\x8f\x18\xf1\x58\x78\xf8\x6a\xac\x9a\xbd\x2c\xa4\x53\x65\xb8\x5a\x63\x37\x27\xe9\x77\x9e\x04\x23\xe1\x61\xbc\x04\xc6\xc5\x8e\x04\x85\x70\xca\xd4\xf6\xa9\xb6\x39\x95\x93\x98\xd1\x1f\x31\x42\x58\xb6\xf1\xb9\x5a\x93\x44\xde\x9e\xa7\xb8\x65\xc1\x29\xc9\x53\xbf\x27\xeb\x64\xfd\x0a\x00\x00\xff\xff\x94\x54\x63\x74\x0c\x0c\x00\x00"

func lockedtokensAdminCustody_create_account_with_lease_accountCdcBytes() ([]byte, error) {
	return bindataRead(
		_lockedtokensAdminCustody_create_account_with_lease_accountCdc,
		"lockedTokens/admin/custody_create_account_with_lease_account.cdc",
	)
}

func lockedtokensAdminCustody_create_account_with_lease_accountCdc() (*asset, error) {
	bytes, err := lockedtokensAdminCustody_create_account_with_lease_accountCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "lockedTokens/admin/custody_create_account_with_lease_account.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x2c, 0xe8, 0xa3, 0xa9, 0x77, 0xa3, 0x34, 0x69, 0x4d, 0xa4, 0xf0, 0xef, 0xef, 0x64, 0x5e, 0x6c, 0x19, 0xcf, 0x48, 0x40, 0xfd, 0xf, 0xd8, 0xa9, 0x1c, 0x71, 0xe5, 0xcb, 0xf7, 0x85, 0xda, 0xc3}}
	return a, nil
}

var _lockedtokensAdminCustody_create_only_lease_accountCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x56\x4b\x6f\xe3\x36\x10\xbe\xeb\x57\x0c\xf6\x50\xc8\x80\x63\xa5\xb7\x42\x48\xb2\x70\xf3\x68\x83\xb8\x9b\x20\xc9\x76\x0f\x45\x0f\xb4\x38\xb6\x88\xd0\xa4\x4a\x52\x4e\x8d\x20\xff\xbd\x20\x29\xd9\xa4\x1e\x9b\x2c\xba\xc0\xfa\x10\x20\xe2\x3c\xbe\xf9\xe6\x1b\x72\xd8\xa6\x92\xca\xc0\x15\x97\xcf\x8f\xf2\x09\x05\xac\x94\xdc\xc0\xf1\xbf\x57\x8b\xdb\x2f\x8f\xb7\x37\x97\x9f\xe6\x17\x17\xf7\x97\x0f\x0f\x49\x6b\x58\x8b\x35\x5b\x72\x8c\x8d\x3f\x7f\xfa\xed\xfa\xd7\xc5\xe5\x90\xc3\x42\x16\x4f\x48\x9d\xb9\x6e\xed\x17\xb7\xe7\x37\x97\x17\x91\x75\x92\x65\x19\x3c\x2a\x22\x34\x29\x0c\x93\x02\x4c\x49\x0c\x10\x28\x6a\x6d\x24\xdd\x41\xa5\xe4\x96\x51\x54\xf0\x2c\x6b\x4e\x41\xb3\xb5\x70\x2e\x46\x42\xa1\x90\x18\x04\x02\xba\x24\x0a\x29\x90\xa2\x90\xb5\x30\xb0\x92\x0a\x08\xd4\xda\x3a\x95\x12\x08\x57\x48\xe8\xce\x79\x95\x44\x83\x29\x91\x29\xa8\x05\x77\x00\xf7\x5e\x3e\x1a\xb5\x66\x1e\x53\x89\x7d\x23\xe7\x2f\x1d\x0a\x1b\x07\x4c\x00\x9c\x70\x2d\x93\x24\xf8\x92\x26\x00\x00\xab\x9a\xf3\x39\xdd\x30\x71\x57\x2f\x39\x2b\x6e\x70\x97\xc3\x5f\x9f\xaf\x85\xf9\xe5\xef\x29\x64\x19\x7c\x41\xb6\x2e\x4d\x0e\x3f\x1f\x1f\x1f\x27\x13\x80\x97\xc4\xb9\x55\x0a\x2b\xa2\x30\x6d\x78\xb8\x6b\x68\xc8\x61\x5e\x9b\x72\xee\xe1\x4c\x5d\x91\xcd\x3f\xd1\xc9\xa4\x0d\x63\x7f\x1c\x4d\x43\x51\x73\x0a\xa7\xa1\x6d\x5a\x91\x9d\x0d\xdc\xc9\x34\x39\x04\x88\x9c\x67\x84\xd2\x7d\x29\x69\xbf\xba\x49\x9c\x78\x4b\x6a\x6e\xce\x49\x45\x96\x8c\x33\xb3\x83\xd3\x38\xda\xde\xd6\xfe\x66\x9c\x89\xa7\x93\x9f\xf6\x9a\x9c\xfd\x69\x9d\xcf\xd2\xac\x52\x6c\x4b\x0c\x66\xab\xf6\xc4\x1d\x4c\xc1\x10\xb5\x46\x93\x43\xa6\x8d\x54\x64\xdd\x35\x98\x44\xd1\x3f\x7e\x84\x8a\x08\x56\xa4\x1f\xce\x9d\x94\x84\x34\x60\x13\xba\x19\x00\xaf\x6b\xe7\x06\xc5\x1e\xee\x87\x4e\x35\xfc\x20\xea\x3f\x88\x20\x6b\x54\x70\x72\x14\x49\x7d\xe6\x75\xb4\xe8\x19\xa6\x8e\x89\xbc\x4b\xc8\x28\xcd\x9a\x6c\x31\x3d\x39\xea\x67\x9c\x82\x91\x79\x9c\xb3\x9f\xed\xc1\x13\x72\x47\x4c\xd9\x29\xc1\x04\x56\xdf\xd6\x97\x37\x52\x9e\xa5\x91\x93\xfd\xbd\xe1\x71\xe7\xdb\x6a\x41\x4e\x7b\xbe\x6d\x6f\xdf\x5f\xe8\x3e\xc4\xe4\x6b\xdd\x76\xf5\xc3\xa6\xe9\xde\x78\xab\x9d\xdd\xef\x92\xd3\xd1\x1e\x3f\x1e\x2c\x52\xdf\xa6\x39\xa5\x0a\xb5\xce\xfb\x13\x63\x3f\x4f\x23\xee\xf3\x91\x4e\x04\x30\x82\xe9\xf6\x72\x88\x48\x3a\x39\x0a\x20\x4e\x21\x3a\xeb\x29\x24\xc0\x1a\x30\x76\x60\x7d\x24\xeb\x40\xe3\x83\x48\x2f\x03\xbd\x69\x3c\xaf\xc5\x4a\xbe\x9e\xa5\x5f\x37\xf0\x77\x86\x03\x32\xdc\xee\x61\xd4\x43\x8d\x72\x77\xd0\x8f\x92\xb3\xbf\x00\xbf\xaf\x98\xdf\x79\x77\x79\x35\x77\xae\x6e\xfb\x44\x45\x32\xb7\xda\x1e\xb8\xc7\x1a\x72\xce\xad\x9a\xa5\x82\xd3\x6e\x9c\x98\xb5\xa5\x54\x4a\x3e\x0f\xf2\x16\x07\x3a\x4b\xed\x73\x3f\x58\x6c\x6c\xf8\x4d\xe5\xfa\xf4\xa0\x70\x85\x0a\x45\x81\xb6\xc8\xa1\xa0\xd1\x1c\x0f\x9c\xdb\x69\x6c\x5f\xbe\x48\x23\x6f\x0d\x6f\xbb\x0c\x74\xcd\xc3\x79\x89\x27\xdd\xe9\x22\x1f\x14\x68\x00\x32\xcb\xe0\x76\x8b\x4a\x31\x8a\x6e\xa7\xa0\xb8\x72\xaf\xd0\x61\x35\x53\x58\x20\xdb\x06\xfd\x88\x11\xd6\xc2\x4a\x21\xcd\x2a\x37\x4e\x87\x37\xf0\xbe\x71\x8b\xb9\x0d\xf3\x36\x1b\x94\xc0\xe7\x7d\x0e\xbf\x7f\x6d\x88\x7a\xd2\xed\x37\xea\x2b\xd0\x40\xf4\x9e\x84\x11\x28\x7e\xb2\xe6\x62\x77\x8f\x5a\xd6\xaa\xc0\x97\x68\x6f\x9c\xb5\x90\x5e\x3b\xd3\x35\x8a\x3d\x1e\xa5\xff\xf3\x26\x44\x84\x57\xf5\x12\x84\x54\x1b\xc2\x0f\x85\x33\x61\x57\x49\xbb\x75\x59\x4e\x6a\xc1\xfe\xa9\x11\xaa\x30\xc6\xf7\xad\xd5\x13\x79\xf5\xbe\x8a\x47\x36\x9c\xa0\x3c\xfb\xf7\x35\x79\x4d\xfe\x0b\x00\x00\xff\xff\xfb\xc7\xd3\xe5\xd9\x0b\x00\x00"

func lockedtokensAdminCustody_create_only_lease_accountCdcBytes() ([]byte, error) {
	return bindataRead(
		_lockedtokensAdminCustody_create_only_lease_accountCdc,
		"lockedTokens/admin/custody_create_only_lease_account.cdc",
	)
}

func lockedtokensAdminCustody_create_only_lease_accountCdc() (*asset, error) {
	bytes, err := lockedtokensAdminCustody_create_only_lease_accountCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "lockedTokens/admin/custody_create_only_lease_account.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x86, 0x4b, 0x6d, 0xba, 0x1, 0xdf, 0xd2, 0xae, 0xc1, 0x4a, 0xfe, 0x29, 0xaa, 0x16, 0x4f, 0x5e, 0x88, 0xc6, 0x76, 0x5e, 0xcb, 0xa7, 0x9c, 0xb, 0xd6, 0xd3, 0xb2, 0xd6, 0xeb, 0x7f, 0xa0, 0xe7}}
	return a, nil
}

var _lockedtokensAdminCustody_create_only_shared_accountCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x56\x4d\x6f\xe3\x36\x10\xbd\xeb\x57\x0c\xf6\x50\xc8\x80\x63\xb9\xb7\x56\x48\xb2\x70\xf3\xd1\x06\x71\x37\x41\x3e\xba\x87\xa2\x87\xb1\x34\xb6\x88\xc8\xa4\x4a\x52\x4e\x8d\x20\xff\xbd\x20\x29\xd9\xa4\x2c\x6d\x12\x74\x81\xfa\x10\x20\xe2\xbc\x99\x37\x6f\x66\xc8\x61\xeb\x4a\x48\x0d\x97\xa5\x78\x7e\x10\x4f\xc4\x61\x29\xc5\x1a\xa6\xff\x5c\xce\x6f\xbe\x3e\xdc\x5c\x5f\x7c\x99\x9d\x9f\xdf\x5d\xdc\xdf\x47\xad\x61\xcd\x57\x6c\x51\x52\x68\xfc\xf8\xe5\xd7\xab\x5f\xe6\x17\x7d\x80\xb9\xc8\x9e\x28\xb7\xe6\xaa\xb5\x9f\xdf\x9c\x5d\x5f\x9c\x07\xd6\x51\x92\x24\xf0\x20\x91\x2b\xcc\x34\x13\x1c\x74\x81\x1a\x10\xb2\x5a\x69\x91\x6f\xa1\x92\x62\xc3\x72\x92\xf0\x2c\xea\x32\x07\xc5\x56\xdc\x42\xb4\x80\x4c\x12\x6a\x02\x04\x55\xa0\xa4\x1c\x30\xcb\x44\xcd\x35\x2c\x85\x04\x84\x5a\x19\x50\x21\x00\x4b\x49\x98\x6f\x2d\xaa\x40\x05\xba\x20\x26\xa1\xe6\xa5\x25\xb8\x43\x39\x6f\xb9\x31\x73\x9c\x0a\x3a\x34\xb2\x78\x61\x59\x18\x3f\xa0\x3d\xe2\x58\x2a\x11\x45\xde\x97\x38\x02\x00\xa8\x50\x6a\x86\xe5\x2c\x5f\x33\x7e\x5b\x2f\x4a\x96\x5d\xd3\x36\x85\x3f\x1f\xaf\xb8\xfe\xe9\xaf\x31\x24\x09\x7c\x25\xb6\x2a\x74\x0a\x3f\x4e\xa7\x3e\xe4\x51\x91\x7c\x03\xf1\xf3\x74\x1a\x8d\x00\x5e\x22\x87\x93\x54\xa1\xa4\xb8\xd1\xee\xb6\x91\x2e\x85\x59\xad\x8b\x99\x4b\x61\x6c\x85\x69\xfe\x09\x4e\x46\xad\x1b\xf3\x2b\x49\x37\xb2\x36\xa7\x70\xe2\xdb\xc6\x15\x6e\x8d\xe3\x4e\xa4\xd1\xde\x41\x00\x9e\x60\x9e\xef\x32\x89\x7b\x15\x19\x7d\x00\x19\x08\x33\x0a\x49\x6f\xb0\x2e\xf5\x19\x56\xb8\x60\x25\xd3\x5b\x38\x09\xfd\xed\x6c\xcd\x6f\x52\x32\xfe\x74\xfc\xc3\x6e\x06\x26\x7f\x18\xf0\x69\x9c\x54\x92\x6d\x50\x53\xb2\x6c\x4f\xec\xc1\x18\x34\xca\x15\xe9\x14\x12\xa5\x85\xc4\x55\xd7\x60\x14\x78\xff\xfc\x19\x2a\xe4\x2c\x8b\x3f\x9d\xd9\xd6\xe5\x42\x83\x09\x68\x67\x0e\xdc\x1c\x59\x18\x64\x3b\xba\x9f\x3a\xd9\x94\xfb\x21\xfa\x1d\x39\xae\x48\xc2\xf1\x51\x30\x5a\x13\xd7\xb7\xf3\x03\xc3\xd8\x2a\x91\x76\x05\x19\x2c\x91\xc2\x0d\xc5\xc7\x47\x87\x11\xc7\xa0\x45\x1a\xc6\x3c\x8c\x76\xef\x04\xb9\x45\x5d\x74\x52\xd0\x9e\xd5\xc7\xea\xf2\x46\xc8\xd3\x38\x00\x99\xdf\x1b\x88\x5b\x57\x56\x43\x72\x7c\x80\x6d\x6b\xfb\xfe\x44\x77\x2e\x46\xdf\xaa\xb6\xcd\x1f\xd6\x4d\xf5\x86\x4b\x6d\xed\x7e\x13\x65\x3e\x58\xe3\x87\xbd\x45\xec\xca\x34\xcb\x73\x49\x4a\xa5\x87\x33\x63\x3e\x8f\x03\xed\xd3\x81\x4a\x78\x34\xbc\x9b\xc1\xb5\x43\x20\xd2\xf1\x91\x47\x71\x0c\xc1\xd9\x41\x87\x78\x5c\x3d\xc5\xf6\xaa\x0f\x44\xed\x29\xbc\xe7\xe9\xa5\xa7\x36\x0d\xf2\x8a\x2f\xc5\xeb\x69\xfc\x6d\x03\x77\x67\x58\x22\xfd\xe5\xee\x67\xdd\x57\x28\x7b\x79\xfd\x5f\xed\xec\x6e\xce\xef\xdb\xcc\xef\xbc\xbb\x5c\x37\x77\xae\x7d\xf3\x24\x06\x6d\x6e\x7a\xbb\xe7\x1e\x6b\xc4\x39\x33\xdd\x2c\x24\x9c\x74\xfd\x84\xaa\x2d\x84\x94\xe2\xb9\x57\xb7\xd0\xd1\x69\x6c\xd6\x8b\xde\x64\x43\xc3\x0f\xa5\xeb\xc2\x83\xa4\x25\x49\xe2\x19\x99\x24\xfb\x9c\x06\x73\xdc\x73\x6e\xa6\xb1\x7d\x35\x83\x1e\x79\x6b\x78\xdb\xe5\xa3\x6b\xee\xcf\x4b\x38\xe9\xb6\x2f\xd2\xde\x06\xf5\x48\x26\x09\xdc\x6c\x48\x4a\x96\x93\xdd\x61\x72\x5a\xda\x57\x68\xbf\x0a\x4a\xca\x88\x6d\xbc\x7a\x84\x0c\x6b\x6e\x5a\x21\x4e\x2a\x3b\x4e\xfb\x37\xf0\xae\x81\x85\xda\xfa\x71\x9b\x8d\x8d\xd3\xf3\x2e\x86\xdb\xf7\xd6\x28\x9f\x54\xfb\x2d\x77\x19\x28\x40\xb5\x13\x61\x80\x8a\x9b\xac\x19\xdf\xde\x91\x12\xb5\xcc\xe8\x25\xd8\x53\x27\x2d\xa5\xd7\xce\x74\x0d\x72\x0f\x47\xe9\xbf\xbc\x09\x81\xe0\x55\xbd\x00\x2e\xe4\x1a\xcb\x7d\xe2\x8c\x9b\xd5\xd5\x6c\x6c\x46\x93\x9a\xb3\xbf\x6b\x82\xca\xf7\xf1\x7d\x73\x75\x42\x5e\xbe\x2f\xe3\x81\x0d\xc7\x4b\xcf\xfc\x7d\x8d\x5e\xa3\x7f\x03\x00\x00\xff\xff\x5a\xb8\x9a\xaa\x49\x0c\x00\x00"

func lockedtokensAdminCustody_create_only_shared_accountCdcBytes() ([]byte, error) {
	return bindataRead(
		_lockedtokensAdminCustody_create_only_shared_accountCdc,
		"lockedTokens/admin/custody_create_only_shared_account.cdc",
	)
}

func lockedtokensAdminCustody_create_only_shared_accountCdc() (*asset, error) {
	bytes, err := lockedtokensAdminCustody_create_only_shared_accountCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "lockedTokens/admin/custody_create_only_shared_account.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x11, 0xb6, 0x1b, 0x9b, 0x25, 0x22, 0xf0, 0xfb, 0xe, 0xb4, 0x8f, 0xff, 0xee, 0x1b, 0x63, 0x54, 0xcf, 0x19, 0x85, 0xe6, 0xd7, 0x30, 0x85, 0x9f, 0xf2, 0xc5, 0x2f, 0x94, 0xbf, 0xd8, 0x23, 0x8}}
	return a, nil
}

var _lockedtokensAdminCustody_create_shared_accountsCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x56\x4f\x6f\xda\x4e\x10\xbd\xfb\x53\x8c\x72\xf8\xc9\x48\x04\x93\xdb\xaf\x16\x21\xa2\x84\xb4\x51\x68\x40\x09\x69\x0e\x55\x0f\x8b\x3d\xc0\x0a\xb3\xeb\xae\xd7\x50\x14\xf1\xdd\xab\x5d\xdb\xd8\x6b\xec\x00\x6a\xa4\xfa\xc0\x81\x7d\x6f\xfe\xbc\x99\xd9\x1d\xba\x0a\xb9\x90\x70\x17\xf0\xcd\x84\x2f\x91\xc1\x4c\xf0\x15\xb4\x7f\xdf\x0d\x47\xaf\x93\xd1\xc3\xe0\xb1\x77\x7b\xfb\x34\x78\x7e\xb6\x32\x60\xcc\xe6\x74\x1a\xa0\x09\x7e\x79\xfc\x72\xff\x79\x38\xa8\x22\x0c\xb9\xb7\x44\x5f\xc3\xa3\x0c\x3f\x1c\xf5\x1f\x06\xb7\x06\xda\x72\x1c\x07\x26\x82\xb0\x88\x78\x92\x72\x06\x72\x41\x24\x10\xf0\xe2\x48\x72\x7f\x0b\xa1\xe0\x6b\xea\xa3\x80\x0d\x8f\x03\x1f\x22\x3a\x67\x9a\x22\x39\x78\x02\x89\x44\x20\x10\x2d\x88\x40\x1f\x88\xe7\xf1\x98\x49\x20\xcc\x07\xc2\x20\x66\x81\x0e\x41\xc3\xb3\xb3\x19\x17\x40\x20\x8e\x50\x58\x96\xcc\xbd\xda\x16\x00\x40\x48\x84\xa4\x24\xe8\xf9\x2b\xca\xc6\xf1\x34\xa0\xde\x03\x6e\x5d\xf8\xf1\x72\xcf\xe4\xff\x3f\x9b\xe0\x38\xf0\x8a\x74\xbe\x90\x2e\x5c\xb5\xdb\x45\xca\x4b\x84\xe2\x08\xe3\x53\xca\x98\xc5\xc1\x29\xf0\xab\x76\xbb\x6d\x35\x00\xde\xac\xc4\x8f\xc0\x90\x08\xb4\x53\x59\xc6\xa9\x2a\x2e\xf4\x62\xb9\xe8\x25\xc9\x35\x32\xb0\xfa\x02\x94\xa9\x2e\xe9\x29\x5c\x17\xb1\x76\x48\xb6\x8a\x5e\xb2\xd7\x30\xf8\x4a\xa6\xf3\xd8\x7b\xba\xe1\xba\x45\x7c\x7f\x9f\xae\x5d\xa9\x72\xe3\x0c\xa6\xa1\x5e\xc1\x67\x21\x5c\x93\x77\x20\x79\xc3\xd4\x69\x4d\xe2\x40\xf6\x49\x48\xa6\x34\xa0\x72\x0b\xd7\x66\x10\x7b\xac\xfa\x5a\x01\x65\xcb\xce\x7f\xfb\xb9\x69\x7d\x57\xe4\xae\xed\x84\x82\xae\x89\x44\x67\x96\x9d\xe8\x83\x26\x48\x22\xe6\x28\x5d\x70\x22\xc9\x05\x99\x97\x01\x0d\xc3\xfa\xcd\x0d\x84\x84\x51\xcf\xbe\xe8\xeb\x76\x67\x5c\x82\x72\xa8\xe7\x14\x92\xd9\xd3\x34\xf0\xf6\xe1\x5e\x94\xb2\x09\xf2\xc1\xfb\x46\x18\x99\xa3\x80\xce\xa5\x31\x8e\xad\x64\x72\x86\x07\x40\x5b\x2b\xe1\x96\x05\xa9\xad\x6b\x44\xd6\x68\x77\x2e\x0f\x3d\x36\x41\x72\xd7\xf4\x79\xe8\xed\x39\x11\x64\x4c\xe4\xa2\x94\x82\x2c\xa0\xce\xab\xcb\x11\x97\x5d\xdb\x20\xa9\xef\x08\x63\x9c\x94\x55\x05\xd9\x3c\xe0\x66\xb5\x3d\x3d\xd1\xbd\x89\xc6\x7b\xd5\xd6\xf9\xc3\x2a\xad\x5e\x7d\xa9\x35\xee\x2b\x0f\xfc\xda\x1a\x4f\x72\x84\x9d\x94\xa9\xe7\xfb\x02\xa3\xc8\x3d\x1c\x34\xf5\x77\xd3\xd0\xde\xad\xa9\x44\xcd\xd0\xe9\x76\x30\x44\xea\x5c\x16\x42\x6c\x82\x71\x76\xd0\x21\x85\x58\x0b\x8a\xe5\xaa\xd7\x78\xad\x28\x7c\xc1\xd2\x5b\x45\x6d\x52\xe6\x3d\x9b\xf1\x5d\xd7\x7e\x1f\x90\xdc\x19\x3a\x90\xea\x72\x57\x47\x5d\x55\x28\x7d\xe3\xfd\xab\x76\x4e\xae\xdb\x8f\x6d\xe6\x13\xef\xae\xa4\x9b\x4b\x6f\x85\x7a\xc0\x8d\x36\xaf\xbe\xc6\x52\x6d\xfa\xaa\x99\xb9\x80\xeb\xb2\x19\x53\xb4\x29\x17\x82\x6f\x2a\x65\x33\x0d\x75\x6d\xb5\x91\x54\xe6\x6a\x02\xcf\xca\x36\x71\x0f\x02\x67\x28\x90\x79\xa8\x72\xac\x32\x6a\xa4\x5a\x71\xae\x86\x31\x7b\x69\x8d\x16\x39\x36\xbb\xd9\xca\x53\x86\x97\x5e\xc6\xc2\xa0\xeb\xb6\x70\x2b\xfb\xb3\x10\xa4\xe3\xc0\x68\x8d\x42\x50\x1f\x41\x2e\x10\x7c\x9c\xe9\x47\x28\xdf\x1e\x05\x7a\x48\xd7\x85\x7a\x98\x11\xc6\x4c\x75\x82\xed\x84\x7a\x9a\xf2\x27\xf0\x29\xa5\x99\xda\x16\xfd\xa6\x4b\x1e\xc3\xcd\xde\x47\xb2\x22\xae\x88\x58\x46\xd9\x7f\x7e\x92\x41\x04\x24\xca\xf7\xbe\xea\x50\x92\xc1\xea\xb1\xed\x13\x46\x3c\x16\x1e\xbe\x19\xab\x6d\x2b\x0b\x69\x57\x1a\xae\xda\xd8\xcd\x49\xfa\x9b\x27\xc1\x10\x3c\x8c\xa7\xc0\xb8\x58\x91\x20\x4f\x9c\x32\xb5\xed\xaa\x4d\x50\x69\x12\x33\xfa\x2b\x46\x08\x8b\x36\x3e\x36\xd7\x44\xc8\xbb\xd3\x32\xae\x59\x70\x0a\xe9\xa9\xdf\x9d\xb5\xb3\xfe\x04\x00\x00\xff\xff\x77\xc0\x53\x2d\x7c\x0c\x00\x00"

func lockedtokensAdminCustody_create_shared_accountsCdcBytes() ([]byte, error) {
	return bindataRead(
		_lockedtokensAdminCustody_create_shared_accountsCdc,
		"lockedTokens/admin/custody_create_shared_accounts.cdc",
	)
}

func lockedtokensAdminCustody_create_shared_accountsCdc() (*asset, error) {
	bytes, err := lockedtokensAdminCustody_create_shared_accountsCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "lockedTokens/admin/custody_create_shared_accounts.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x33, 0x5f, 0x4a, 0xff, 0x3c, 0xcd, 0x65, 0xb5, 0xc8, 0xed, 0xe6, 0xd4, 0xef, 0x98, 0x2c, 0x1b, 0x31, 0x3c, 0x5f, 0xe4, 0x84, 0xf5, 0xac, 0x3e, 0xe1, 0x8f, 0xed, 0x36, 0xb, 0x6b, 0x33, 0x1f}}
	return a, nil
}

var _lockedtokensAdminCustody_setup_account_creatorCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x90\xdd\x6a\xc2\x40\x10\x85\xef\xf7\x29\xe6\xaa\x28\xf8\xd3\x6b\x91\x42\xd0\x5c\x29\x35\x34\xbe\xc0\x74\x33\x35\x4b\x92\xdd\x30\x3b\x49\x5b\x24\xef\x5e\x62\x30\x65\xa5\xc5\x76\xee\xf6\xcc\xcf\x39\xfb\x99\xaa\x76\x2c\xb0\x77\xba\xa0\xec\xe8\x0a\xb2\x1e\xde\xd8\x55\xf0\xf8\xb1\x3f\x6c\x76\xf1\xf6\x78\xd8\xc5\xcf\xd1\x76\xfb\x12\xa7\xa9\x52\xc2\x68\x3d\x6a\x31\xce\xc2\x59\x29\x00\x80\x9a\xa9\x46\xa6\x89\x6e\xbc\xb8\xec\x33\x61\xd7\x9a\x8c\x78\x05\x51\x23\x79\xa4\xb5\x6b\xac\x4c\xaf\xc3\x7d\x95\x24\x80\x83\xbe\x61\x42\x71\x0c\xeb\x79\x90\x60\xa1\x7b\x9d\x06\x29\x0a\x46\x27\xd3\xef\x43\x37\x8e\x0b\x8f\x2d\x4d\xc6\x6e\x5f\xeb\x79\x68\x34\x83\xa0\x2d\x6e\x15\xfa\xfe\xe4\x98\x8a\x63\x3c\x51\x82\x92\xcf\xc6\xed\x69\x70\x67\x7c\x2c\x97\x30\x44\x07\x4b\xef\xc0\xa4\xc9\xb4\xc4\x20\x39\x0a\x54\xc8\x85\xbf\x6a\x19\xc8\xc0\x1a\x3d\x34\xb6\xbc\xd8\xfe\xfa\xaf\xd2\xd8\x62\xfd\x70\x37\xe8\xf9\xee\x44\xd2\xbc\x96\x46\x77\x4f\x21\xa4\x3f\xae\x85\x00\x2e\xf8\x90\x4f\x24\xff\x43\x78\x43\xb0\x53\x9d\xfa\x0a\x00\x00\xff\xff\x03\x0d\xf1\xc2\x83\x02\x00\x00"

func lockedtokensAdminCustody_setup_account_creatorCdcBytes() ([]byte, error) {
	return bindataRead(
		_lockedtokensAdminCustody_setup_account_creatorCdc,
		"lockedTokens/admin/custody_setup_account_creator.cdc",
	)
}

func lockedtokensAdminCustody_setup_account_creatorCdc() (*asset, error) {
	bytes, err := lockedtokensAdminCustody_setup_account_creatorCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "lockedTokens/admin/custody_setup_account_creator.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x96, 0xaa, 0x40, 0xfa, 0xc7, 0xc8, 0x86, 0x4b, 0xda, 0x8f, 0x8a, 0x8f, 0x20, 0x36, 0xd0, 0xb0, 0x25, 0xd0, 0xe0, 0xed, 0x70, 0x60, 0xf2, 0x2c, 0x9a, 0x8d, 0x46, 0x4c, 0xce, 0xd8, 0x9, 0x5f}}
	return a, nil
}

var _lockedtokensAdminDeposit_locked_tokensCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x54\xc1\x4e\xeb\x3a\x10\x5d\xd3\xaf\x98\x76\x01\x89\x04\xe9\x5b\x3c\xbd\x45\x54\xe0\xf5\xb5\x05\x3d\x51\xc1\x55\x81\xcb\xda\x75\x26\x8d\x2f\xae\x1d\xd9\x13\x0a\x42\xfc\xfb\x55\xec\x38\xaa\x01\xc1\x65\x13\x61\x1f\x9f\x39\x33\xe7\x4c\xc5\xb6\xd6\x86\xe0\xa2\x51\x1b\xb1\x96\x78\xa7\x1f\x51\x41\x69\xf4\x16\xfe\x7a\xbe\xb8\xbf\xbe\xfc\xff\xbf\xe5\xe2\xee\xe6\x6a\x71\x3d\x9d\xcf\x57\x8b\xdb\xdb\x41\x78\x20\xf5\x2e\x06\x2f\x6f\x1e\x22\x60\x40\x2e\x35\x7f\xc4\xc2\x61\x6d\x00\x2f\x6f\x66\x57\x8b\x79\x0c\x27\xc3\x94\x65\x9c\x84\x56\x09\xe9\x1c\xa6\x45\x61\xd0\xda\x63\x60\x5b\xdd\x28\xca\xe1\xfe\x42\x3c\xff\xf3\x77\x0a\xaf\x83\x01\x00\xc0\x78\x0c\x77\x15\xc2\x4f\xd6\x48\x02\x83\x56\x37\x86\x23\x50\xc5\x08\x2a\x2d\x0b\x0b\x54\x21\x90\x2f\xeb\x4e\x99\x41\x58\xa3\x50\x1b\x70\xa5\x4a\x34\x06\x0b\x47\x25\x91\xc0\xa2\x22\xc7\x95\xc3\xbf\xd1\x34\x32\x77\xea\x6b\xd6\x06\x6b\x66\x30\x61\xc5\x56\xa8\x1c\xa6\x0d\x55\x53\xce\x5b\x79\xbd\xac\x4e\xda\x25\x12\x30\x30\x58\xa2\x41\xd5\xea\xd2\x4e\x8f\x7b\x78\x64\xc1\x92\x36\x58\xc0\x93\xa3\x0e\xcf\x5a\x19\xee\x64\x85\x25\x9c\x7a\x6c\xb6\xd6\xc6\xe8\xdd\xe4\xb0\x1f\xb8\xd7\x73\x96\xb4\xa3\xcc\x61\xdc\x32\xb1\x0d\x8e\xcb\x70\xef\xae\xd3\xc1\xc1\xc1\xc1\xf9\x39\xd4\x4c\x09\x9e\x8c\x66\xba\x91\x05\x28\x4d\xe0\xe9\x3e\x0a\xd3\x3b\x85\xe6\xc8\xfa\x71\x0e\x47\xe9\x20\x52\xe5\xa4\x7c\xa6\x6a\xdf\xdc\xcc\x7d\xa6\xed\xfd\x4c\x4b\x89\xce\xca\xa0\x33\x02\xee\xfd\xf3\x0e\x7e\xeb\xbb\xf9\xc1\xa8\x4a\x7b\x05\xed\xdf\x17\xbd\x7c\x32\x66\xe9\x0a\x78\xf7\xbd\x62\xe0\x7d\x8d\xfd\xe6\x98\xb5\x68\x08\x92\xa8\x56\xe8\x36\xdb\x20\x75\xf6\x26\xcc\xa7\x31\x07\xd2\x29\x0c\x4f\x41\x09\x79\x1c\x3d\xda\xa2\xb5\x6c\x83\x39\x8c\xda\x54\xda\x1a\xb9\x28\x05\x16\xc0\x3c\x01\x08\xeb\x34\xb3\xa0\xad\x3b\x1f\xc2\x8c\xa9\xf6\xc2\xa2\x2a\x22\xdd\x76\xd4\xf3\xa7\x51\xb4\x1e\x04\x55\x85\x61\xbb\x10\x6e\xb7\x53\xdf\x86\xcb\xa2\x2c\xb3\x3e\xe4\x30\x39\xe9\xa3\x96\xed\x3a\xc2\x24\x6c\x9a\xff\x7a\x03\xde\x7c\x6d\x7c\x46\xde\x10\x7e\x92\xf2\xb6\xb2\x41\x2e\x6a\x81\x8a\x8e\x2c\xd4\xcd\x5a\x0a\xde\xf7\xad\xd7\xbf\x90\xc7\x19\xef\xd1\x70\x0a\x7b\x23\x26\x9d\xfe\xc9\x0a\xed\xd7\x5a\x21\x47\xf1\x84\xe6\x3d\xbd\x3b\xf4\x79\xed\xe1\xad\x9b\x33\x56\xb3\xb5\x90\x82\x5e\x26\x87\x53\xf5\xb2\xea\x7e\x35\x5e\xe3\x85\x0f\xac\x6f\x67\xc9\xd8\x77\x33\xf6\xc6\xf4\x3b\x18\x10\xe9\xb0\xdb\x84\xe4\xfb\x85\xf3\x2f\xbe\xee\xa7\xf3\xdf\x59\x34\x8a\xa7\x31\xc7\x5a\x5b\xe1\xc7\x1d\x0c\x53\x21\x02\x42\x7d\xa0\x32\xef\x47\xb3\x37\x96\xac\xf0\x64\xdd\x6e\x4e\x4e\xe2\x70\x04\xe3\xdf\x06\xbf\x03\x00\x00\xff\xff\x5e\xe8\x2d\x94\x1e\x06\x00\x00"

func lockedtokensAdminDeposit_locked_tokensCdcBytes() ([]byte, error) {
	return bindataRead(
		_lockedtokensAdminDeposit_locked_tokensCdc,
		"lockedTokens/admin/deposit_locked_tokens.cdc",
	)
}

func lockedtokensAdminDeposit_locked_tokensCdc() (*asset, error) {
	bytes, err := lockedtokensAdminDeposit_locked_tokensCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "lockedTokens/admin/deposit_locked_tokens.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xfc, 0x42, 0x42, 0xb6, 0x9f, 0x6c, 0xa7, 0x94, 0xe7, 0xc2, 0x37, 0x2b, 0xab, 0x9c, 0x9d, 0xd5, 0xa, 0x95, 0x5a, 0x9e, 0x4, 0x5f, 0x7d, 0xec, 0xa6, 0x7a, 0x6, 0x2f, 0x77, 0xf1, 0x12, 0x9}}
	return a, nil
}

var _lockedtokensAdminUnlock_tokensCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x91\xcd\x6e\xea\x30\x10\x85\xf7\x79\x8a\xb9\x2c\xee\x4d\xa4\xab\xa8\x8b\xaa\x8b\xa8\x2d\x8a\x80\x6e\xa0\xa5\xe2\xe7\x01\xa6\xce\x04\x2c\x12\x4f\x34\x9e\xa8\x48\x15\xef\x5e\x25\x46\x34\xb0\xed\x6c\xc6\x96\x8f\xed\xef\x9c\xb1\x75\xc3\xa2\xb0\x60\x73\xa0\x62\xc3\x07\x72\x1e\x4a\xe1\x1a\xee\x8e\x8b\xe5\x64\x3e\x9b\x6e\x96\xf3\xd9\x5b\x3e\x9d\xae\x66\xeb\x75\x14\xa9\xa0\xf3\x68\xd4\xb2\x8b\x15\x65\x47\x9a\x1b\xc3\xad\xd3\x0c\xf2\xa2\x10\xf2\xfe\x3f\x14\x54\x29\x66\xb0\x7d\xb1\xc7\x87\xfb\x04\xbe\xa2\x08\x00\xa0\x11\x6a\x50\x28\xc6\xa2\xb6\x2e\x83\xbc\xd5\xfd\xf9\xea\x45\xd2\x55\x45\x0a\xbd\x64\x45\x25\x3c\x85\x65\xfa\xc1\x22\xfc\xf9\xf8\x77\x48\x99\xf6\x2d\xef\xce\x27\x5c\x55\xd4\x33\x3d\xc7\x1d\x7b\x76\x65\x27\x1d\x6c\x6e\xe4\x6b\x65\xc1\x1d\xbd\xa3\xee\x93\x0b\x41\x57\xe3\x31\x34\xe8\xac\x89\x47\x13\x6e\xab\x02\x1c\x2b\x04\x08\x40\x10\x2a\x49\xc8\x19\x02\x65\xd0\x3d\x05\x48\x30\x97\x67\x47\xc9\xb5\x1f\xed\xbe\x7e\x45\x87\x3b\x92\x81\xad\x15\x95\xe9\x4f\x80\x31\x86\xfc\x32\xb8\xca\x35\xf9\x73\x76\x1f\xff\x86\xb0\xf5\x24\xff\x7c\x00\x81\x3a\x90\x0c\x29\x6f\x08\x53\xeb\x8c\x10\x7a\xda\xba\x8a\xcd\x61\x61\x6b\xab\xf1\x79\xac\x7d\x0b\x2c\xa7\xe8\x14\x7d\x07\x00\x00\xff\xff\xd0\xd3\x4e\x0e\x40\x02\x00\x00"

func lockedtokensAdminUnlock_tokensCdcBytes() ([]byte, error) {
	return bindataRead(
		_lockedtokensAdminUnlock_tokensCdc,
		"lockedTokens/admin/unlock_tokens.cdc",
	)
}

func lockedtokensAdminUnlock_tokensCdc() (*asset, error) {
	bytes, err := lockedtokensAdminUnlock_tokensCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "lockedTokens/admin/unlock_tokens.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x8b, 0x58, 0xa9, 0x1, 0xbc, 0x31, 0xd2, 0x33, 0xd, 0x5b, 0xb, 0x97, 0x13, 0xe6, 0x85, 0x86, 0x57, 0xa2, 0x99, 0xa6, 0x1f, 0x8c, 0x9f, 0x8b, 0xb5, 0xab, 0xd9, 0x40, 0x1, 0x5d, 0x97, 0x33}}
	return a, nil
}

var _lockedtokensDelegatorDelegate_new_tokensCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x52\x4d\x6f\xda\x40\x10\xbd\xfb\x57\x4c\x39\x54\xe6\x10\xa7\x87\xaa\x07\x04\x8d\x48\x80\xb6\x0a\x82\x28\x24\xed\x79\xb1\xc7\x1f\x62\xf1\x58\xbb\xe3\x42\x85\xf8\xef\xd5\x7a\xd7\xc4\xeb\x24\x52\xa5\xfa\xb2\x82\x79\xf3\xde\x9b\x99\x57\xec\x2b\x52\x0c\x0b\x49\x87\x27\xda\x61\x09\xa9\xa2\x3d\x7c\x3a\x2e\x96\xeb\x5f\x4f\xeb\xfb\xf9\x6a\x3a\x9b\x3d\xce\x37\x9b\xa0\x05\xd6\x65\x56\x6c\x25\xfa\xe0\xe7\xd5\xb7\x1f\xb7\xcb\xf9\x5b\x0d\x4b\x8a\x77\x98\x34\x70\xdd\xe2\x97\xeb\xbb\xfb\xf9\xcc\x43\x07\xac\x44\xa9\x45\xcc\x05\x95\xa1\xd8\x53\x5d\xf2\x08\x9e\x17\xc5\xf1\xcb\xe7\x21\x9c\x82\x00\x00\x40\x22\x43\x4e\x32\x41\xf5\x88\xe9\x08\x3e\x76\xa9\xa3\xe6\xf9\xde\x54\x5f\xd0\xbf\x45\x2d\xd9\x82\x2f\x13\x46\x3f\xcd\x9f\x16\x53\x29\xac\x84\xc2\x50\xc4\xb1\x55\x9c\xd6\x9c\x4f\xed\x0f\x23\x0b\xee\xd3\x28\xd3\xe8\x22\x0d\x13\x70\x0d\xd1\x96\x94\xa2\xc3\xf8\x5d\x2b\x5f\x43\x33\xf2\x08\xde\xab\x6f\x98\x94\xc8\xf0\x41\x70\x3e\xbc\xa8\x99\xef\xe6\x06\x2a\x51\x16\x71\x38\xb8\xa3\x5a\x26\x50\x12\x83\x15\x03\x85\x29\x2a\x2c\x63\x04\x26\xe8\x70\x0d\x86\x81\x6f\xb8\x9d\xfe\x0d\xbf\xbd\x6d\xb4\x36\xaf\xb5\xf5\x73\x9d\xb6\xf5\xa6\xfc\xcf\xd6\x4c\x1b\x70\x13\x8d\x46\xfc\xc5\xeb\xc0\x72\x9c\xad\x45\x3c\x62\x5c\x33\x76\x36\x6c\xae\xa5\x59\xec\x50\x3d\x28\x3a\xfe\x81\x49\x6f\xe7\xce\xf9\x0c\x25\x66\x82\x49\x85\x9d\x61\x4d\xaf\x6c\x16\x7c\x2b\xa4\x30\x8b\x79\xd5\x9d\x21\xdb\x13\xb8\xe3\x3a\x60\x97\xa5\x48\xc1\xe6\x0e\xc6\x93\x1e\xdd\x29\xf0\x16\xd0\xf1\x19\x25\xd6\x10\xae\xd0\xee\x4b\x5f\xc2\x6b\xdf\x8e\xc0\x19\x50\x6a\x34\x3a\xa1\x03\xc1\x95\x2f\x34\x34\xd2\xde\xe9\xa2\x6d\x5b\xe9\x7b\xf0\xe7\x4b\xb0\x22\x5d\xb0\x3b\xe3\xf8\xca\x27\x39\x14\x9c\x27\x4a\x1c\x7a\xde\x5e\xc9\x0f\xff\x67\xce\xde\x98\x27\x8f\xca\x05\x66\x45\x0c\x58\x52\x9d\xe5\x36\x25\xda\x44\xb8\x91\xf9\x30\xe8\x30\xb8\xa8\x9c\x83\xbf\x01\x00\x00\xff\xff\x25\x14\xe5\x23\x9e\x04\x00\x00"

func lockedtokensDelegatorDelegate_new_tokensCdcBytes() ([]byte, error) {
	return bindataRead(
		_lockedtokensDelegatorDelegate_new_tokensCdc,
		"lockedTokens/delegator/delegate_new_tokens.cdc",
	)
}

func lockedtokensDelegatorDelegate_new_tokensCdc() (*asset, error) {
	bytes, err := lockedtokensDelegatorDelegate_new_tokensCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "lockedTokens/delegator/delegate_new_tokens.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x6, 0xc7, 0x4, 0xa0, 0xdf, 0xa1, 0xa9, 0xb0, 0xb0, 0x70, 0x98, 0x6, 0x1e, 0xd0, 0x93, 0xe4, 0x97, 0x13, 0x73, 0x7d, 0x6b, 0xde, 0x32, 0x8a, 0x55, 0x33, 0x8f, 0x4, 0xca, 0xfb, 0xd8, 0x5a}}
	return a, nil
}

var _lockedtokensDelegatorDelegate_rewarded_tokensCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x91\x41\x6b\xc2\x40\x10\x85\xef\xf9\x15\x83\x87\x12\x2f\xa1\x87\xd2\x83\xd4\x8a\x34\x96\x82\xa2\xa2\xf6\x07\x4c\x77\x27\x66\x31\xee\x84\xc9\x58\x53\x8a\xff\xbd\xe8\x9a\x54\x2b\xcd\x65\x32\xec\xe3\x7d\xfb\xde\xba\x6d\xc9\xa2\x30\x61\xb3\x21\xbb\xe2\x0d\xf9\x0a\x32\xe1\x2d\xdc\xd7\x93\xd9\xcb\x78\x94\xae\x66\xe3\xd1\x74\x98\xa6\x8b\xd1\x72\x19\x45\x2a\xe8\x2b\x34\xea\xd8\xc7\xb8\xe5\x9d\xd7\x1e\xbc\xbf\xba\xfa\xf1\xa1\x0b\xdf\x11\x00\x40\x41\x0a\x9e\x2d\xa5\x54\xd0\x1a\x95\x65\x2e\x5c\x7f\xf5\xae\x08\x49\x58\xa6\x37\xb2\xe8\x64\x51\x0a\x95\x28\x14\xa3\x31\x81\x30\xdc\x69\x3e\x0c\x4b\x83\x69\x50\x39\x17\x96\x64\x41\x19\xf4\xe1\xac\x4f\x3e\x58\x84\xf7\x4f\x77\x57\xc8\xd3\x78\x3b\xa9\x9f\xe3\x63\xc2\x3f\x57\xba\x38\x5f\x2a\x0b\xae\x69\x8e\x9a\x77\xa1\xa5\x1d\xbf\xc1\x00\x4a\xf4\xce\xc4\x9d\x0b\x39\xb8\x0a\x3c\x2b\x54\xf8\x49\x16\x50\xa1\x2a\xc9\xb8\xcc\x91\x85\x12\x35\xef\x74\x5b\x8b\xf6\xa7\xa2\x22\x4b\x6e\x5b\x82\xfe\x6f\x9e\x73\x8a\x56\x10\x07\x9b\x43\xa8\x88\x6a\x32\x3b\xa5\x8b\x32\xfe\xb1\x4c\x6c\x58\x69\x41\x7b\x14\xdb\xc4\x6d\x1f\x2f\xcc\xc6\xfb\x10\xfd\x04\x00\x00\xff\xff\xf2\xb4\xba\xeb\x10\x02\x00\x00"

func lockedtokensDelegatorDelegate_rewarded_tokensCdcBytes() ([]byte, error) {
	return bindataRead(
		_lockedtokensDelegatorDelegate_rewarded_tokensCdc,
		"lockedTokens/delegator/delegate_rewarded_tokens.cdc",
	)
}

func lockedtokensDelegatorDelegate_rewarded_tokensCdc() (*asset, error) {
	bytes, err := lockedtokensDelegatorDelegate_rewarded_tokensCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "lockedTokens/delegator/delegate_rewarded_tokens.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x9c, 0xb5, 0x9a, 0xc5, 0xf6, 0xa3, 0xb3, 0x51, 0x42, 0xb8, 0x88, 0xa8, 0x28, 0x71, 0x66, 0x3d, 0x34, 0x4, 0x99, 0xf3, 0x94, 0x13, 0xef, 0x85, 0x3f, 0x7f, 0xa0, 0xa3, 0x40, 0x76, 0x94, 0xb}}
	return a, nil
}

var _lockedtokensDelegatorDelegate_unstaked_tokensCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x91\xcf\x6a\xc2\x40\x10\xc6\xef\x79\x8a\xc1\x43\x49\x2e\xa1\x87\xd2\x83\xd4\x8a\x34\x96\x82\xa2\xe2\x9f\x07\x98\x6e\x26\x66\x31\xee\x2c\xbb\x63\x9b\x52\x7c\xf7\x62\x56\xd3\x58\xe9\x5e\x86\x61\xbf\xfd\x7e\xf3\xcd\xea\xbd\x65\x27\x30\x65\xb5\xa3\x7c\xcd\x3b\x32\x1e\x0a\xc7\x7b\xb8\xaf\xa7\xf3\x97\xc9\x38\x5b\xcf\x27\xe3\xd9\x28\xcb\x96\xe3\xd5\x2a\x8a\xc4\xa1\xf1\xa8\x44\xb3\x89\x71\xcf\x07\x23\x7d\xd8\xbc\xea\xfa\xf1\x21\x81\xef\x08\x00\xa0\x22\x01\xc3\x39\x65\x54\xd1\x16\x85\xdd\xc2\x71\xfd\xd5\xbf\x22\xa4\xa1\x99\xdd\xc8\xa2\xc6\xc2\x3a\xb2\xe8\x28\x46\xa5\x02\x61\x74\x90\x72\x14\x9a\x0b\xe6\x82\x2a\xb9\xca\xc9\x2d\xa9\x80\x01\x9c\xf5\xe9\x3b\x3b\xc7\x9f\x4f\x77\x57\xc8\xa6\xbc\x35\xea\xe7\xf8\x94\xf0\xcf\x48\x9d\xfb\x95\xb0\xc3\x2d\x2d\x50\xca\x04\x5a\xda\xe9\x0c\x87\x60\xd1\x68\x15\xf7\x3a\x72\xd0\x1e\x0c\x0b\x78\xfc\xa0\x1c\x50\xc0\x5b\x52\xba\xd0\x94\x83\x45\x29\x7b\x49\xd4\x7a\x78\xaa\x8a\xf4\x76\x3b\x30\xf8\xcd\x71\x9e\xbe\x15\xc4\x49\xf3\xfa\x18\x4c\xa8\x26\x75\x10\xea\x2c\xe1\x1f\xcb\x34\x0f\x2d\x6d\x8c\x17\x6c\x63\xb6\x9f\x16\xea\xc5\xfb\x18\xfd\x04\x00\x00\xff\xff\xfe\xc1\x9a\x73\x08\x02\x00\x00"

func lockedtokensDelegatorDelegate_unstaked_tokensCdcBytes() ([]byte, error) {
	return bindataRead(
		_lockedtokensDelegatorDelegate_unstaked_tokensCdc,
		"lockedTokens/delegator/delegate_unstaked_tokens.cdc",
	)
}

func lockedtokensDelegatorDelegate_unstaked_tokensCdc() (*asset, error) {
	bytes, err := lockedtokensDelegatorDelegate_unstaked_tokensCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "lockedTokens/delegator/delegate_unstaked_tokens.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x89, 0xfe, 0xf6, 0x67, 0xf, 0x7b, 0x3, 0xf4, 0x14, 0x99, 0xaa, 0x92, 0xe3, 0xd4, 0x35, 0x90, 0x51, 0x4f, 0x83, 0x36, 0xd6, 0xf9, 0xed, 0x2a, 0x9f, 0x37, 0x1, 0x43, 0x9f, 0xd5, 0x50, 0x8f}}
	return a, nil
}

var _lockedtokensDelegatorGet_delegator_idCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x50\x5d\x6b\xc2\x40\x10\x7c\xbf\x5f\x31\xfa\x50\x72\x2f\x52\xda\x37\x69\x2b\x62\x84\x8a\x52\x45\xed\x0f\xb8\x5c\x36\xf6\xf0\xbc\x0d\x97\x3d\xda\x22\xfe\xf7\x62\xd2\xd2\x4f\xba\x2f\x0b\x3b\xb3\x33\xbb\xe3\x0e\x35\x47\xc1\x82\xed\x9e\xca\x2d\xef\x29\x34\xa8\x22\x1f\x70\xf9\xb2\x58\x4e\xe6\xd3\x7c\xbb\x9c\x4f\x1f\xc6\x79\xbe\x9e\x6e\x36\x4a\xd5\xa9\x40\x95\x02\x0e\xc6\x85\xcc\x58\xcb\x29\xc8\x10\xe3\xb2\x8c\xd4\x34\x7a\x88\xc7\x59\x90\xeb\x2b\x1c\x95\x02\x00\x4f\x02\xdf\x2a\x8f\x3b\xea\x2c\x54\xbc\xa6\x0a\xb7\xd8\x91\xbc\xcf\x3e\x64\x74\xbb\x72\xae\xc1\x8e\x64\x62\x6a\x53\x38\xef\xe4\xf5\xe6\xe2\xeb\x71\x83\xb6\xdd\xb3\x2f\x29\x1e\xbf\x01\x8b\x9f\x46\xa7\xbb\xec\x7f\xc2\x2a\x15\xde\xd9\x95\x91\x27\xdd\xfb\x34\x2f\x38\x46\x7e\xce\x34\x46\x23\xd4\x26\x38\x9b\xf5\x27\x9c\x7c\x89\xc0\x82\x0e\x84\x41\xa4\x8a\x22\x05\x4b\x10\x46\xdd\x0a\xe1\x97\x41\x5f\x77\x39\x44\x92\x14\xc3\x9f\x51\x9c\x7f\xcd\xc9\xd3\xce\x08\xc7\x59\x9e\xe9\x9e\x3a\xa9\xb7\x00\x00\x00\xff\xff\xae\x79\x8c\xf0\x95\x01\x00\x00"

func lockedtokensDelegatorGet_delegator_idCdcBytes() ([]byte, error) {
	return bindataRead(
		_lockedtokensDelegatorGet_delegator_idCdc,
		"lockedTokens/delegator/get_delegator_id.cdc",
	)
}

func lockedtokensDelegatorGet_delegator_idCdc() (*asset, error) {
	bytes, err := lockedtokensDelegatorGet_delegator_idCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "lockedTokens/delegator/get_delegator_id.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x95, 0x5, 0xef, 0x1b, 0x63, 0xc1, 0xf2, 0x8e, 0xe5, 0x4f, 0x5, 0x4d, 0xa8, 0x56, 0xa9, 0x28, 0xd1, 0x9, 0xc3, 0xad, 0xb6, 0x9, 0x4f, 0xc7, 0x71, 0xb, 0x2e, 0x86, 0xb7, 0xc7, 0xac, 0x5d}}
	return a, nil
}

var _lockedtokensDelegatorGet_delegator_infoCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x53\x4f\x6f\xe2\x3e\x10\xbd\xe7\x53\x4c\x2e\x95\x23\xfd\x14\x7e\x67\xd4\x54\x62\x09\xab\x8d\x8a\x68\x05\xb9\xac\xaa\x1e\x9c\x78\x02\x5e\x8c\x1d\x39\x8e\xd8\x8a\xf2\xdd\x57\xf9\x8b\x53\xd2\xa5\x87\xe5\x12\x32\x79\xf3\xe6\xf9\xcd\x33\x3f\xe4\x4a\x1b\xf8\x2e\xd4\x31\x0a\x63\x9a\x08\xdc\x18\xba\xe7\x72\x0b\x99\x56\x07\xf8\xff\x77\x14\x2e\x56\x71\x14\xff\x8c\x67\xdf\x96\x8b\x59\x18\xae\x17\x9b\x8d\xd3\x76\x2d\x55\xba\x47\x16\xab\x3d\xca\xa2\xc3\x2f\x9f\xe6\x8f\x8b\x30\x7e\x7a\x5c\xac\x3a\xb4\x33\x99\xc0\x1a\x4d\xa9\x65\x01\x54\x02\xd5\x9a\xbe\x81\xca\x20\x44\x81\x5b\x6a\x94\x8e\x64\xa6\x40\x25\xbf\x30\x35\x05\x98\x1d\x35\x60\x76\x08\x34\x4d\x55\x29\x0d\xa4\x4a\x1a\xad\x44\x51\xd1\x70\x09\xdc\x14\x20\x95\x3e\x50\xd1\x23\xa8\x64\x50\xec\xa8\x46\xd6\x95\x1c\x27\x2f\x13\xc8\x4a\x09\x07\xca\x25\x69\xab\x53\x98\x31\xa6\xb1\x28\xbc\x29\xbc\x5c\x1f\xd9\x1f\x08\x7a\x85\x93\xe3\x00\x00\x08\x34\xc0\xec\x2f\xb3\xea\x00\x5f\x62\x08\xe0\xe5\xf5\x42\x92\x97\xc9\xac\x55\x1c\xc0\x16\x4d\xfb\xd2\xa9\xf3\x46\xc6\x41\x60\x75\xf9\x5b\x34\x73\x9a\xd3\x84\x0b\x6e\xde\xee\xef\x4e\x23\x02\x56\x8a\x61\x2f\xe2\xb9\x4c\x04\x4f\xcf\x0f\x64\x92\xd7\xff\x26\x99\x50\xc7\x16\xd9\x83\x3c\xb7\x1e\x5b\xfd\xfc\x44\x69\xad\x8e\xa4\x55\xc2\xb3\xa1\x98\x35\x66\x10\x58\xda\x4e\x7d\xe3\xb5\x3d\x3e\xcd\x73\x94\x8c\xdc\xf2\x88\x48\xc5\x30\x0a\xa7\x83\x29\x7e\x53\xfc\xcf\xe2\xfd\x88\xe0\xcc\xf3\xea\xf1\xe7\x8b\x6b\xa2\x8e\x63\x6b\x56\x45\x3e\xa7\xf9\xc0\xc0\xcb\x41\x07\x4e\xf6\xe5\xfb\x3b\x3b\xd1\x7e\xfd\xf8\xa1\x04\x43\x7d\x1a\x7c\x58\x7e\x1c\x74\x7e\xe8\x39\xc8\xdf\x91\xcd\x4a\x9e\xa9\xd9\x59\x26\x8f\xea\x0e\x40\x72\x01\xef\xef\xe0\x92\x31\x80\xeb\xa7\x3b\x4c\xf7\xc4\xf3\xac\x3d\xe8\xfa\x96\x8d\xac\xe3\xa6\x55\x10\x8c\xca\x70\xc7\x23\x71\x05\x6d\xa2\x71\xcd\x7a\x91\x56\xb5\x35\x6b\x1d\x03\x56\x2b\xdd\xa2\xe9\xa3\xb1\xaa\x91\xc4\x1b\xb4\x5b\x69\xf8\x0a\x47\xdd\xdf\x13\xf0\x0c\x48\x37\xbf\xb7\x76\xc0\x58\x57\x6d\x37\x6f\x3b\x6a\xb9\xfa\x8f\xae\x41\xf3\x74\x3f\x8b\x7e\x14\xba\xc3\xdc\x7f\xae\xef\xec\xfc\x09\x00\x00\xff\xff\x55\x11\x1f\x74\xdc\x05\x00\x00"

func lockedtokensDelegatorGet_delegator_infoCdcBytes() ([]byte, error) {
	return bindataRead(
		_lockedtokensDelegatorGet_delegator_infoCdc,
		"lockedTokens/delegator/get_delegator_info.cdc",
	)
}

func lockedtokensDelegatorGet_delegator_infoCdc() (*asset, error) {
	bytes, err := lockedtokensDelegatorGet_delegator_infoCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "lockedTokens/delegator/get_delegator_info.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x99, 0x68, 0x19, 0xf0, 0xae, 0x6e, 0x25, 0xda, 0x83, 0xe2, 0xf2, 0xc6, 0x8f, 0x36, 0x8d, 0x70, 0xac, 0x1c, 0xd2, 0x6, 0xce, 0x60, 0xe5, 0xcc, 0x1b, 0x63, 0x38, 0xbb, 0x72, 0x3b, 0x19, 0x2e}}
	return a, nil
}

var _lockedtokensDelegatorGet_delegator_node_idCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x50\x5d\x6b\x02\x41\x0c\x7c\xbf\x5f\x31\xfa\x50\xee\x5e\xa4\xcf\xd2\x56\xc4\x13\x2a\x8a\x8a\xfa\x07\xf6\x76\x73\xd7\xc5\x75\x73\xc4\x2c\x6d\x11\xff\x7b\xf1\x6c\xe9\x27\xcd\x4b\x20\x33\x99\x49\xc6\x1f\x5a\x16\xc5\x82\xed\x9e\xdc\x8e\xf7\x14\x8f\xa8\x85\x0f\xb8\x7d\x59\xac\x26\xf3\x69\xb9\x5b\xcd\xa7\xcb\x71\x59\x6e\xa6\xdb\x6d\x96\xb5\xa9\x42\x9d\x22\x0e\xc6\xc7\xdc\x58\xcb\x29\xea\x10\x63\xe7\x84\x8e\xc7\x62\x88\xad\x8a\x8f\x0d\x4e\x59\x06\x00\x81\x14\xa1\x53\x1e\x5f\xa9\xb3\x58\xf3\x86\x6a\xdc\xa3\x21\x7d\x9f\x7d\xc8\x14\xdd\xca\xa5\x06\x0d\xe9\xc4\xb4\xa6\xf2\xc1\xeb\xeb\xdd\xcd\xd7\xe3\x06\x5d\x7b\xe4\xe0\x48\x4e\xdf\x80\xc5\x4f\xa3\xf3\x43\xfe\x3f\x61\x9d\xaa\xe0\xed\xda\xe8\x53\xd1\xfb\x34\xaf\x58\x84\x9f\xf3\x02\xa3\x11\x5a\x13\xbd\xcd\xfb\x13\x4e\xc1\x21\xb2\xe2\x0a\xc2\x40\xa8\x26\xa1\x68\x09\xca\x68\x3b\x21\xfc\x32\xe8\x17\xd7\x1c\x84\x34\x49\xfc\x33\x8a\xcb\xaf\x25\x05\x6a\x8c\xb2\x2c\xd9\xd1\xac\xcc\x8b\x5e\x76\xce\xde\x02\x00\x00\xff\xff\xe8\x43\xdb\xea\x99\x01\x00\x00"

func lockedtokensDelegatorGet_delegator_node_idCdcBytes() ([]byte, error) {
	return bindataRead(
		_lockedtokensDelegatorGet_delegator_node_idCdc,
		"lockedTokens/delegator/get_delegator_node_id.cdc",
	)
}

func lockedtokensDelegatorGet_delegator_node_idCdc() (*asset, error) {
	bytes, err := lockedtokensDelegatorGet_delegator_node_idCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "lockedTokens/delegator/get_delegator_node_id.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x50, 0x8f, 0x94, 0xf3, 0x95, 0xd8, 0xbd, 0xa1, 0xc1, 0xf5, 0x3a, 0xdd, 0x42, 0x9a, 0x64, 0x1e, 0xa4, 0x52, 0xf2, 0x25, 0x19, 0xf6, 0xd, 0x2e, 0x97, 0xaf, 0xd3, 0xc5, 0xe6, 0xce, 0x4f, 0x7b}}
	return a, nil
}

var _lockedtokensDelegatorRegister_delegatorCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x52\xc1\x6e\xda\x40\x10\xbd\xfb\x2b\xa6\x1c\x2a\x5b\x6a\x9c\x1e\xaa\x1e\x10\x34\xa2\x01\xd4\x2a\x08\xa2\x90\xb6\xe7\x8d\x77\x8c\x57\x98\x1d\x6b\x77\x1c\xa8\x10\xff\x5e\xd9\xbb\x06\xdb\x29\xb7\xf8\x62\xd9\xf3\xe6\xbd\x37\x33\x4f\xed\x0a\x32\x0c\xf3\x9c\xf6\xcf\xb4\x45\x0d\xa9\xa1\x1d\x7c\x3e\xcc\x17\xab\x3f\xcf\xab\x87\xd9\x72\x32\x9d\x3e\xcd\xd6\xeb\xc0\x03\x17\x94\x6c\x51\xd6\x50\xdb\x60\x17\xab\xfb\x87\xd9\xb4\x83\x0e\xd8\x08\x6d\x45\xc2\x8a\x74\xa8\xe4\x10\xd6\x6c\x94\xde\x7c\x02\xb1\xa3\x52\xf3\x10\x7e\xcd\xd5\xe1\xeb\x97\x08\x8e\x41\x00\x00\x90\x23\x43\x46\xb9\x44\xf3\x84\xe9\x10\x3e\xb6\x65\xe2\xfa\xf5\xa3\xae\x5e\xd0\xaf\xa2\xcc\xd9\x81\xcf\xe6\xe3\xdf\xd5\x4f\x87\x29\x0c\x16\xc2\x60\x28\x92\xc4\x29\x4e\x4a\xce\x26\xee\xa3\x92\x05\xff\x58\xcc\xd3\xf8\x2c\x0d\x63\xf0\x0d\xf1\x0b\x19\x43\xfb\xd1\x55\x2b\xdf\xc2\x6a\xfc\x21\x5c\xab\xaf\x99\x8c\xd8\xe0\xa3\xe0\x2c\x82\xb3\x5c\xf5\xdc\xdd\x41\x21\xb4\x4a\xc2\x41\x0b\x0e\xca\x82\x26\x06\x2b\x5e\x51\x82\x60\xb0\x05\x26\x2a\x55\x28\xa1\x10\x9c\x0d\xa2\xa0\x6b\xb9\x99\xff\x3f\x8e\x7b\xfb\x68\x8c\xde\x5a\xe7\xe8\x36\x6d\xea\x75\x39\xba\xe2\xed\x9e\xca\x5c\xd6\x96\x1c\x2f\x54\x6d\xc0\x75\x48\x6a\x71\x30\x98\xa2\x41\x9d\xe0\xc0\x71\x9c\x9c\x45\x3c\x60\x52\x32\x5e\xdd\x71\x9c\x18\x14\x8c\x4b\x92\x38\xc5\x1c\x37\x82\xc9\x84\x9a\x24\xfe\x9c\x0e\x41\xc9\xd6\xa0\xd5\x9d\x65\x03\x79\x34\x74\xf8\x0b\xe3\x3e\x99\x33\x77\x21\xea\xb5\xe7\xf5\x75\xbe\x8b\x5c\xe8\x04\xdf\x76\x6f\x90\xdd\xfd\x7c\x32\x3c\xb0\xcd\xa2\x52\x1f\x5a\x18\x8d\x7b\x74\xc7\xa0\xb3\xbb\xae\xd5\xd8\x7f\xe2\x12\xdd\xb6\x6d\xd8\x84\xdf\xbd\x5b\x1a\x27\xc0\xdc\x62\x25\x15\x7a\x10\xdc\x74\xb5\xa2\x4a\xbd\x73\xf8\xf8\xa5\xa9\xf4\x6c\xf4\x46\x94\x58\x90\x55\xec\x43\x30\xba\xe9\x92\xec\x15\x67\xd2\x88\x7d\xcf\xdb\x1b\xf9\xe8\x9d\x47\x3d\x76\xe8\x7c\xe4\x96\xc4\x80\x9a\xca\x4d\xe6\x72\x66\x81\x09\x2c\x8b\x2d\x7e\x18\x5c\x62\x7a\xf2\x61\x3b\x05\xff\x02\x00\x00\xff\xff\x89\xde\x07\x86\xbd\x04\x00\x00"

func lockedtokensDelegatorRegister_delegatorCdcBytes() ([]byte, error) {
	return bindataRead(
		_lockedtokensDelegatorRegister_delegatorCdc,
		"lockedTokens/delegator/register_delegator.cdc",
	)
}

func lockedtokensDelegatorRegister_delegatorCdc() (*asset, error) {
	bytes, err := lockedtokensDelegatorRegister_delegatorCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "lockedTokens/delegator/register_delegator.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x7e, 0x3, 0xe1, 0xfa, 0x1e, 0xab, 0x26, 0x1d, 0xcb, 0x19, 0xb6, 0xb6, 0xc6, 0x7c, 0xa8, 0xc0, 0x14, 0xdc, 0x75, 0x3c, 0xb, 0xa6, 0xe, 0x6, 0x92, 0xab, 0xf, 0xe9, 0x23, 0x1f, 0x61, 0x73}}
	return a, nil
}

var _lockedtokensDelegatorRequest_unstakingCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x91\xdf\x6a\xf2\x40\x10\xc5\xef\xf3\x14\x83\x17\x1f\xf1\x26\x7c\x17\xa5\x17\x52\x2b\xd2\x58\x0a\x8a\x8a\x7f\x1e\x60\xba\x99\x98\xc5\xb8\x93\xce\x4e\xda\x94\xe2\xbb\x17\x5d\x4d\xb5\xd2\xdc\x4c\x86\x3d\x9c\xdf\x9e\xb3\x76\x57\xb1\x28\x4c\xd8\x6c\x29\x5b\xf1\x96\x9c\x87\x5c\x78\x07\xff\x9b\xc9\xec\x69\x3c\x4a\x57\xb3\xf1\x68\x3a\x4c\xd3\xc5\x68\xb9\x8c\x22\x15\x74\x1e\x8d\x5a\x76\x31\xee\xb8\x76\xda\x83\xf5\xb3\x6d\xee\xef\xba\xf0\x15\x01\x00\x94\xa4\xe0\x38\xa3\x94\x4a\xda\xa0\xb2\xcc\x85\x9b\xcf\xde\x15\x21\x09\xcb\xf4\x46\x16\x1d\x2d\x2a\xa1\x0a\x85\x62\x34\x26\x10\x86\xb5\x16\xc3\xb0\x9c\x31\x67\x54\xc1\x65\x46\xb2\xa0\x1c\xfa\x70\xd2\x27\xaf\x2c\xc2\x1f\x0f\xff\xae\x90\xc7\xf1\x72\x54\x3f\xc6\x87\x84\xbf\xae\x74\x71\xbe\x54\x16\xdc\xd0\x1c\xb5\xe8\x42\x4b\x3b\x7c\x83\x01\x54\xe8\xac\x89\x3b\x17\x72\xb0\x1e\x1c\x2b\x78\x7c\xa7\x0c\x50\xc1\x57\x64\x6c\x6e\x29\x83\x0a\xb5\xe8\x74\x5b\x8b\xf6\xc7\x53\x99\x27\xb7\x2d\x41\xff\x27\xcf\x29\x45\x2b\x88\x83\xcd\x3e\x54\x44\x0d\x99\x5a\xe9\xa2\x8c\x3f\x2c\x13\xa1\xb7\x9a\xbc\xae\x9d\x57\xdc\x5a\xb7\x69\x9f\x2d\xcc\xb3\xeb\x3e\xfa\x0e\x00\x00\xff\xff\xb1\xf9\x7f\xb3\x0a\x02\x00\x00"

func lockedtokensDelegatorRequest_unstakingCdcBytes() ([]byte, error) {
	return bindataRead(
		_lockedtokensDelegatorRequest_unstakingCdc,
		"lockedTokens/delegator/request_unstaking.cdc",
	)
}

func lockedtokensDelegatorRequest_unstakingCdc() (*asset, error) {
	bytes, err := lockedtokensDelegatorRequest_unstakingCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "lockedTokens/delegator/request_unstaking.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x54, 0x4a, 0xf3, 0x42, 0x72, 0x6b, 0xbf, 0x51, 0x4d, 0x3a, 0xe6, 0x9b, 0xce, 0x42, 0xbc, 0x7, 0x8b, 0xa6, 0x15, 0x6a, 0xda, 0xb7, 0x66, 0x6b, 0xa8, 0xbd, 0x2e, 0xf1, 0x0, 0x96, 0x7, 0x4}}
	return a, nil
}

var _lockedtokensDelegatorWithdraw_rewarded_tokensCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x92\x41\x8f\xa2\x40\x10\x85\xef\xfc\x8a\x8a\x87\x0d\x1c\x16\xf7\xb0\xd9\x83\xd1\x35\x46\x34\x93\x68\x46\xa3\xce\xcc\xb9\x07\x0a\x21\xb6\x14\x69\x0a\x61\x32\xf1\xbf\x4f\xa0\x69\x06\x89\x5e\xa6\x2f\x1d\xa8\xd7\xf5\xbe\x7a\xdd\xf1\x39\x25\xc5\xb0\x26\xff\x84\xc1\x81\x4e\x98\x64\x10\x2a\x3a\xc3\x9f\x72\xbd\x99\xaf\x16\xde\x61\xb3\x5a\x3c\xcf\x3c\x6f\xb7\xd8\xef\xad\x46\xbd\x94\x54\xd4\x5a\x23\x5d\xae\x37\x6f\x37\x42\x8b\x95\x48\x32\xe1\x73\x4c\x89\x2d\xce\x94\x27\x3c\x82\x97\x65\x5c\xfe\xfb\xeb\xc0\xa7\x65\x01\x00\x48\x64\x88\x48\x06\xa8\x76\x18\x8e\xe0\x57\x97\xc1\xad\xb7\xa7\xba\xda\x8a\x2f\x22\x97\xac\xb5\x2d\x81\xfb\x5a\xfd\xd4\x0d\x53\x85\xa9\x50\x68\x0b\xdf\xd7\x86\xb3\x9c\xa3\x99\xfe\xa8\x5c\xa1\x59\x19\xca\xd0\x6d\x9d\x61\x02\xcd\x01\xf7\x9d\x94\xa2\x62\xfc\x90\xe4\xbf\x5d\xcd\x3b\x82\x47\xf5\x3d\x93\x12\x47\xdc\x0a\x8e\x1c\x68\xed\xaa\x35\x9d\x42\x2a\x92\xd8\xb7\x07\x73\xca\x65\x00\x09\x31\x68\x37\x50\x18\xa2\xc2\xc4\x47\x60\x82\x4e\xb3\x81\x63\xdd\x12\x9b\xf1\xef\x00\xf7\xe2\x30\x9c\xc3\x4c\x03\x0d\x43\x53\xaf\xcb\xce\x8f\xd0\xbe\x2f\xfd\x22\x64\x8e\x03\xdd\xe5\xaa\x21\xb1\x44\x3f\x67\xec\x84\x5c\x5d\x58\x80\x12\x8f\x82\x49\x6d\x15\x95\x1f\x30\xe9\x25\xdf\xe0\x7b\x46\x65\x77\x26\xbe\x3d\xea\x16\x31\x47\x81\x12\xc5\x0e\x0b\xa1\x02\x93\x7d\xfb\xb2\xf4\xee\xdc\xcf\xcb\x0d\x30\xa5\x2c\xe6\x26\x94\xf1\xef\x1e\x85\xe9\xdd\xef\x66\x06\xbc\x5a\x5f\x01\x00\x00\xff\xff\x29\x29\x64\xb8\x25\x03\x00\x00"

func lockedtokensDelegatorWithdraw_rewarded_tokensCdcBytes() ([]byte, error) {
	return bindataRead(
		_lockedtokensDelegatorWithdraw_rewarded_tokensCdc,
		"lockedTokens/delegator/withdraw_rewarded_tokens.cdc",
	)
}

func lockedtokensDelegatorWithdraw_rewarded_tokensCdc() (*asset, error) {
	bytes, err := lockedtokensDelegatorWithdraw_rewarded_tokensCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "lockedTokens/delegator/withdraw_rewarded_tokens.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xe6, 0x5, 0x83, 0x8, 0x2a, 0x18, 0xaf, 0xe7, 0xdc, 0x32, 0xf3, 0xaa, 0x20, 0x75, 0x3b, 0x26, 0xe1, 0xbb, 0xd2, 0x3a, 0xfa, 0x32, 0x6, 0xb0, 0x49, 0x94, 0x57, 0x54, 0x30, 0x79, 0x4d, 0x56}}
	return a, nil
}

var _lockedtokensDelegatorWithdraw_rewarded_tokens_lockedCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x91\x41\x6b\xc2\x40\x10\x85\xef\xf9\x15\x83\x87\x12\x2f\xa1\x87\xd2\x83\xd4\x8a\x34\x96\x82\xa2\xa2\xf6\x07\x4c\x77\x27\x66\x31\xee\x84\xc9\xd8\xa4\x14\xff\x7b\xd1\x98\x34\x56\x9a\xcb\x64\xd8\xc7\xfb\xf6\xbd\x75\xfb\x9c\x45\x61\xc6\x66\x47\x76\xc3\x3b\xf2\x05\x24\xc2\x7b\xb8\xaf\x66\x8b\x97\xe9\x24\xde\x2c\xa6\x93\xf9\x38\x8e\x57\x93\xf5\x3a\x08\x54\xd0\x17\x68\xd4\xb1\x0f\x71\xcf\x07\xaf\x03\x78\x7f\x75\xd5\xe3\x43\x1f\xbe\x03\x00\x80\x8c\x14\x3c\x5b\x8a\x29\xa3\x2d\x2a\xcb\x52\xb8\xfa\x1a\x5c\x11\xa2\x7a\x99\xdf\xc8\x82\xb3\x45\x2e\x94\xa3\x50\x88\xc6\xd4\x84\xf1\x41\xd3\x71\xbd\x34\x98\x06\x95\x72\x66\x49\x56\x94\xc0\x10\x2e\xfa\xe8\x83\x45\xb8\x7c\xba\xbb\x42\x9e\xc7\xdb\x59\xfd\x1c\x9e\x12\xfe\xb9\x52\xe7\x7c\xad\x2c\xb8\xa5\x25\x6a\xda\x87\x96\x76\xfa\x46\x23\xc8\xd1\x3b\x13\xf6\x3a\x72\x70\x05\x78\x56\x28\xf0\x93\x2c\xa0\x42\x91\x93\x71\x89\x23\x0b\x39\x6a\xda\xeb\xb7\x16\xed\x4f\x41\x59\x12\xdd\xb6\x04\xc3\xdf\x3c\x97\x14\xad\x20\xac\x6d\x8e\x75\x45\x54\x91\x39\x28\x75\xca\xf8\xc7\x32\x2a\x9d\xa6\x56\xb0\x5c\x51\x89\x62\x9b\xb8\xed\xe3\xd5\xb3\xf1\x3e\x06\x3f\x01\x00\x00\xff\xff\x93\x68\x03\x07\x10\x02\x00\x00"

func lockedtokensDelegatorWithdraw_rewarded_tokens_lockedCdcBytes() ([]byte, error) {
	return bindataRead(
		_lockedtokensDelegatorWithdraw_rewarded_tokens_lockedCdc,
		"lockedTokens/delegator/withdraw_rewarded_tokens_locked.cdc",
	)
}

func lockedtokensDelegatorWithdraw_rewarded_tokens_lockedCdc() (*asset, error) {
	bytes, err := lockedtokensDelegatorWithdraw_rewarded_tokens_lockedCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "lockedTokens/delegator/withdraw_rewarded_tokens_locked.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x6d, 0x82, 0x3d, 0xe0, 0xb7, 0x1e, 0xf7, 0xed, 0x59, 0xb8, 0x4, 0xce, 0x38, 0xb6, 0x6e, 0x9a, 0x69, 0x60, 0x72, 0x8, 0x27, 0xcf, 0xa5, 0x8, 0x5f, 0x3e, 0xb7, 0x74, 0xcb, 0xaa, 0x37, 0xfe}}
	return a, nil
}

var _lockedtokensDelegatorWithdraw_unstaked_tokensCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x91\xdf\x6a\xf2\x40\x10\xc5\xef\xf3\x14\x83\x17\x1f\xf1\x26\x7c\x17\xa5\x17\x52\x2b\xd2\x58\x0a\x8a\x8a\x7f\x1e\x60\xba\x99\x98\xc5\xb8\x13\x66\xc7\x9a\x52\x7c\xf7\xa2\xd1\x6d\xac\x34\x37\x93\x61\x0f\xe7\xb7\xe7\xac\xdd\x55\x2c\x0a\x13\x36\x5b\xca\x56\xbc\x25\xe7\x21\x17\xde\xc1\xff\x7a\x32\x7b\x19\x8f\xd2\xd5\x6c\x3c\x9a\x0e\xd3\x74\x31\x5a\x2e\xa3\x48\x05\x9d\x47\xa3\x96\x5d\x8c\x3b\xde\x3b\xed\xc1\xfa\xd5\xd6\x8f\x0f\x5d\xf8\x8a\x00\x00\x4a\x52\x70\x9c\x51\x4a\x25\x6d\x50\x59\xe6\xc2\xf5\x67\xef\x86\x90\x34\xcb\xf4\x4e\x16\x9d\x2d\x2a\xa1\x0a\x85\x62\x34\xa6\x21\x0c\xf7\x5a\x0c\x9b\xe5\x8a\xb9\xa2\x0a\x2e\x33\x92\x05\xe5\xd0\x87\x8b\x3e\x79\x67\x11\x3e\x3c\xfd\xbb\x41\x9e\xc7\xdb\x59\xfd\x1c\x9f\x12\xfe\xba\x52\xeb\x7c\xa9\x2c\xb8\xa1\x39\x6a\xd1\x85\x40\x3b\x7d\x83\x01\x54\xe8\xac\x89\x3b\x2d\x39\x58\x0f\x8e\x15\x3c\x7e\x50\x06\xa8\xe0\x2b\x32\x36\xb7\x94\x41\x85\x5a\x74\xba\xc1\x22\xfc\x78\x2a\xf3\xe4\xbe\x25\xe8\xff\xe4\xb9\xa4\x08\x82\xb8\xb1\x39\x36\x15\x51\x4d\x66\xaf\xd4\x2a\xe3\x0f\xcb\xe4\x60\xb5\xc8\x04\x0f\x6b\xe7\x15\x43\xdc\xf0\x78\xcd\xbc\x7a\x1f\xa3\xef\x00\x00\x00\xff\xff\xbc\x5c\xb3\x29\x10\x02\x00\x00"

func lockedtokensDelegatorWithdraw_unstaked_tokensCdcBytes() ([]byte, error) {
	return bindataRead(
		_lockedtokensDelegatorWithdraw_unstaked_tokensCdc,
		"lockedTokens/delegator/withdraw_unstaked_tokens.cdc",
	)
}

func lockedtokensDelegatorWithdraw_unstaked_tokensCdc() (*asset, error) {
	bytes, err := lockedtokensDelegatorWithdraw_unstaked_tokensCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "lockedTokens/delegator/withdraw_unstaked_tokens.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x76, 0x6b, 0xcd, 0x92, 0x2d, 0xc7, 0x26, 0xf1, 0x84, 0xdd, 0xbf, 0xe1, 0x63, 0x85, 0x81, 0xc6, 0xbc, 0xb9, 0x4b, 0x27, 0xa4, 0x96, 0xfc, 0xab, 0x2c, 0x32, 0x7a, 0x19, 0xc1, 0xcc, 0xec, 0x30}}
	return a, nil
}

var _lockedtokensStakerGet_node_idCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x50\x5d\x6b\xc2\x40\x10\x7c\xbf\x5f\x31\xfa\x50\x72\x2f\xd2\x67\x69\x2b\x62\x84\x8a\xa2\x62\xfc\x03\x97\xbb\x4d\x7a\x78\xb9\x0d\x97\x3b\xda\x22\xfe\xf7\x62\xd2\xd2\x4f\xba\x2f\x0b\x3b\xb3\x33\xbb\x63\x9b\x96\x43\xc4\x86\xf5\x89\xcc\x91\x4f\xe4\x3b\x54\x81\x1b\xdc\xbe\x6c\x76\x8b\xf5\x32\x3f\xee\xd6\xcb\xed\x3c\xcf\x0f\xcb\xa2\x10\xa2\x4d\x25\xaa\xe4\xd1\x28\xeb\x33\xa5\x35\x27\x1f\xa7\x98\x1b\x13\xa8\xeb\xe4\x14\x45\x0c\xd6\xd7\x38\x0b\x01\x00\x8e\x22\x5c\xaf\x3c\x1f\xa8\x2b\x5f\xf1\x81\x2a\xdc\xa3\xa6\xf8\x3e\xfb\x90\x91\xfd\xca\xb5\x26\x35\xc5\x85\x6a\x55\x69\x9d\x8d\xaf\x77\x37\x5f\x8f\x9b\xf4\xed\x91\x9d\xa1\x70\xfe\x06\x6c\x7e\x1a\x5d\x1e\xb2\xff\x09\xfb\x54\x3a\xab\xf7\x2a\x3e\xc9\xd1\xa7\x79\xc9\x21\xf0\x73\x26\x31\x9b\xa1\x55\xde\xea\x6c\xbc\xe0\xe4\x0c\x3c\x47\x0c\x20\x14\x02\x55\x14\xc8\x6b\x42\x64\xb4\xbd\x10\x7e\x19\x8c\xe5\x90\x43\xa0\x98\x82\xff\x33\x8a\xeb\xaf\x5b\x36\xb4\xca\x33\x39\x12\x17\xf1\x16\x00\x00\xff\xff\x51\x27\xf0\x0c\x90\x01\x00\x00"

func lockedtokensStakerGet_node_idCdcBytes() ([]byte, error) {
	return bindataRead(
		_lockedtokensStakerGet_node_idCdc,
		"lockedTokens/staker/get_node_id.cdc",
	)
}

func lockedtokensStakerGet_node_idCdc() (*asset, error) {
	bytes, err := lockedtokensStakerGet_node_idCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "lockedTokens/staker/get_node_id.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xd7, 0x47, 0xfe, 0xf5, 0x52, 0x97, 0x8c, 0x6a, 0xd8, 0xc2, 0x0, 0x69, 0x5b, 0x94, 0xba, 0x9e, 0x62, 0x92, 0x49, 0x15, 0x50, 0x26, 0xcc, 0x3c, 0x7e, 0x95, 0xcc, 0x33, 0x76, 0x4, 0xba, 0x72}}
	return a, nil
}

var _lockedtokensStakerGet_staker_infoCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x93\x41\x6f\x9b\x40\x10\x85\xef\xfc\x8a\xe7\x4b\x04\x17\xd2\xb3\x15\x47\xa2\x86\xaa\x56\x2c\x27\xb2\xb9\x54\x51\x0e\x0b\x0c\x66\xeb\xf5\x2e\x5a\x16\xa5\x91\xe3\xff\x5e\x41\x16\x0c\xb5\x93\x54\x8a\x2f\x16\xcb\xbc\x79\xdf\xbe\x19\xf8\xbe\x54\xda\xe0\x87\x50\xcf\x8b\x30\x66\x89\xa0\x8d\x61\x3b\x2e\xb7\xc8\xb5\xda\xe3\xdb\x9f\x45\x18\xad\xe2\x45\xfc\x2b\x0e\xbe\x2f\xa3\x20\x0c\xd7\xd1\x66\xe3\x58\xd5\x52\xa5\x3b\xca\x62\xb5\x23\x59\x75\xf5\xcb\xfb\xf9\x5d\x14\xc6\xf7\x77\xd1\xaa\xab\x76\xae\xaf\xb1\x26\x53\x6b\x59\x81\x49\x30\xad\xd9\x0b\x54\x8e\x95\xca\x68\x21\x73\x05\x95\xfc\xa6\xd4\x54\x30\x05\x33\x30\x05\x81\xa5\xa9\xaa\xa5\x41\xaa\xa4\xd1\x4a\x54\x4d\x07\x2e\xc1\x4d\x05\xa9\xf4\x9e\x89\xbe\x82\xc9\x0c\x55\xc1\x34\x65\xdd\x91\xe3\x94\x75\x82\xbc\x96\xd8\x33\x2e\x5d\x7b\x3a\x45\x90\x65\x9a\xaa\xca\x9b\xe2\xf1\xfc\xb6\x7e\xc7\xf2\x84\x83\xe3\x00\x80\x20\x03\x69\x0f\x83\x86\xf8\x33\xdd\x0c\x8f\x4f\x27\x69\x59\x27\x81\x45\x9c\x61\x4b\xc6\x3e\x74\x38\xde\xd8\xa4\xe9\x46\x1a\xb3\x81\xcc\xdf\x92\x99\xb3\x92\x25\x5c\x70\xf3\x72\x73\x75\x78\xc7\xfc\x4d\xfa\x50\x27\x82\xa7\xc7\x5b\xf7\x3f\xaa\x1e\x98\x29\xbc\x49\xeb\xdf\xfc\xfc\x44\x69\xad\x9e\x5d\x8b\xc4\xf3\x9e\x6a\x4d\x39\x66\x43\xbe\x43\x2f\x1a\x25\xe3\xb3\xb2\x24\x99\xbd\xe7\xdd\xd4\xb9\xad\x20\x9c\x76\x7d\x7d\x9e\x79\x5e\xdb\xed\x78\x4a\x42\xb4\xeb\x64\xef\xdf\xa8\xe6\xac\x1c\x65\x72\x62\x1e\x85\xd3\x1f\xdf\x5c\x0d\x37\xd2\x6f\xff\x7e\x2a\x91\x91\x3e\x8c\x5e\x2c\xff\x35\x3a\xde\xf6\x3d\xdc\x8f\x2b\x07\x11\x9e\xf2\xba\xc8\x3d\x83\xe4\x02\xaf\xaf\x98\xb8\x97\x0a\x26\x7e\x5a\x50\xba\x73\x3d\x6f\x10\xab\x6e\xbf\x92\x71\xba\xc3\x94\xec\x70\xce\xfa\xbd\x4d\xea\xb2\x4d\x37\x5e\x6b\xd3\x7b\xf1\x1c\xe7\x60\xcd\x68\xb6\x64\xda\xb1\x85\xae\x67\x6f\x31\x44\xfc\x10\x73\x80\xfa\xa5\x2d\xf9\x8c\x6b\x32\x5e\x9e\x8b\x3c\x47\xe7\x6f\x00\x00\x00\xff\xff\xe2\x8f\x99\x57\xdc\x04\x00\x00"

func lockedtokensStakerGet_staker_infoCdcBytes() ([]byte, error) {
	return bindataRead(
		_lockedtokensStakerGet_staker_infoCdc,
		"lockedTokens/staker/get_staker_info.cdc",
	)
}

func lockedtokensStakerGet_staker_infoCdc() (*asset, error) {
	bytes, err := lockedtokensStakerGet_staker_infoCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "lockedTokens/staker/get_staker_info.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x91, 0x7c, 0xd6, 0xbc, 0x1a, 0x6b, 0xba, 0x72, 0x5a, 0xe1, 0xb7, 0x3b, 0x84, 0xc2, 0xae, 0x26, 0x27, 0x6a, 0x8a, 0x90, 0x65, 0xc2, 0xfc, 0x5c, 0x9f, 0x3, 0x21, 0x92, 0x53, 0xa7, 0x73, 0x48}}
	return a, nil
}

var _lockedtokensStakerRegister_nodeCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x53\xcd\x8e\xda\x4c\x10\xbc\xfb\x29\xfa\xe3\xf0\xc9\x48\xbb\xde\x1c\xa2\x28\xb2\x20\x2b\xb2\x40\x82\x40\x80\x30\x9b\x9f\xe3\xac\xdd\x06\x0b\x33\x8d\xc6\xed\xc0\x0a\xf1\xee\xd1\x78\x6c\xec\x01\x36\xca\x25\x3e\xf8\xa7\xbb\xdc\x55\x53\x53\x93\x6c\x77\xa4\x18\x86\x29\xed\x97\xb4\x41\x09\xb1\xa2\x2d\xbc\x3b\x0c\x27\xb3\xef\xcb\xd9\x78\x30\xed\xf5\xfb\x8b\x41\x10\x38\x25\x70\x42\xe1\x06\xa3\x02\x9a\x55\xd8\xc9\xec\x69\x3c\xe8\xdf\x42\x07\x2c\x36\x89\x5c\xcd\x15\x1d\x5e\x2b\x74\xb0\xec\x8d\x47\xd3\x2f\xf3\xc5\xec\xc7\xcf\x0a\xee\xb0\x12\x32\x13\x21\x27\x24\xdd\x24\xf2\x21\x60\x95\xc8\xd5\x1d\x28\x4a\xd1\x87\xe7\x91\xe4\x8f\x77\x20\x91\xf7\xa4\xf4\xc0\x5e\x14\x29\xcc\xb2\x1a\x57\xb7\xc6\xf8\x5a\x97\x33\xc3\x6f\xd5\xc4\x96\x72\xc9\x3e\x3c\x0f\x93\xc3\x87\xf7\x6d\x38\x3a\x0e\x00\x40\x8a\x0c\x6b\x4a\x23\x54\x0b\x8c\x7d\xf8\xbf\xb9\x50\xaf\x78\x7c\x2d\xba\x35\xfa\x97\xc8\x53\x36\xe0\xb3\x7d\xde\x37\x5d\x34\x98\x9d\xc2\x9d\x50\xe8\x8a\x30\x34\x8c\xbd\x9c\xd7\x3d\xf3\xa1\x69\xa1\xbc\x32\x4c\x63\xef\x4c\x0d\x5d\x28\x7f\xf0\x5e\x48\x29\xda\x77\xde\x94\xf2\xc9\xd5\x96\xfa\xf0\x56\x3f\x60\x52\x62\x85\x73\xc1\xeb\xf6\x99\x4d\x5f\x8f\x8f\xb0\x13\x32\x09\xdd\xd6\x13\xe5\x69\x04\x92\x18\x0c\x19\x28\x8c\x81\x09\x1a\x53\x5a\x6d\xc7\x96\x5a\xad\xfb\x86\xd2\x0b\x1f\x2a\x81\x0f\x99\x51\xf2\x10\x57\xfd\xa2\xfd\xd7\xa2\xf4\x6f\xc0\x45\x3c\x0b\x72\xad\x12\x15\xca\x10\x5b\x66\xc6\xc9\x48\xc4\x03\x86\x39\x63\xc3\x5b\xbd\x4f\x92\x22\x1c\xc9\x98\xa0\x6b\xe5\xd1\x9b\x96\xf5\x22\x70\x49\x54\x85\x4d\xdf\x6f\x66\xed\xaa\x74\x15\x3b\xeb\xd3\x4e\x5f\xfd\xde\xb0\x53\xab\x4b\x8b\xcd\xfb\x2c\x52\x21\x43\x84\xee\x45\x1a\xbc\x15\xb2\xd9\xde\x32\x38\x25\xd0\x6d\x4c\x49\xe2\x32\xd3\xd0\xe9\x5e\x8c\x3b\x3a\x96\xc5\x17\xb3\x43\x85\x82\x51\xdb\xa0\x7d\x41\xe5\x56\x4e\xf9\x67\xcf\xea\xe3\x62\x9e\x0d\xda\x13\x60\x9a\xa1\x66\x77\xdd\x92\xff\xde\xa6\x6f\x6b\x41\x56\x64\xbc\x97\xaa\xf3\x67\x65\x11\xee\x28\x4b\xb8\x8c\x4f\xe7\xde\x1e\xb2\x4f\x78\x1d\x29\xb1\x77\x6d\x6d\x57\xf4\xed\x7f\xbf\xfa\xa3\xc5\x50\xe6\x77\x4a\x0c\x28\x29\x5f\xad\x4d\x68\x33\x7d\xa2\x74\x00\xf0\xbf\x56\x9d\xf9\xd3\xf9\xad\x8c\xf0\xc9\xf9\x1d\x00\x00\xff\xff\x94\xa6\xcb\x26\x8d\x05\x00\x00"

func lockedtokensStakerRegister_nodeCdcBytes() ([]byte, error) {
	return bindataRead(
		_lockedtokensStakerRegister_nodeCdc,
		"lockedTokens/staker/register_node.cdc",
	)
}

func lockedtokensStakerRegister_nodeCdc() (*asset, error) {
	bytes, err := lockedtokensStakerRegister_nodeCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "lockedTokens/staker/register_node.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x8b, 0xa, 0xd4, 0xd3, 0xd4, 0xf6, 0x7e, 0x98, 0x5b, 0xad, 0xb6, 0x54, 0x61, 0x3, 0xe1, 0x5, 0x2e, 0x2d, 0x9c, 0x94, 0x9e, 0xb7, 0x50, 0x51, 0x5c, 0x85, 0xc0, 0x41, 0xac, 0xb5, 0x2, 0x2d}}
	return a, nil
}

var _lockedtokensStakerRequest_unstakingCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x91\x4d\x6b\xf2\x40\x10\xc7\xef\xfb\x29\x06\x0f\x0f\xf1\x12\x9e\x43\xe9\x41\x6a\x25\xa8\x7d\x41\x51\x71\x15\xda\xe3\x76\x9d\x68\x48\xdc\x49\x67\x27\x34\xa5\xf8\xdd\x4b\xdc\xf8\x42\xc1\xbd\x0c\xcb\xfc\xe7\x3f\xf3\x9b\xc9\xf6\x25\xb1\xc0\x94\x6c\x8e\x9b\x15\xe5\xe8\x3c\xa4\x4c\x7b\xf8\x5f\x4f\xe7\xc3\xc9\x78\xb4\x9a\x4f\xc6\xb3\x64\x34\x5a\x8e\xb5\x56\xad\x5a\x8b\xc9\x33\xb7\x5d\x30\xd5\xdf\x27\xb5\x5e\x25\x93\xd7\xd9\xf3\x62\x39\x7f\x7b\x3f\xc9\x95\xb0\x71\xde\x58\xc9\xc8\x45\x66\x4f\x95\x93\x1e\xac\x9f\xb2\xfa\xfe\xae\x0b\x3f\x4a\x01\x00\x14\x28\xb0\xa3\x62\x83\xbc\xc4\xb4\x07\xff\xae\x27\x89\x8f\xe1\xe5\x98\x0d\xea\x92\xb1\x34\x8c\x91\xb1\x36\xb8\x25\x95\xec\x92\xf0\x69\x2c\xa1\x7d\x1e\x8b\x34\x3e\xdb\x42\x1f\xda\x82\xf8\x83\x98\xe9\xeb\xe1\x66\x9b\xc7\xa8\xe1\xe9\xc1\xad\xbc\x16\x62\xb3\xc5\x85\x91\x5d\xf7\xdc\xad\x79\x83\x01\x94\xc6\x65\x36\xea\x0c\xa9\x2a\x36\xe0\x48\x20\x34\x03\xc6\x14\x19\x9d\x45\x10\x82\x2b\xaf\x4e\x70\x38\x04\x34\xac\xd1\x56\x82\x57\x10\xcd\x6a\xbc\x98\x1c\x39\x6c\xba\xff\x07\xab\x85\xd1\x47\x49\xd4\x55\x17\xfa\x4b\x51\xcc\xf8\x59\xa1\x97\xb5\xf3\xe1\x68\xe7\x3b\x84\x78\x1a\xe1\xa0\x7e\x03\x00\x00\xff\xff\x5f\x78\x28\xec\x0a\x02\x00\x00"

func lockedtokensStakerRequest_unstakingCdcBytes() ([]byte, error) {
	return bindataRead(
		_lockedtokensStakerRequest_unstakingCdc,
		"lockedTokens/staker/request_unstaking.cdc",
	)
}

func lockedtokensStakerRequest_unstakingCdc() (*asset, error) {
	bytes, err := lockedtokensStakerRequest_unstakingCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "lockedTokens/staker/request_unstaking.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x58, 0x89, 0x50, 0xca, 0x45, 0x71, 0x4e, 0x85, 0xb7, 0xbe, 0xb5, 0xb7, 0x66, 0xdb, 0x88, 0x48, 0xdf, 0xfa, 0x85, 0x70, 0x19, 0xa4, 0x67, 0x61, 0xc2, 0x33, 0xc, 0xc5, 0x1, 0xea, 0xd4, 0xb9}}
	return a, nil
}

var _lockedtokensStakerStake_new_tokensCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x52\x4d\x6f\xda\x40\x10\xbd\xfb\x57\x4c\x39\x54\xe6\x10\xa7\x87\xaa\x87\x08\x1a\x91\x00\x69\x04\x32\x08\x93\x7e\x1c\x17\x7b\xfc\x21\x96\x5d\x6b\x3d\x2e\x54\x88\xff\x5e\xed\xae\x6d\x6c\x27\x91\xaa\xfa\x62\xf0\xbc\x79\xef\xcd\xcc\xcb\x0e\xb9\x54\x04\x73\x2e\x8f\x5b\xb9\x47\x01\xb1\x92\x07\xf8\x74\x9a\x2f\x57\x3f\xb6\xab\xc5\xcc\x9f\x4c\xa7\x9b\x59\x10\x38\x35\xb0\x14\x49\xb6\xe3\xd8\x05\xbf\xf8\x4f\xcf\x0f\xcb\x59\xa7\xa1\xee\x58\xca\x70\x8f\x91\xc1\x17\x75\xc3\x72\xf5\xb8\x98\x4d\xdf\xe2\x0f\x88\xed\x33\x91\xac\x95\x3c\xfd\xa9\xd1\xc1\x76\xb2\x78\xf6\x9f\xd6\x9b\xd5\xcf\x5f\x0d\x3b\x29\x26\x0a\x16\x52\x26\x85\xcb\x0e\xb2\x14\x74\x07\x2f\xf3\xec\xf4\xe5\xf3\x10\xce\x8e\x03\x00\xc0\x91\x20\x95\x3c\x42\xb5\xc1\xf8\x0e\x3e\xb6\x9d\x78\xe6\xf5\xcd\x54\xaf\xe8\xdf\xac\xe4\x64\xc1\xcd\x46\xbc\xef\xfa\xa3\xc5\xe4\x0a\x73\xa6\xd0\x65\x61\x68\x15\x27\x25\xa5\x13\xfb\x47\xcb\x42\xf5\x14\xc8\x63\xaf\x91\x86\x31\x54\x0d\xde\x4e\x2a\x25\x8f\xa3\x77\xad\x7c\x75\xf5\xcc\x77\xf0\x5e\x3d\x20\xa9\x58\x82\x6b\x46\xe9\xb0\x51\xd3\xcf\xfd\x3d\xe4\x4c\x64\xa1\x3b\x78\x94\x25\x8f\x40\x48\x02\x2b\x06\x0a\x63\x54\x28\x42\x04\x92\xd0\xe2\x1a\x0c\x9d\xae\xe1\x7a\xfa\x37\xfc\xf6\xb6\x51\xdb\xbc\x2d\xac\x9f\xdb\xb8\xae\x9b\xf2\x3f\x5b\xd3\x6d\x40\x26\x4a\x46\xfc\xea\x75\x60\x39\x2e\xd6\x22\x9e\x30\x2c\x09\x5b\x1b\xd6\xd7\x2a\x88\xed\x51\xd9\xa8\x8c\x7b\x3b\xaf\x9c\x07\x06\xe2\xb6\x26\xd5\x8d\xdc\x6c\xf7\x81\x71\xa6\xb7\xf2\xaa\x35\x41\xb2\xfb\xaf\x2e\x5b\x01\xdb\x2c\x59\x0c\x36\x74\x30\x1a\xf7\xe8\xce\x4e\x67\xfa\x96\x49\xcf\xfc\xf6\xd1\x6e\xaa\x68\x62\x6b\xdf\x2d\xf6\x0b\x20\x2f\x50\x8b\xb8\x15\x08\x6e\xba\x2a\x43\xad\xdb\x39\x9a\xb7\xab\x2b\x7d\x03\xdd\xe1\x22\xcc\x65\x91\x51\x75\xc0\xd1\x4d\x97\xe4\x98\x51\x1a\x29\x76\xec\x79\x7b\x25\x3f\xfc\xef\x21\xdb\x6d\xfd\x81\xcf\x9d\x6a\x15\x1a\x5f\x12\xa0\x90\x65\x92\xda\xa4\x14\x3a\xc6\x46\xe4\xc3\xe0\x4a\x77\xa9\xe2\x72\x71\xfe\x06\x00\x00\xff\xff\x31\x42\x9b\x1e\xd2\x04\x00\x00"

func lockedtokensStakerStake_new_tokensCdcBytes() ([]byte, error) {
	return bindataRead(
		_lockedtokensStakerStake_new_tokensCdc,
		"lockedTokens/staker/stake_new_tokens.cdc",
	)
}

func lockedtokensStakerStake_new_tokensCdc() (*asset, error) {
	bytes, err := lockedtokensStakerStake_new_tokensCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "lockedTokens/staker/stake_new_tokens.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xf9, 0x76, 0x5e, 0x6f, 0x41, 0xe5, 0xe9, 0x35, 0x96, 0x1e, 0x65, 0x98, 0x9a, 0x42, 0xc8, 0xf6, 0xca, 0x37, 0x27, 0x38, 0x8d, 0x70, 0xfb, 0x14, 0xf8, 0xe, 0x2b, 0x5c, 0xca, 0xd4, 0x80, 0x73}}
	return a, nil
}

var _lockedtokensStakerStake_rewarded_tokensCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x91\xcf\x6b\xc2\x50\x0c\xc7\xef\xfd\x2b\x82\x87\x51\x2f\x65\x87\xb1\x83\xcc\x49\x51\xf7\x03\x45\xa5\xcf\xc1\x76\x7c\x7b\x4d\xb5\xb4\xbe\x94\x34\xc5\x8e\xe1\xff\x3e\xda\xd7\xaa\x0c\xcc\x25\x2d\xf9\xe6\x9b\x7c\xf2\xd2\x43\x41\x2c\xb0\x24\x93\x61\xbc\xa5\x0c\x6d\x09\x09\xd3\x01\xee\xeb\xe5\x7a\xba\x98\xcf\xb6\xeb\xc5\x7c\x15\xce\x66\xd1\x5c\x29\xaf\x53\x2b\xd1\x59\x6a\x77\x1b\xa6\xfa\xa7\x57\xab\x6d\xb8\x78\x5f\xbd\x6e\xa2\xf5\xe7\x57\x2f\xf7\x84\xb5\x2d\xb5\x91\x94\xac\xaf\x0f\x54\x59\x19\xc1\xc7\x4b\x5a\x3f\x3e\x0c\xe1\xd7\xf3\x00\x00\x72\x14\xd8\x53\x1e\x23\x47\x98\x8c\xe0\xee\x7a\x93\xa0\x4d\x6f\x6d\xd5\xa9\x0b\xc6\x42\x33\xfa\xda\x18\xe7\x16\x56\xb2\x0f\xdd\x4f\x63\x09\x5d\x94\x98\x27\xc1\xd9\x16\xc6\xd0\x35\x04\xdf\xc4\x4c\xc7\xa7\x9b\x63\x9e\xfd\x86\x67\x04\xb7\xea\x4a\x88\xf5\x0e\x37\x5a\xf6\xc3\xf3\xb4\x26\x26\x13\x28\xb4\x4d\x8d\x3f\x98\x52\x95\xc7\x60\x49\xc0\x0d\x03\xc6\x04\x19\xad\x41\x10\x82\x2b\xaf\x81\x73\x38\x39\x34\xac\xd1\x54\x82\x57\x10\xcd\x69\x4a\xd1\x19\xb2\xbb\xf4\xf8\x1f\x56\x07\xa3\x5a\x89\x3f\xf4\x2e\xf4\x97\xa6\xa0\xfd\x8e\xf0\xa8\x39\xee\x79\xce\x4f\xe1\x72\xbf\xc5\xc9\xfb\x0b\x00\x00\xff\xff\x4c\x01\x8a\x3b\x0d\x02\x00\x00"

func lockedtokensStakerStake_rewarded_tokensCdcBytes() ([]byte, error) {
	return bindataRead(
		_lockedtokensStakerStake_rewarded_tokensCdc,
		"lockedTokens/staker/stake_rewarded_tokens.cdc",
	)
}

func lockedtokensStakerStake_rewarded_tokensCdc() (*asset, error) {
	bytes, err := lockedtokensStakerStake_rewarded_tokensCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "lockedTokens/staker/stake_rewarded_tokens.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x2d, 0x5f, 0x47, 0xa5, 0x4b, 0xa0, 0x20, 0x8f, 0xd4, 0xc8, 0xff, 0x36, 0x18, 0xd, 0x76, 0xea, 0x11, 0x69, 0x2a, 0x66, 0x7f, 0xb9, 0xbb, 0xec, 0x61, 0xba, 0x59, 0xc0, 0x50, 0x23, 0xa6, 0x12}}
	return a, nil
}

var _lockedtokensStakerStake_unstaked_tokensCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x91\xcf\x6a\xc2\x40\x10\xc6\xef\xfb\x14\x83\x87\x12\x2f\xa1\x87\xd2\x83\xd4\x4a\x50\xfb\x07\x45\xc5\x55\x68\x8f\xdb\x75\xa2\x21\x71\x27\x4c\x26\x34\xa5\xf8\xee\x25\xd9\xa8\xa1\xe0\x5c\x26\x61\xbe\xf9\x66\x7e\xb3\xc9\x31\x27\x16\x98\x93\x4d\x71\xb7\xa1\x14\x5d\x01\x31\xd3\x11\xee\xab\xf9\x72\x3c\x9b\x4e\x36\xcb\xd9\x74\x11\x4d\x26\xeb\xa9\xd6\xaa\x55\x6b\x31\x69\xe2\xf6\x2b\xa6\xea\xe7\xac\xd6\x9b\x68\xf6\xbe\x78\x5d\xad\x97\x1f\x9f\x67\xb9\x12\x36\xae\x30\x56\x12\x72\x81\x39\x52\xe9\x64\x00\xdb\x97\xa4\x7a\x7c\xe8\xc3\xaf\x52\x00\x00\x19\x0a\x1c\x28\xdb\x21\xaf\x31\x1e\xc0\x5d\x77\x93\xb0\x49\x6f\x4d\xd5\xab\x73\xc6\xdc\x30\x06\xc6\x5a\xef\x16\x95\x72\x88\xfc\x4f\x6d\x09\x6d\x14\x98\xc5\xe1\xc5\x16\x86\xd0\x36\x84\x5f\xc4\x4c\xdf\x4f\x37\xc7\x3c\x07\x35\xcf\x00\x6e\xd5\xb5\x10\x9b\x3d\xae\x8c\x1c\xfa\x97\x69\x75\x8c\x46\x90\x1b\x97\xd8\xa0\x37\xa6\x32\xdb\x81\x23\x01\x3f\x0c\x18\x63\x64\x74\x16\x41\x08\x3a\x5e\x3d\xef\x70\xf2\x68\x58\xa1\x2d\x05\x3b\x10\xf5\x69\x0a\x31\x29\xb2\xbf\xf4\xf0\x1f\x56\x0b\xa3\x1b\x49\xd0\x57\x57\xfa\x6b\x53\xd8\x7c\x6f\x5d\x93\x5a\x9e\xcb\x53\xf8\x7c\xde\xe2\xa4\xfe\x02\x00\x00\xff\xff\x63\x35\x3a\x15\x0d\x02\x00\x00"

func lockedtokensStakerStake_unstaked_tokensCdcBytes() ([]byte, error) {
	return bindataRead(
		_lockedtokensStakerStake_unstaked_tokensCdc,
		"lockedTokens/staker/stake_unstaked_tokens.cdc",
	)
}

func lockedtokensStakerStake_unstaked_tokensCdc() (*asset, error) {
	bytes, err := lockedtokensStakerStake_unstaked_tokensCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "lockedTokens/staker/stake_unstaked_tokens.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x2b, 0x1d, 0x1, 0x11, 0xf9, 0x79, 0xef, 0xb3, 0xce, 0x49, 0x93, 0x62, 0xfc, 0x29, 0x5c, 0xc2, 0x92, 0xc4, 0xa4, 0xc9, 0x40, 0x13, 0x75, 0x6, 0x2a, 0xf, 0x2c, 0x4e, 0x71, 0xae, 0x7e, 0xb2}}
	return a, nil
}

var _lockedtokensStakerUnstake_allCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x90\x41\x6b\xfa\x40\x10\xc5\xef\xfb\x29\x06\x0f\x7f\xd6\x4b\xf8\x9f\xa5\x56\x82\x4a\x5b\x14\x15\xd7\x43\x7b\xdc\xae\x13\x0d\x59\x77\xc2\x64\x42\x2d\xc5\xef\x5e\x92\x8d\x1a\x0a\xce\x65\x18\xe6\xcd\x7b\xfc\x26\x3f\x95\xc4\x02\x4b\x72\x05\xee\x77\x54\x60\xa8\x20\x63\x3a\xc1\xff\xf3\x72\x3d\x5d\xcc\x67\xbb\xf5\x62\xbe\x4a\x67\xb3\xed\xdc\x18\xd5\xa9\x8d\xd8\x22\x0f\x87\x0d\xd3\xf9\xfb\xaa\x36\xbb\x74\xf1\xb6\x7a\xd9\x6c\xd7\xef\x1f\x57\xb9\x12\xb6\xa1\xb2\x4e\x72\x0a\x7a\x08\x3f\x4a\x01\x00\x78\x14\x38\x92\xdf\x23\x6f\x31\x1b\xc1\xbf\x7e\x76\xd2\xb6\xd7\x76\x1b\xd5\x25\x63\x69\x19\xb5\x75\x8e\xea\x20\x23\x48\x6b\x39\xa6\x71\x68\x2c\xa1\xab\x0a\x7d\x96\xdc\x6c\x61\x0c\xdd\x41\xf2\x49\xcc\xf4\xf5\xf4\x30\xe6\x59\x37\x04\x23\x78\xb4\x37\x42\x6c\x0f\xb8\xb1\x72\x1c\xde\xd2\x9a\x9a\x4c\xa0\xb4\x21\x77\x7a\x30\xa5\xda\xef\x21\x90\x40\x0c\x03\xc6\x0c\x19\x83\x43\x10\x82\x9e\xd7\x20\x3a\x5c\x22\x1a\x9e\xd1\xd5\x82\x3d\x88\xe6\x35\x95\xd8\x02\x39\xfe\x76\xfc\x07\xab\x83\x31\xad\x44\x0f\xd5\x9d\xfe\x7e\x94\xd4\xa1\x9d\x52\xef\xf5\x35\xee\xa2\x7e\x03\x00\x00\xff\xff\x74\xb5\x4c\x21\xe8\x01\x00\x00"

func lockedtokensStakerUnstake_allCdcBytes() ([]byte, error) {
	return bindataRead(
		_lockedtokensStakerUnstake_allCdc,
		"lockedTokens/staker/unstake_all.cdc",
	)
}

func lockedtokensStakerUnstake_allCdc() (*asset, error) {
	bytes, err := lockedtokensStakerUnstake_allCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "lockedTokens/staker/unstake_all.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xfd, 0xd3, 0x2e, 0xa, 0x8e, 0xd8, 0xe4, 0x82, 0xc3, 0xb4, 0xc9, 0x21, 0x28, 0x8, 0x53, 0xa5, 0x6d, 0xb0, 0xa8, 0x9, 0x45, 0xd8, 0x11, 0xf1, 0x8a, 0x70, 0x2d, 0x4f, 0x79, 0x43, 0x3f, 0x86}}
	return a, nil
}

var _lockedtokensStakerWithdraw_rewarded_tokensCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x92\x4f\x8f\xa2\x40\x10\xc5\xef\x7c\x8a\x8a\x87\x0d\x1c\x16\xf7\xb0\xd9\x83\xd1\x35\xc6\x3f\x99\x44\x33\x1a\x71\x66\xce\x3d\x50\x0c\x44\xa4\x48\x51\x08\x93\x89\xdf\x7d\x02\x0d\x88\x44\x2f\xd3\x97\x0e\xd4\xeb\x7a\xbf\x7a\xdd\xe1\x29\x21\x16\xd8\x90\x7b\x44\xef\x40\x47\x8c\x53\xf0\x99\x4e\xf0\xa7\xd8\x6c\xe7\xeb\xe5\xe2\xb0\x5d\x2f\x9f\x67\x8b\xc5\x7e\xe9\x38\x46\xad\x5e\x45\x94\x57\xda\x46\xba\xda\x6c\xdf\x6e\x84\x86\xb0\x8a\x53\xe5\x4a\x48\xb1\xa9\x4e\x94\xc5\x32\x82\x97\x55\x58\xfc\xfb\x6b\xc1\x97\x61\x00\x00\x44\x28\x10\x50\xe4\x21\xef\xd1\x1f\xc1\xaf\x2e\x83\x5d\x6d\x4f\x55\xb5\x15\x9f\x55\x16\x89\xd6\xb6\x04\xf6\x6b\xf9\x53\x37\x4c\x18\x13\xc5\x68\x2a\xd7\xd5\x86\xb3\x4c\x82\x99\xfe\x28\x5d\xa1\x5e\x29\x46\xbe\xdd\x3a\xc3\x04\xea\x03\xf6\x3b\x31\x53\x3e\x7e\x48\xf2\xdf\x2c\xe7\x1d\xc1\xa3\xba\x23\xc4\xea\x03\x77\x4a\x02\xab\x75\x2b\xd7\x74\x0a\x89\x8a\x43\xd7\x1c\xcc\x29\x8b\x3c\x88\x49\x40\x9b\x01\xa3\x8f\x8c\xb1\x8b\x20\x04\x9d\x5e\x03\xcb\xb8\x05\x6e\xa6\xbf\xc3\xdb\x4b\xa3\xc1\x1c\xa6\x9a\x67\xe8\x37\xf5\xaa\xfc\x33\xb4\xeb\x9d\x9f\x55\x94\xe1\x40\x77\xb9\x68\x48\x2c\xd0\xcd\x04\x3b\x19\x97\xf7\x95\x8a\x3a\x22\xef\x98\x8a\x4f\x98\xf4\x52\xaf\xd9\x9d\x4a\x62\x76\x67\xbd\x1e\xb2\xf3\x50\x02\x8f\x55\xbe\xc7\x5c\xb1\xd7\x24\xde\xbe\x27\xbd\x5b\xf7\x63\xb2\x3d\x4c\x28\x0d\xa5\xce\x62\xfc\xbb\xe7\xdf\xf4\xee\x77\x6b\xe6\xba\x18\xdf\x01\x00\x00\xff\xff\x5e\xcd\xa6\x9b\x1b\x03\x00\x00"

func lockedtokensStakerWithdraw_rewarded_tokensCdcBytes() ([]byte, error) {
	return bindataRead(
		_lockedtokensStakerWithdraw_rewarded_tokensCdc,
		"lockedTokens/staker/withdraw_rewarded_tokens.cdc",
	)
}

func lockedtokensStakerWithdraw_rewarded_tokensCdc() (*asset, error) {
	bytes, err := lockedtokensStakerWithdraw_rewarded_tokensCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "lockedTokens/staker/withdraw_rewarded_tokens.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x8d, 0x8a, 0xc1, 0xc0, 0x10, 0xe2, 0xf1, 0x46, 0xbe, 0x81, 0x21, 0x16, 0x25, 0x90, 0x8, 0x82, 0x70, 0x2d, 0xac, 0x24, 0xc8, 0x11, 0xcc, 0x3e, 0xa1, 0x71, 0xa3, 0x3f, 0xf8, 0x5e, 0x35, 0xa0}}
	return a, nil
}

var _lockedtokensStakerWithdraw_rewarded_tokens_lockedCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x91\xcf\x6b\xc2\x50\x0c\xc7\xef\xfd\x2b\x82\x87\x51\x2f\x65\x87\xb1\x83\xcc\x49\x51\xf7\x03\x45\xa5\x75\xb0\x1d\xdf\x5e\x53\x5b\x5a\x5f\x4a\x9a\xd2\x8e\xe1\xff\x3e\xea\x6b\xb5\x0c\xcc\x25\x3c\xf2\xcd\x37\xf9\xe4\xa5\xc7\x82\x58\x60\x4d\x3a\xc3\x68\x4f\x19\x9a\x12\x62\xa6\x23\xdc\x37\xeb\xed\x7c\xb5\x5c\xec\xb7\xab\xe5\xc6\x5f\x2c\x82\x65\x18\x3a\x9d\x3a\x14\x95\xa5\xe6\xb0\x63\x6a\x7e\x7a\x75\xb8\xf7\x57\xef\x9b\xd7\x5d\xb0\xfd\xfc\xea\xe5\x8e\xb0\x32\xa5\xd2\x92\x92\x71\xd5\x91\x2a\x23\x13\xf8\x78\x49\x9b\xc7\x87\x31\xfc\x3a\x0e\x00\x40\x8e\x02\x09\xe5\x11\x72\x80\xf1\x04\xee\x86\x9b\x78\xe7\xf4\x76\xae\x5a\x75\xc1\x58\x28\x46\x57\x69\x6d\xdd\xfc\x4a\x12\xdf\x3e\x5a\x4b\xe8\xa2\xc4\x3c\xf6\x2e\xb6\x30\x85\xae\xc1\xfb\x26\x66\xaa\x9f\x6e\x8e\x79\x76\x5b\x9e\x09\xdc\xaa\x87\x42\xac\x0e\xb8\x53\x92\x8c\x2f\xd3\xda\x98\xcd\xa0\x50\x26\xd5\xee\x68\x4e\x55\x1e\x81\x21\x01\x3b\x0c\x18\x63\x64\x34\x1a\x41\x08\x06\x5e\x23\xeb\x70\xb2\x68\xd8\xa0\xae\x04\x07\x10\xed\x69\x4a\x51\x19\xb2\xbd\xf4\xf4\x1f\x56\x07\x13\x9e\x25\xee\xd8\xb9\xd2\x5f\x9b\xbc\x3a\x95\x24\x62\x55\x07\x58\x2b\x8e\x7a\xa4\xcb\x6f\xd8\xdc\x2f\x72\x72\xfe\x02\x00\x00\xff\xff\xd5\xd5\xf1\x96\x10\x02\x00\x00"

func lockedtokensStakerWithdraw_rewarded_tokens_lockedCdcBytes() ([]byte, error) {
	return bindataRead(
		_lockedtokensStakerWithdraw_rewarded_tokens_lockedCdc,
		"lockedTokens/staker/withdraw_rewarded_tokens_locked.cdc",
	)
}

func lockedtokensStakerWithdraw_rewarded_tokens_lockedCdc() (*asset, error) {
	bytes, err := lockedtokensStakerWithdraw_rewarded_tokens_lockedCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "lockedTokens/staker/withdraw_rewarded_tokens_locked.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x2c, 0xae, 0xac, 0xc7, 0x74, 0x93, 0x11, 0x75, 0xd9, 0x15, 0x9f, 0x5d, 0x7e, 0x5d, 0xa1, 0xd1, 0x7b, 0x82, 0x30, 0xf4, 0xb2, 0xda, 0xf6, 0xce, 0x9f, 0x28, 0xd0, 0xa9, 0xa0, 0xd5, 0x91, 0x1b}}
	return a, nil
}

var _lockedtokensStakerWithdraw_unstaked_tokensCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x91\x4f\x6b\xf2\x40\x10\xc6\xef\xf9\x14\x83\x87\x97\x78\x09\xef\xa1\xf4\x20\xb5\x12\xd4\xfe\x41\x51\x31\x0a\xed\x71\xbb\x99\x98\x25\x71\x27\x4c\x26\x98\x52\xfc\xee\x25\xd9\xa8\xa1\xe0\x5c\x86\x64\x9e\x79\x66\x7e\xb3\xe6\x58\x10\x0b\x2c\x49\x67\x18\xef\x28\x43\x5b\x42\xc2\x74\x84\xff\xf5\x72\x3d\x5d\xcc\x67\xbb\xf5\x62\xbe\x0a\x67\xb3\xed\x3c\x8a\xbc\x4e\x1d\x89\xca\x8c\x3d\x6c\x98\xea\xef\x8b\x3a\xda\x85\x8b\xf7\xd5\xeb\x66\xbb\xfe\xf8\xbc\xc8\x3d\x61\x65\x4b\xa5\xc5\x90\xf5\xd5\x91\x2a\x2b\x23\xd8\xbf\x98\xfa\xf1\x61\x08\x3f\x9e\x07\x00\x90\xa3\x40\x4a\x79\x8c\xbc\xc5\x64\x04\xff\xfa\x9b\x04\x6d\x7a\x6b\xab\x4e\x5d\x30\x16\x8a\xd1\x57\x5a\x3b\xb7\xb0\x92\x34\x74\x1f\x8d\x25\x74\x51\x62\x9e\x04\x57\x5b\x18\x43\xd7\x10\x7c\x11\x33\x9d\x9e\xee\x8e\x79\xf6\x1b\x9e\x11\xdc\xab\x47\x42\xac\x0e\xb8\x51\x92\x0e\xaf\xd3\x9a\x98\x4c\xa0\x50\xd6\x68\x7f\x30\xa5\x2a\x8f\xc1\x92\x80\x1b\x06\x8c\x09\x32\x5a\x8d\x20\x04\x3d\xaf\x81\x73\x38\x3b\x34\xac\x51\x57\x82\x3d\x88\xe6\x34\xa5\xa8\x0c\xd9\x5d\x7a\xfc\x07\xab\x83\x89\x5a\x89\x3f\xf4\x6e\xf4\xb7\xa6\xe0\x64\x24\x8d\x59\x9d\xf6\xb6\xfd\xdb\x21\x5d\x5f\xc3\xe5\xcb\x22\x67\xef\x37\x00\x00\xff\xff\xfa\xe1\x41\xb8\x10\x02\x00\x00"

func lockedtokensStakerWithdraw_unstaked_tokensCdcBytes() ([]byte, error) {
	return bindataRead(
		_lockedtokensStakerWithdraw_unstaked_tokensCdc,
		"lockedTokens/staker/withdraw_unstaked_tokens.cdc",
	)
}

func lockedtokensStakerWithdraw_unstaked_tokensCdc() (*asset, error) {
	bytes, err := lockedtokensStakerWithdraw_unstaked_tokensCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "lockedTokens/staker/withdraw_unstaked_tokens.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x70, 0xec, 0x5f, 0x9a, 0x23, 0xd5, 0x31, 0x36, 0x95, 0x2c, 0xc0, 0x94, 0x2c, 0x22, 0xb0, 0x1e, 0xdd, 0x3, 0x79, 0xff, 0x8e, 0x9c, 0xf3, 0x37, 0xf, 0xb3, 0xc2, 0x8d, 0xb4, 0x76, 0xaa, 0x4f}}
	return a, nil
}

var _lockedtokensUserDeposit_tokensCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x92\x4f\x6f\xb2\x40\x10\xc6\xef\x7c\x8a\x89\x87\x37\x70\x78\xb1\x87\xa6\x07\x62\x6b\xac\x62\xdb\x48\xb4\xf1\x4f\x7b\x5e\x97\x41\x88\xb8\x43\x96\xa1\x98\x34\x7e\xf7\x66\x41\x88\x98\x9a\x74\x2f\x9b\xec\xf3\xcc\x3c\xbf\xd9\x4c\x72\xc8\x48\x33\x4c\x0b\xb5\x4b\xb6\x29\xae\x69\x8f\x0a\x22\x4d\x07\xb8\x3b\x4e\x37\xf3\x97\xb7\xe7\xc0\x5f\x2f\x66\xfe\x7c\x34\x99\x2c\xfd\xd5\xca\x6a\x0a\x52\x2a\xbb\xe6\x60\xf1\xf9\x9b\x31\x20\xb9\xc7\xb0\xb2\xe6\x8d\x37\x58\x8c\x67\xfe\xa4\xe3\xb6\x58\x0b\x95\x0b\xc9\x09\x29\x5b\x1c\xa8\x50\xec\xc1\x66\x9a\x1c\x1f\xee\x1d\xf8\xb6\x2c\x00\x80\x14\x19\x62\x4a\x43\xd4\x4b\x8c\x3c\xf8\x77\xd9\xda\xad\xae\xd7\x4a\x6d\xcd\x5f\xa2\x48\xb9\xf6\xb6\xbc\xee\x87\x79\xac\x1b\x66\x1a\x33\xa1\xd1\x16\x52\xb2\x07\xa3\x82\xe3\x91\x94\x26\xda\x44\xc2\xf9\xe4\x98\x46\x6e\x1b\x0b\x8f\x60\xdc\xee\x96\xb4\xa6\x72\x70\x93\xe1\xc9\x36\xb3\x7a\x70\x4b\x5f\x31\x69\xb1\xc3\x77\xc1\xb1\xd3\x46\x99\x33\x1c\x42\x26\x54\x22\xed\xde\x98\x8a\x34\x04\x45\x0c\x75\x18\x08\xd0\x18\xa1\x46\x25\x11\x98\xe0\xa2\x5b\xcf\xb1\xba\xbc\xcd\xe4\xd7\xb8\x57\xdf\xd0\x50\xf6\xf3\x1a\xa7\x1f\x35\x7a\x25\xff\x99\xcc\x94\x01\x57\xeb\x50\x25\x1b\xd0\x5e\x5d\x7d\xaa\xc9\xf0\x88\xb2\x60\xbc\xf9\xaf\x6e\x88\x19\xe5\x09\x9f\x81\x06\xff\x3b\x63\xb8\x65\xc2\x71\xa8\x45\xd9\xae\x46\x7d\x3b\x4d\xc6\xc9\xfa\x09\x00\x00\xff\xff\xd8\x78\x8a\x49\xc9\x02\x00\x00"

func lockedtokensUserDeposit_tokensCdcBytes() ([]byte, error) {
	return bindataRead(
		_lockedtokensUserDeposit_tokensCdc,
		"lockedTokens/user/deposit_tokens.cdc",
	)
}

func lockedtokensUserDeposit_tokensCdc() (*asset, error) {
	bytes, err := lockedtokensUserDeposit_tokensCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "lockedTokens/user/deposit_tokens.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xa5, 0xa, 0xdf, 0x26, 0x3f, 0xf, 0x6e, 0xbc, 0x78, 0x6f, 0xab, 0xd2, 0xb9, 0x60, 0xc2, 0xab, 0x81, 0x1, 0xf1, 0xa2, 0xae, 0x5a, 0x57, 0x2a, 0xc8, 0xa, 0x5b, 0x36, 0x40, 0x8c, 0xc1, 0x1}}
	return a, nil
}

var _lockedtokensUserGet_locked_account_addressCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x50\xdd\x4a\xc3\x30\x14\xbe\xcf\x53\x7c\xee\x42\x9a\x9b\xe1\xb5\xa8\xa3\xb4\x05\x65\xc5\x8d\x6d\x2f\x90\xa6\xa7\x33\x2c\xcd\x29\x69\x82\xca\xd8\xbb\xcb\xda\xf9\x33\x95\xe5\x26\x21\xdf\xdf\x39\x9f\x69\x3b\xf6\x01\x25\xeb\x1d\xd5\x1b\xde\x91\xeb\xd1\x78\x6e\x71\xf3\x56\x2e\xb2\x79\x91\x6f\x16\xf3\xe2\x39\xcd\xf3\x55\xb1\x5e\x0b\xd1\xc5\x0a\x4d\x74\x68\x95\x71\x89\xd2\x9a\xa3\x0b\xb7\x48\xeb\xda\x53\xdf\xcb\xaf\x17\xf6\x42\x00\x80\xa5\x00\x3b\x58\xa7\x23\xf7\xc9\x35\xbc\xa2\x06\xf7\xd8\x52\x38\xfd\x7d\xfa\xc8\x41\x72\x3c\xd3\x2d\x85\x4c\x75\xaa\x32\xd6\x84\xf7\xbb\xeb\x9f\xd3\x4d\x87\xeb\x91\x6d\x4d\x7e\x7f\x06\x94\xbf\x83\x0e\x0f\xc9\x65\xc2\x32\x56\xd6\xe8\xa5\x0a\x2f\xf2\xea\x3b\xbc\x62\xef\xf9\x35\x91\x98\xcd\xd0\x29\x67\x74\x32\xc9\x38\xda\x1a\x8e\x03\x46\x10\x0a\x9e\x1a\xf2\xe4\x34\x21\x30\xba\xc1\x08\x7f\x02\x26\x72\xec\xc1\x53\x88\xde\xfd\x5b\xc5\x71\xd7\x33\xdd\xa9\xc2\x44\x8a\x83\xf8\x08\x00\x00\xff\xff\x04\x7c\x98\xf2\x9e\x01\x00\x00"

func lockedtokensUserGet_locked_account_addressCdcBytes() ([]byte, error) {
	return bindataRead(
		_lockedtokensUserGet_locked_account_addressCdc,
		"lockedTokens/user/get_locked_account_address.cdc",
	)
}

func lockedtokensUserGet_locked_account_addressCdc() (*asset, error) {
	bytes, err := lockedtokensUserGet_locked_account_addressCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "lockedTokens/user/get_locked_account_address.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xee, 0x8e, 0xe0, 0x90, 0x59, 0xe4, 0xcc, 0x4c, 0xbf, 0xd9, 0x15, 0x9e, 0x43, 0x66, 0xa6, 0xe8, 0x90, 0x10, 0xaf, 0x8e, 0x4a, 0x68, 0xcf, 0xf2, 0x26, 0xc2, 0xb1, 0x2e, 0x9b, 0x51, 0xde, 0x80}}
	return a, nil
}

var _lockedtokensUserGet_locked_account_balanceCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x50\xdd\x4e\xc2\x30\x14\xbe\xef\x53\x7c\x72\x61\xd6\x1b\xe2\x85\xf1\x82\xa8\x04\xd9\x8c\x86\x45\x08\xe0\x03\x74\xdd\x19\x36\x74\x3d\x4b\xd7\x46\x0c\xe1\xdd\x0d\x9b\x46\x51\x63\x6f\x9a\x9c\xef\xef\x9c\xcf\xd4\x0d\xfb\x80\x9c\xf5\x96\xca\x35\x6f\xc9\xb5\xa8\x3c\xd7\xb8\xd8\xe5\xf3\xe9\x2c\x4b\xd7\xf3\x59\xf6\x34\x49\xd3\x65\xb6\x5a\x09\xd1\xc4\x02\x55\x74\xa8\x95\x71\x89\xd2\x9a\xa3\x0b\x23\x4c\xca\xd2\x53\xdb\xca\x11\x9e\xef\xcd\xee\xea\x12\x7b\x21\x00\xc0\x52\x80\xed\x9c\x27\x3d\xf5\xd1\x55\xbc\xa4\x0a\x37\xd8\x50\xf8\x98\x7d\xda\xc8\x4e\x72\x7c\xc3\x0d\x85\xa9\x6a\x54\x61\xac\x09\x6f\xd7\xe7\xdf\x97\x1b\x76\xdf\x03\xdb\x92\xfc\xfe\x04\xc8\x7f\x06\x1d\x6e\x93\xff\x09\x8b\x58\x58\xa3\x17\x2a\xbc\xc8\xb3\xaf\xf0\x82\xbd\xe7\xd7\x44\x62\x3c\x46\xa3\x9c\xd1\xc9\x60\xca\xd1\x96\x70\x1c\xd0\x83\x50\xf0\x54\x91\x27\xa7\x09\x81\xd1\x74\x46\xf8\x15\x30\x90\x7d\x0f\x9e\x42\xf4\xee\xcf\x2a\x8e\xb7\x9e\xe8\xee\x94\x55\x4e\x53\x22\xc5\x41\xbc\x07\x00\x00\xff\xff\xb0\x94\xe9\x29\x9d\x01\x00\x00"

func lockedtokensUserGet_locked_account_balanceCdcBytes() ([]byte, error) {
	return bindataRead(
		_lockedtokensUserGet_locked_account_balanceCdc,
		"lockedTokens/user/get_locked_account_balance.cdc",
	)
}

func lockedtokensUserGet_locked_account_balanceCdc() (*asset, error) {
	bytes, err := lockedtokensUserGet_locked_account_balanceCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "lockedTokens/user/get_locked_account_balance.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x16, 0x93, 0x7d, 0x56, 0x62, 0xda, 0x99, 0x30, 0xdb, 0xc7, 0x51, 0x34, 0x2b, 0xd0, 0x79, 0xba, 0x1e, 0xde, 0x65, 0x36, 0x6d, 0x11, 0xe8, 0xb1, 0xcf, 0x1d, 0x6b, 0x87, 0x4, 0x71, 0xcd, 0xb9}}
	return a, nil
}

var _lockedtokensUserGet_unlock_limitCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x50\xcd\x6a\xf3\x30\x10\xbc\xeb\x29\xe6\xcb\xe1\xc3\xba\x84\x1e\x4a\x0f\xa1\x6d\x08\xb1\x4b\x4b\x4c\x13\xf2\xf3\x00\xb2\xbc\x4e\x45\x64\xad\x91\x25\x9a\x12\xf2\xee\xc5\x76\x4b\x7f\xe9\x5e\x16\x76\x66\x67\x76\xc7\xd4\x0d\xfb\x80\x9c\xf5\x81\xca\x2d\x1f\xc8\xb5\xa8\x3c\xd7\xb8\x38\xe6\xcb\xf9\x22\x4b\xb7\xcb\x45\xf6\x38\x4b\xd3\x75\xb6\xd9\x08\xd1\xc4\x02\x55\x74\xa8\x95\x71\x89\xd2\x9a\xa3\x0b\x13\xcc\xca\xd2\x53\xdb\xca\x09\x76\x77\xe6\x78\x75\x89\x93\x10\x00\x60\x29\xc0\xf6\xca\xb3\x81\xfa\xe0\x2a\x5e\x53\x85\x1b\xec\x29\xbc\xcd\xde\x65\x64\xbf\xd2\xd5\x78\x4f\x61\xae\x1a\x55\x18\x6b\xc2\xcb\xf5\xff\xcf\xc7\x8d\xfb\x76\xcf\xb6\x24\x7f\xfa\x02\xe4\xdf\x8d\xce\xb7\xc9\xdf\x84\x55\x2c\xac\xd1\x2b\x15\x9e\xe4\xbf\x0f\xf3\x82\xbd\xe7\xe7\x44\x62\x3a\x45\xa3\x9c\xd1\xc9\x68\xce\xd1\x96\x70\x1c\x30\x80\x50\xf0\x54\x91\x27\xa7\x09\x81\xd1\xf4\x42\xf8\x61\x30\x92\x43\x0e\x9e\x42\xf4\xee\xd7\x28\xba\x5f\x77\xae\x43\x72\x53\x9b\x90\x48\x71\x16\xaf\x01\x00\x00\xff\xff\xbc\xc9\x4e\x58\x94\x01\x00\x00"

func lockedtokensUserGet_unlock_limitCdcBytes() ([]byte, error) {
	return bindataRead(
		_lockedtokensUserGet_unlock_limitCdc,
		"lockedTokens/user/get_unlock_limit.cdc",
	)
}

func lockedtokensUserGet_unlock_limitCdc() (*asset, error) {
	bytes, err := lockedtokensUserGet_unlock_limitCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "lockedTokens/user/get_unlock_limit.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xfb, 0xe5, 0xea, 0x7, 0xe, 0x83, 0x70, 0xc8, 0xff, 0xec, 0xd5, 0xab, 0x53, 0x8e, 0x82, 0xb6, 0xba, 0x72, 0xd7, 0x9f, 0xee, 0x79, 0x24, 0xbc, 0xbe, 0x20, 0x2a, 0x21, 0x7c, 0x96, 0x24, 0x20}}
	return a, nil
}

var _lockedtokensUserWithdraw_tokensCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x92\x4f\x6f\xb2\x40\x10\xc6\xef\x7c\x8a\x89\x87\x37\x70\x78\xb1\x87\xa6\x07\x62\x6b\xac\x62\xdb\x48\xb4\xf1\x4f\x7b\x5e\x97\x41\x88\xb8\x43\x96\xa1\x98\x34\x7e\xf7\x66\x41\x88\x98\x9a\x74\x2f\x9b\xec\xf3\xcc\x3c\xbf\x9d\x4c\x72\xc8\x48\x33\x4c\x0b\xb5\x4b\xb6\x29\xae\x69\x8f\x0a\x22\x4d\x07\xb8\x3b\x4e\x37\xf3\x97\xb7\xe7\xc0\x5f\x2f\x66\xfe\x7c\x34\x99\x2c\xfd\xd5\xca\x6a\x0a\x52\x2a\xbb\xe6\x60\xf1\xf9\x9b\x31\x20\xb9\xc7\xb0\xb2\xe6\x8d\x37\x58\x8c\x67\xfe\xa4\xe3\xb6\x58\x0b\x95\x0b\xc9\x09\x29\x5b\x1c\xa8\x50\xec\xc1\x66\x9a\x1c\x1f\xee\x1d\xf8\xb6\x2c\x00\x80\x14\x19\x62\x4a\x43\xd4\x4b\x8c\x3c\xf8\x77\xd9\xda\xad\xae\xd7\x4a\x6d\xcd\x5f\xa2\x48\xb9\xf6\xb6\xbc\xee\x87\x79\xac\x1b\x66\x1a\x33\xa1\xd1\x16\x52\xb2\x07\xa3\x82\xe3\x91\x94\x26\xda\x44\xc2\xf9\xe4\x98\x46\x6e\x1b\x0b\x8f\x60\xdc\xee\x96\xb4\xa6\x72\x70\x93\xe1\xc9\x36\x7f\xf5\xe0\x96\xbe\x62\xd2\x62\x87\xef\x82\x63\xa7\x8d\x32\x67\x38\x84\x4c\xa8\x44\xda\xbd\x31\x15\x69\x08\x8a\x18\xea\x30\x10\xa0\x31\x42\x8d\x4a\x22\x30\xc1\x45\xb7\x9e\x63\x75\x79\x9b\x9f\x5f\xe3\x5e\x8d\xa1\xa1\xec\xe7\x35\x4e\x3f\x6a\xf4\x4a\xfe\x33\x99\x29\x03\xae\xd6\xa1\x4a\x36\xa0\xbd\xba\xfa\x54\x93\xe1\x11\x65\xc1\x78\x3d\xd7\x86\xd3\x0d\x31\xa3\x3c\xe1\x33\xcf\xe0\x7f\x77\xea\x6e\x99\x70\x1c\x6a\x51\xb6\xab\x51\xdf\x4e\x93\x71\xb2\x7e\x02\x00\x00\xff\xff\x0b\xcc\x3c\x2f\xc9\x02\x00\x00"

func lockedtokensUserWithdraw_tokensCdcBytes() ([]byte, error) {
	return bindataRead(
		_lockedtokensUserWithdraw_tokensCdc,
		"lockedTokens/user/withdraw_tokens.cdc",
	)
}

func lockedtokensUserWithdraw_tokensCdc() (*asset, error) {
	bytes, err := lockedtokensUserWithdraw_tokensCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "lockedTokens/user/withdraw_tokens.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x6, 0x9e, 0xfa, 0x63, 0x21, 0x9d, 0x83, 0x7b, 0xab, 0x3e, 0x34, 0x39, 0x94, 0xe9, 0x36, 0xc, 0xbd, 0x5b, 0x16, 0x4, 0xae, 0xf1, 0x49, 0x8f, 0x56, 0xa7, 0xec, 0x6b, 0xcf, 0x6c, 0xb8, 0x32}}
	return a, nil
}

var _stakingproxyAdd_node_infoCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x91\x41\x6b\xc2\x40\x10\x85\xef\xfb\x2b\x06\x0f\x25\x82\x48\x8f\x25\xd4\x4a\xd0\xd2\x8a\xa0\xc1\xb4\xd0\x1e\xd7\xec\xa8\x4b\xe3\xce\x32\x19\x51\x29\xfe\xf7\xb2\x46\x4d\x24\xdd\x43\xc8\xbe\xcc\x64\xbe\xf7\xc6\x6e\x3d\xb1\x40\x26\xfa\xc7\xba\x75\xca\x74\x38\xc2\x8a\x69\x0b\x8f\x87\xec\x23\x99\x4e\x66\x6f\xe9\x62\xfe\xf5\x9d\x8c\xc7\x8b\xd7\x2c\x53\x4a\x58\xbb\x52\xe7\x62\xc9\x45\xd6\xc4\x90\x09\x5b\xb7\xee\x01\x53\x81\x31\x7c\x4e\x9c\x3c\xf5\xc0\xa1\xec\x89\xc3\x0f\x13\x63\x18\xcb\xb2\xae\xab\x3f\x4d\xf1\x58\xcb\x65\x35\xbf\xa1\x75\xe1\x57\x29\x00\x00\xcf\xe8\x35\x63\xa4\xf3\x9c\x76\x4e\x62\x48\x76\xb2\x49\xaa\x4b\x28\x82\xcb\x29\x50\xc0\x07\xfe\x77\x2a\x0c\x32\x0c\xe0\xd2\xd1\x5f\x12\x33\xed\x9f\x1f\x9a\x26\xfb\x33\x32\x18\x04\xe4\xb4\x6e\x7a\x89\x82\xf7\x18\x5a\x95\x73\x8f\xac\x85\x78\xa4\xbd\x5e\xda\xc2\xca\x31\x13\x62\xbd\xc6\x54\xcb\xa6\x7b\x63\x08\x67\x38\x04\xaf\x9d\xcd\xa3\xce\x88\x76\x85\x01\x47\x02\x15\x01\x30\xae\x90\xd1\xe5\x08\x42\x57\xcb\x15\x33\x6c\xce\xf3\x3b\x5d\x75\xe7\xc7\x91\xc1\x89\x5b\x11\x0c\xda\x48\x41\x3f\xaf\xc0\x9a\x6b\xfc\xe1\xf9\x6f\xfa\x2d\xa9\xb5\x88\xbb\xeb\xfd\x3e\xea\xf7\x06\x5d\x23\xe9\xbe\x36\xe6\x06\x74\x25\x8e\x6f\xec\x55\x3a\x27\x75\x52\x7f\x01\x00\x00\xff\xff\x9f\x31\xb9\x98\x6c\x02\x00\x00"

func stakingproxyAdd_node_infoCdcBytes() ([]byte, error) {
	return bindataRead(
		_stakingproxyAdd_node_infoCdc,
		"stakingProxy/add_node_info.cdc",
	)
}

func stakingproxyAdd_node_infoCdc() (*asset, error) {
	bytes, err := stakingproxyAdd_node_infoCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "stakingProxy/add_node_info.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x8a, 0x3, 0x35, 0x66, 0xd5, 0x63, 0xa, 0xbc, 0xa6, 0x8, 0xaf, 0x9b, 0xbd, 0x6e, 0x41, 0x77, 0xd8, 0x3d, 0xbe, 0x6e, 0x17, 0x11, 0x7b, 0x98, 0x7, 0x9, 0xee, 0xf6, 0x9b, 0x5b, 0x87, 0x52}}
	return a, nil
}

var _stakingproxyGet_node_infoCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x91\x41\x6b\xf2\x40\x10\x86\xef\xfb\x2b\x46\x0f\x1f\x09\x7c\x48\xcf\x52\x2b\x41\x4b\x2b\x05\x0d\xa6\x87\xf6\xb8\x49\x26\xe9\xd2\xb8\xb3\x8c\xb3\x54\x11\xff\x7b\x49\x56\x4d\xab\x87\xe6\x12\x66\x67\xde\x67\xde\x99\x31\x1b\x47\x2c\x90\x89\xfe\x34\xb6\x4e\x99\x76\x7b\xa8\x98\x36\x70\xb7\xcb\x5e\x93\x97\xc5\xf2\x29\x5d\xaf\xde\xde\x93\xf9\x7c\xfd\x98\x65\x4a\x39\x9f\x43\xe5\x2d\x6c\xb4\xb1\x91\x2e\x0a\xf2\x56\xc6\x90\x94\x25\xe3\x76\xfb\x1f\x2c\x95\xb8\x98\x8f\x21\x13\x36\xb6\x8e\xc7\xbf\xc0\xa3\x65\x9b\xb5\x15\xc1\x41\x29\x00\x80\x06\xa5\x53\x24\x81\x03\x13\xa8\x51\x4e\xc1\x19\x1e\xf7\xa5\xae\x85\xcc\xb4\xd3\xb9\x69\x8c\xec\x61\xf2\x53\x3c\xaa\x51\xfa\x5c\xa7\x69\xbf\xfb\x7f\x37\x0e\xda\x07\xe4\x2e\x7e\xa6\xa6\x44\x3e\xfc\x5d\x92\xfa\xbc\x31\xc5\xf1\xe1\xc2\x8d\x6e\x34\x2b\x87\xac\x85\xb8\x37\x11\x44\xa9\x96\x8f\x78\x70\x35\xc5\x1a\x2b\x98\x5c\x0f\x34\xca\x89\x99\xbe\xa2\xf8\xd2\x65\x3a\x05\xa7\xad\x29\xa2\xe1\x8c\x7c\x53\x82\x25\x81\x50\x04\xae\x83\x03\x63\x85\x8c\xb6\x40\x10\x82\x6d\xf0\x14\xb8\xc3\xd3\xe6\x18\xc5\xb3\xbd\xb4\x6d\xf7\x74\xbe\x43\x74\x3e\x57\xf8\xc7\x03\x75\x54\xdf\x01\x00\x00\xff\xff\x95\x4c\xfc\xfd\x11\x02\x00\x00"

func stakingproxyGet_node_infoCdcBytes() ([]byte, error) {
	return bindataRead(
		_stakingproxyGet_node_infoCdc,
		"stakingProxy/get_node_info.cdc",
	)
}

func stakingproxyGet_node_infoCdc() (*asset, error) {
	bytes, err := stakingproxyGet_node_infoCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "stakingProxy/get_node_info.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xfe, 0x75, 0x97, 0x1b, 0xbd, 0xe4, 0x2c, 0xad, 0x31, 0x3f, 0xf3, 0x5a, 0xc4, 0x8b, 0x35, 0x7a, 0xf6, 0x1f, 0x6d, 0x63, 0x37, 0xd0, 0xeb, 0xb2, 0x7, 0x62, 0xb0, 0xbd, 0x2d, 0x9, 0x56, 0xaf}}
	return a, nil
}

var _stakingproxyRegister_nodeCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x53\x41\x8f\xda\x3c\x10\xbd\xe7\x57\xcc\xc7\x61\xbf\x44\x42\x51\x0f\x55\x0f\xd1\xb2\x2b\x04\xb4\x5d\xb1\x02\x44\xa8\xd4\x1e\x8d\x3d\x01\x8b\xe0\x89\x9c\x89\xca\x6a\xc5\x7f\xaf\x1c\x27\x21\xb0\xdd\xb6\xbe\x38\xce\xcc\xbc\x79\xef\x8d\xad\x8f\x05\x59\x86\x67\x92\x07\x54\x1b\x3a\xa0\x29\x21\xb3\x74\x84\x0f\xa7\xe7\xe5\x64\x3e\x9b\x6e\x96\xf3\xd9\x62\x3c\x9d\xae\x67\x69\x1a\x34\xd9\x29\x8b\x83\x36\xbb\x95\xa5\xd3\x4b\x9b\x9d\x6e\xc6\xf3\xa7\xc5\x97\xd5\x7a\xf9\xfd\x47\x9b\x1e\xb0\x15\xa6\x14\x92\x35\x99\x50\x28\x65\xb1\x2c\x13\x18\xfb\x8f\x21\x68\x95\x40\xca\x56\x9b\xdd\x10\xc4\x91\x2a\xc3\x09\x7c\xfb\xac\x4f\x9f\x3e\x46\xf0\x1a\x04\x00\x00\x39\x32\xec\x29\x57\x68\xd7\x98\x25\x70\xd7\xe7\x19\xd7\xdb\xd7\x3a\xea\xb3\x0b\x8b\x85\xb0\x18\x0a\x29\x3d\xda\xb8\xe2\xfd\xd8\x1f\x1c\x24\x34\xab\xc4\x3c\x8b\x3b\x58\x18\x41\x53\x10\x6f\xc9\x5a\xfa\x79\xff\x6e\x9b\x87\xd0\xa9\x4d\xe0\xbd\x78\xca\x64\xc5\x0e\x57\x82\xf7\x51\xd7\xcd\xad\xc7\x47\x28\x84\xd1\x32\x1c\x4c\xa8\xca\x15\x18\x62\xf0\xcd\xc0\x62\x86\x16\x8d\x44\x60\x82\x1e\xd6\xc0\x23\x9c\xbd\x34\x3c\xa1\xac\x18\x7b\x22\x9c\x35\x86\x14\x2e\x0b\xb4\x82\xa9\x51\xb2\x43\x6e\x04\xb7\x86\x47\xf1\x0e\x79\x22\x0a\xb1\xd5\xb9\xe6\x97\x2b\x5a\xf7\x77\xfd\x51\xc6\x0b\x52\xe8\x7e\xa0\xad\xcf\x9e\xc7\xeb\xdf\x53\x56\xd5\x36\xd7\xf2\xfc\x70\x85\x1d\xbe\xa9\x6b\x99\x5e\xc8\xf8\xc2\xda\xae\xff\x1a\xf3\xc3\x08\xfe\xd5\x39\xa7\x1e\xa8\x01\x85\xa2\xc6\x02\xd9\x81\x0f\xa2\xe0\x8d\x59\x4f\x26\x23\x18\xdd\xfa\xe6\x1c\x5a\x34\xd1\xb0\x4e\x9b\x26\xa0\xd5\x1f\x47\x68\xfe\x67\x67\x36\x68\x87\x98\x91\xf5\xf0\xd3\xd1\x20\x96\x64\xa4\xe0\x50\xab\xa8\x47\xe0\xfa\xca\xc5\xd2\xa2\x60\xbc\x98\x19\xb6\xe4\x92\x8e\xe6\xe5\x4d\xf8\xfd\x37\x6a\x7a\x83\x80\xd1\x6d\x0b\x6f\x52\x03\xdf\x2b\xbe\xd5\x2e\x94\xea\x4f\xaa\xd3\xdf\xf2\x88\xb5\x1a\x42\xe1\x42\xc9\x6d\xd3\xf6\x86\x9e\x83\x5f\x01\x00\x00\xff\xff\xa1\xc8\xc2\x7d\x47\x04\x00\x00"

func stakingproxyRegister_nodeCdcBytes() ([]byte, error) {
	return bindataRead(
		_stakingproxyRegister_nodeCdc,
		"stakingProxy/register_node.cdc",
	)
}

func stakingproxyRegister_nodeCdc() (*asset, error) {
	bytes, err := stakingproxyRegister_nodeCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "stakingProxy/register_node.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x6a, 0xa8, 0x7a, 0xb4, 0x24, 0xcc, 0x6b, 0x8d, 0x67, 0xfe, 0xdd, 0x4c, 0xad, 0x2d, 0x6b, 0x86, 0x24, 0x5c, 0xfd, 0x26, 0x3e, 0x97, 0xdd, 0xeb, 0xd3, 0xd7, 0x4b, 0x36, 0xc8, 0xb5, 0xe2, 0x5c}}
	return a, nil
}

var _stakingproxyRemove_node_infoCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\x8f\x51\x4b\xc3\x40\x0c\xc7\xdf\xef\x53\xe4\x49\xda\x97\xe2\x73\x51\xe1\xb0\xa2\x45\xd8\x8e\x9d\x0f\xfa\x98\xb5\x59\x77\xd8\x5e\x8e\x98\xe9\x86\xec\xbb\xcb\xb9\x31\x0b\xe6\x25\x24\xfc\x7f\xe4\x97\x30\x25\x16\x05\xaf\xf8\x1e\xe2\xe0\x84\xf7\x07\xd8\x08\x4f\x70\xbd\xf7\x2f\xf6\xb9\x5d\x3c\xba\xd5\xf2\xf5\xcd\x36\xcd\xea\xc1\x7b\x63\x54\x30\x7e\x60\xa7\x81\x63\x11\xb9\xa7\xb6\xa9\xc1\xab\x84\x38\x94\xf0\x6d\x0c\x00\x40\x12\x4a\x28\x54\x60\xd7\xf1\x2e\x6a\x0d\x76\xa7\x5b\x7b\x1a\x72\x08\xce\x35\x92\x42\xca\x07\x9f\x78\xec\x49\xe0\x16\xce\x44\xb5\x66\x11\xfe\xba\xb9\x9a\x5b\x55\x0b\xee\x29\x2f\x48\xdc\x1f\x74\x57\x64\xd9\x1a\xfe\x25\x97\x89\x04\x95\xe5\x1e\x13\xae\xc3\x18\xf4\xe0\x95\x05\x07\x72\xa8\xdb\xd2\x5c\x24\x66\x02\x95\xd0\xc4\x9f\x94\xe9\x36\x6e\xf8\xf2\xde\xa9\x97\xbf\xc8\xd1\x1c\xcd\x4f\x00\x00\x00\xff\xff\x64\x64\x88\xd5\x33\x01\x00\x00"

func stakingproxyRemove_node_infoCdcBytes() ([]byte, error) {
	return bindataRead(
		_stakingproxyRemove_node_infoCdc,
		"stakingProxy/remove_node_info.cdc",
	)
}

func stakingproxyRemove_node_infoCdc() (*asset, error) {
	bytes, err := stakingproxyRemove_node_infoCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "stakingProxy/remove_node_info.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xd0, 0x54, 0xc1, 0x59, 0xe, 0x14, 0xb4, 0xd3, 0xf1, 0xd2, 0xef, 0x53, 0xff, 0x63, 0xb9, 0x6d, 0x1c, 0x93, 0xfc, 0x57, 0x6, 0xae, 0xa4, 0x12, 0x64, 0x2f, 0xc5, 0x89, 0x83, 0xfe, 0x93, 0x46}}
	return a, nil
}

var _stakingproxyRemove_staking_proxyCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\x8f\xc1\x4a\xc3\x40\x10\x86\xef\xfb\x14\x73\x92\xe4\x12\x3c\x07\x15\x16\x23\x5a\x84\x76\xe9\x7a\xd0\xe3\x34\x19\x93\xc5\x64\x67\x19\xa7\xda\x22\x7d\x77\x59\x5b\x6a\xa0\x7b\x59\x66\xf8\xbf\x99\x6f\xc2\x94\x58\x14\xbc\xe2\x47\x88\xbd\x13\xde\xed\xe1\x5d\x78\x82\xeb\x9d\x7f\xb1\xcf\x8b\xe5\xa3\x5b\xaf\x5e\xdf\x6c\xd3\xac\x1f\xbc\x37\x46\x05\xe3\x27\xb6\x1a\x38\x16\x91\x3b\x5a\x34\x35\x78\x95\x10\xfb\x12\x7e\x8c\x01\x00\x48\x42\x09\x85\x0a\x6c\x5b\xde\x46\xad\xc1\x6e\x75\xb0\xc7\x22\x87\xe0\xf4\x46\x52\x48\x79\xe1\x13\x8f\x1d\x09\xdc\xc2\x89\xa8\x36\x2c\xc2\xdf\x37\x57\x73\xab\x6a\xc9\x1d\xe5\x06\x89\xfb\x87\xee\x8a\x2c\x5b\x43\xc2\x8b\xec\x2a\x91\xa0\xb2\xdc\x63\xc2\x4d\x18\x83\xee\xbd\xb2\x60\x4f\x0e\x75\xd0\xa1\x34\x67\x91\x99\x44\x25\x34\xf1\x17\xcd\x87\x9d\xcf\x3c\xfe\xe5\x1f\x76\x30\x07\xf3\x1b\x00\x00\xff\xff\x4f\x9f\x84\x5d\x3b\x01\x00\x00"

func stakingproxyRemove_staking_proxyCdcBytes() ([]byte, error) {
	return bindataRead(
		_stakingproxyRemove_staking_proxyCdc,
		"stakingProxy/remove_staking_proxy.cdc",
	)
}

func stakingproxyRemove_staking_proxyCdc() (*asset, error) {
	bytes, err := stakingproxyRemove_staking_proxyCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "stakingProxy/remove_staking_proxy.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xcd, 0xb7, 0xb8, 0xff, 0xfc, 0x1e, 0x9f, 0xd3, 0x1a, 0x76, 0xac, 0x78, 0xe0, 0x9c, 0xf6, 0x9e, 0xd9, 0xed, 0x85, 0xd4, 0x2b, 0xa4, 0x7e, 0xed, 0xc5, 0xbf, 0x38, 0x7c, 0x76, 0xe6, 0x74, 0x14}}
	return a, nil
}

var _stakingproxyRequest_unstakingCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\x90\x4d\x6b\xf2\x40\x10\xc7\xef\xfb\x29\xe6\xf1\xf0\x90\x40\x91\x1e\x4a\x0f\x52\x2b\x41\xfb\x22\x05\x0d\xa6\x42\x7b\x1c\x93\x51\x97\xc6\x9d\xed\x64\x42\x95\xe2\x77\x2f\xe9\xa6\x9a\xd2\xb9\x0c\x3b\x3b\x2f\xbf\xff\xdf\xee\x3c\x8b\x42\xa6\xf8\x66\xdd\x26\x15\xde\x1f\x60\x2d\xbc\x83\xcb\x7d\xf6\x9c\x3c\x4d\x67\x0f\xe9\x62\xfe\xf2\x9a\x4c\x26\x8b\xbb\x2c\x33\x46\x05\x5d\x85\xb9\x5a\x76\x91\xe3\x82\xa6\x93\x01\x64\x2a\xd6\x6d\x2e\x00\x77\x5c\x3b\x1d\xc0\xf2\xde\xee\xaf\xaf\x62\xf8\x34\x06\x00\xc0\x0b\x79\x14\x8a\x30\xcf\xc3\x7f\x52\xeb\x36\x09\x8f\xa6\x09\xda\x28\x49\xc1\x37\x00\x8f\x5c\x16\x24\x30\x84\x76\xa2\xbf\x62\x11\xfe\xb8\xf9\xdf\xa5\xec\xcf\xb8\xa0\xa6\x40\x92\x9e\x87\x6e\xa3\x06\x7e\x00\x7f\x3a\xe7\x9e\x04\x95\x65\x8c\x1e\x57\xb6\xb4\x7a\xc8\x94\x05\x37\x94\xa2\x6e\xe3\x13\x43\x13\xa3\x11\x78\x74\x36\x8f\x7a\x63\xae\xcb\x02\x1c\x2b\x04\x02\x10\x5a\x93\x90\xcb\x09\x94\xa1\x0a\x37\x02\x33\x6c\xbf\xef\xf7\x62\xf3\x4b\x4f\xd5\xf5\x75\xd8\x95\xd7\x8a\xea\x82\x9e\x0c\x0d\x39\xfe\x77\xde\xd5\xdd\xd3\x17\x7a\xaf\xa9\xd2\xa5\x6b\xab\xd1\x8f\xf1\x21\x07\x35\x47\x73\x34\x5f\x01\x00\x00\xff\xff\x09\x50\xee\xd5\xdd\x01\x00\x00"

func stakingproxyRequest_unstakingCdcBytes() ([]byte, error) {
	return bindataRead(
		_stakingproxyRequest_unstakingCdc,
		"stakingProxy/request_unstaking.cdc",
	)
}

func stakingproxyRequest_unstakingCdc() (*asset, error) {
	bytes, err := stakingproxyRequest_unstakingCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "stakingProxy/request_unstaking.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x22, 0x4, 0xb5, 0x6d, 0xd4, 0x43, 0x6a, 0x62, 0x66, 0x8f, 0xf8, 0x22, 0x3c, 0x0, 0xa1, 0xef, 0x32, 0x6c, 0x7a, 0x1, 0xa5, 0x6b, 0x83, 0x30, 0xa, 0x8d, 0x29, 0x5a, 0xdd, 0xda, 0x77, 0x79}}
	return a, nil
}

var _stakingproxySetup_node_accountCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x8f\x41\x4b\x03\x31\x10\x85\xef\xf9\x15\x73\x92\x2d\xb4\xc5\x73\x29\xc2\x62\x45\x45\x68\x43\xe3\x41\x8f\xd3\x74\xdc\x86\xa6\x99\x30\x9d\x95\x96\xb2\xff\x5d\x82\xa2\x5b\x44\xd4\x1c\xc3\x37\xdf\x7b\x2f\xec\x32\x8b\x82\x53\xdc\x86\xd4\x58\xe1\xc3\x11\x5e\x84\x77\x70\x79\x70\x8f\xf5\xc3\xfd\xfc\xd6\x2e\x17\x4f\xcf\xf5\x6c\xb6\xbc\x71\xce\x18\x15\x4c\x7b\xf4\x1a\x38\x55\x03\x38\x19\x03\x00\x90\x85\x32\x0a\x55\x89\xd7\xb4\xc8\x24\xa8\x2c\x13\xa8\x5b\xdd\xd4\xde\x73\x9b\xb4\x90\xf0\xf1\x22\x29\xe4\x92\x73\xc7\x71\x4d\x02\xd3\xd1\x59\xfa\xd8\x0b\xa1\x92\xfd\x22\xaa\x81\xf9\x3c\xee\x27\x8c\xf7\xf8\x4a\xd5\x74\xd4\x93\x0d\x41\x79\x72\xae\x9b\xf7\x2e\xae\x31\xe3\x2a\xc4\xa0\x47\xa7\x2c\xd8\x90\x45\xdd\xfc\x64\x8f\x21\x6d\xa7\x17\xdf\x5c\xe5\x83\xa4\x57\xef\xf4\x3b\x62\xdb\x55\x0c\xbe\xbb\xaa\xfe\xd0\xec\x9d\x2d\xc5\x86\xa0\x28\x0d\xe9\xff\x07\x95\x2d\x9d\xe9\xcc\x5b\x00\x00\x00\xff\xff\xb7\x2c\xca\x00\xdd\x01\x00\x00"

func stakingproxySetup_node_accountCdcBytes() ([]byte, error) {
	return bindataRead(
		_stakingproxySetup_node_accountCdc,
		"stakingProxy/setup_node_account.cdc",
	)
}

func stakingproxySetup_node_accountCdc() (*asset, error) {
	bytes, err := stakingproxySetup_node_accountCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "stakingProxy/setup_node_account.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x50, 0xd2, 0xce, 0x9b, 0xe9, 0x83, 0xc8, 0x74, 0xd0, 0xeb, 0x63, 0x8d, 0xf6, 0x39, 0x99, 0x9a, 0x8, 0x5a, 0xfb, 0x9e, 0x57, 0xfb, 0xf0, 0x70, 0xd1, 0x10, 0xbb, 0xef, 0x88, 0x4c, 0xc2, 0x39}}
	return a, nil
}

var _stakingproxyStake_new_tokensCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\x90\x4d\x6b\xc2\x40\x10\x86\xef\xfb\x2b\xa6\x1e\x4a\x02\x45\x7a\x28\x3d\x48\xad\x04\xed\x87\x14\x34\x18\x0b\xed\x71\x4c\x46\x5d\x8c\x3b\xcb\x64\x44\xa5\xf8\xdf\x4b\xba\xa9\xa6\x74\x2e\xc3\xec\xce\xc7\xf3\xbe\x76\xeb\x59\x14\x32\xc5\x8d\x75\xab\x54\xf8\x70\x84\xa5\xf0\x16\x6e\x0f\xd9\x3c\x79\x1b\x4f\x5e\xd2\xd9\xf4\xe3\x33\x19\x8d\x66\x4f\x59\x66\x8c\x0a\xba\x0a\x73\xb5\xec\x22\xc7\x05\x8d\x47\x3d\xc8\x54\xac\x5b\xdd\x00\x6e\x79\xe7\xb4\x07\xef\xcf\xf6\x70\x7f\x17\xc3\x97\x31\x00\x00\x5e\xc8\xa3\x50\x84\x79\x1e\xfe\x93\x9d\xae\x93\x50\xd4\x4d\xd0\x44\x49\x0a\xbe\x06\x78\xe5\xb2\x20\x81\x3e\x34\x13\xdd\x05\x8b\xf0\xfe\xe1\xba\x4d\xd9\x9d\x70\x41\xf5\x03\x49\x7a\x19\x7a\x8c\x6a\xf8\x1e\xfc\xeb\x9c\x7a\x12\x54\x96\x21\x7a\x5c\xd8\xd2\xea\x31\x53\x16\x5c\x51\x8a\xba\x8e\xcf\x0c\x75\x0c\x06\xe0\xd1\xd9\x3c\xea\x0c\x79\x57\x16\xe0\x58\x21\x10\x80\xd0\x92\x84\x5c\x4e\xa0\x0c\x55\xb8\x11\x98\x61\xfd\x73\xbf\x13\x9b\x3f\x7a\xaa\xb6\xaf\xfd\xb6\xbc\x46\x54\x1b\xf4\x6c\x68\xc8\xf1\xd5\x65\x57\x7b\x4f\xb7\x2e\x68\x42\xfb\x39\x6f\xc8\x55\xd1\xaf\xed\x21\x07\x2d\x27\x73\x32\xdf\x01\x00\x00\xff\xff\x05\x52\x1c\xe7\xdb\x01\x00\x00"

func stakingproxyStake_new_tokensCdcBytes() ([]byte, error) {
	return bindataRead(
		_stakingproxyStake_new_tokensCdc,
		"stakingProxy/stake_new_tokens.cdc",
	)
}

func stakingproxyStake_new_tokensCdc() (*asset, error) {
	bytes, err := stakingproxyStake_new_tokensCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "stakingProxy/stake_new_tokens.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xd8, 0xf5, 0xa3, 0x7d, 0x2b, 0xd5, 0x34, 0x68, 0x9, 0xf5, 0x8c, 0xe, 0x3c, 0x2a, 0x21, 0xf4, 0x5c, 0x52, 0x32, 0x7, 0x34, 0x9e, 0xa7, 0x2d, 0x55, 0x9, 0x63, 0x5d, 0x22, 0xc2, 0x25, 0xd0}}
	return a, nil
}

var _stakingproxyStake_unstaked_tokensCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\x90\x4d\x6b\xf2\x40\x10\xc7\xef\xfb\x29\xe6\xf1\xf0\x90\x40\x91\x1e\x4a\x0f\x52\x2b\x41\xfb\x22\x05\x0d\x46\xa1\x3d\x8e\xc9\xa8\x8b\x71\x67\x99\x8c\x54\x29\x7e\xf7\x12\x37\xd5\x94\xce\x65\x98\xdd\x79\xf9\xfd\xff\x76\xe7\x59\x14\x32\xc5\xad\x75\xeb\x54\xf8\x70\x84\x95\xf0\x0e\x6e\x0f\xd9\x3c\x79\x1b\x4f\x5e\xd2\xd9\xf4\xfd\x23\x19\x8d\x66\x4f\x59\x66\x8c\x0a\xba\x0a\x73\xb5\xec\x22\xc7\x05\x8d\x47\x3d\xc8\x54\xac\x5b\xdf\x00\xee\x78\xef\xb4\x07\x8b\x67\x7b\xb8\xbf\x8b\xe1\xcb\x18\x00\x00\x2f\xe4\x51\x28\xc2\x3c\x0f\xff\xc9\x5e\x37\x49\x28\xea\x26\x68\xa2\x24\x05\x5f\x03\xbc\x72\x59\x90\x40\x1f\x9a\x89\xee\x92\x45\xf8\xf3\xe1\x7f\x9b\xb2\x3b\xe1\x82\xea\x07\x92\xf4\x3a\xf4\x18\xd5\xf0\x3d\xf8\xd3\x39\xf5\x24\xa8\x2c\x43\xf4\xb8\xb4\xa5\xd5\x63\xa6\x2c\xb8\xa6\x14\x75\x13\x5f\x18\xea\x18\x0c\xc0\xa3\xb3\x79\xd4\x19\xf2\xbe\x2c\xc0\xb1\x42\x20\x00\xa1\x15\x09\xb9\x9c\x40\x19\xaa\x70\x23\x30\xc3\xe6\x7c\xbf\x13\x9b\x5f\x7a\xaa\xb6\xaf\xfd\xb6\xbc\x46\x54\x1b\xf4\x62\x68\xc8\xf1\xbf\xeb\xae\xf6\x9e\x6e\x5d\xd0\xc2\x9d\x53\x31\xe7\x2d\xb9\x2a\xfa\xf1\x3e\xe4\x20\xe8\x64\x4e\xe6\x3b\x00\x00\xff\xff\x77\xae\x51\x52\xe0\x01\x00\x00"

func stakingproxyStake_unstaked_tokensCdcBytes() ([]byte, error) {
	return bindataRead(
		_stakingproxyStake_unstaked_tokensCdc,
		"stakingProxy/stake_unstaked_tokens.cdc",
	)
}

func stakingproxyStake_unstaked_tokensCdc() (*asset, error) {
	bytes, err := stakingproxyStake_unstaked_tokensCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "stakingProxy/stake_unstaked_tokens.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x2b, 0x15, 0xbf, 0xec, 0x2c, 0xa1, 0xf, 0x8f, 0x26, 0xb9, 0x7f, 0x27, 0xf9, 0xf2, 0x13, 0xbe, 0xa, 0x44, 0x5f, 0x7f, 0x6b, 0x19, 0x18, 0xb2, 0xf7, 0x7, 0x6e, 0x41, 0x39, 0xf2, 0x8e, 0xf9}}
	return a, nil
}

var _stakingproxyUnstake_allCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\x90\x41\x6b\xfb\x30\x0c\xc5\xef\xfe\x14\xfa\xf7\xf0\x27\xb9\x94\x9d\xcb\xba\x12\xda\xb1\x95\x41\x1b\xea\x1d\xb6\xa3\x9b\xa8\x89\x99\x6b\x19\x45\x61\x2d\xa3\xdf\x7d\x78\x0e\x6d\xc6\x74\x31\x32\x92\xde\xef\x3d\x7b\x0c\xc4\x02\x5a\xcc\x87\xf5\x4d\xc9\x74\x3a\xc3\x81\xe9\x08\x77\x27\xfd\x5a\xbc\xac\x37\x4f\xe5\x6e\xfb\xf6\x5e\xac\x56\xbb\x47\xad\x95\x12\x36\xbe\x33\x95\x58\xf2\x99\xa7\x1a\xd7\xab\x19\x68\x61\xeb\x9b\x1c\xbe\x94\x02\x00\x08\x8c\xc1\x30\x66\xa6\xaa\xa8\xf7\x32\x83\xa2\x97\xb6\x48\x4d\x1c\x82\xa1\x1c\x0a\x84\x28\xf8\x4c\xae\x46\x86\x39\x0c\x1b\xd3\x3d\x31\xd3\xe7\xfd\xff\x31\xd5\x74\x43\x35\xc6\x0f\xe4\xf2\xb6\xf4\x90\x45\xd8\x19\xfc\x99\xdc\x06\x64\x23\xc4\x4b\x13\xcc\xde\x3a\x2b\x67\x2d\xc4\xa6\xc1\xd2\x48\x9b\x5f\x19\x62\x2d\x16\x10\x8c\xb7\x55\x36\x59\x52\xef\x6a\xf0\x24\x90\x08\x80\xf1\x80\x8c\xbe\x42\x10\x82\x2e\x69\x24\x66\x68\x7f\xf4\x27\xb9\xfa\xe5\xa7\x1b\xe7\x38\x1f\xdb\x1b\x4c\x8d\x41\xaf\x01\xa6\x37\xff\x77\xbb\x35\xbe\x33\xed\x7d\x6c\xb1\x70\x2e\x4b\xe4\x17\x75\x51\xdf\x01\x00\x00\xff\xff\x44\x15\xbb\x2b\xb9\x01\x00\x00"

func stakingproxyUnstake_allCdcBytes() ([]byte, error) {
	return bindataRead(
		_stakingproxyUnstake_allCdc,
		"stakingProxy/unstake_all.cdc",
	)
}

func stakingproxyUnstake_allCdc() (*asset, error) {
	bytes, err := stakingproxyUnstake_allCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "stakingProxy/unstake_all.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x4e, 0x22, 0xbf, 0xdd, 0x5d, 0x32, 0xc7, 0xd6, 0xbb, 0x36, 0xf6, 0xe, 0xd0, 0x40, 0xd0, 0xa2, 0x2c, 0x84, 0x49, 0xdd, 0x16, 0xbf, 0x84, 0xa3, 0xa0, 0xb1, 0x4a, 0xc8, 0x33, 0x23, 0xef, 0xa9}}
	return a, nil
}

var _stakingproxyWithdraw_rewardsCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\x90\x5d\x6b\xea\x40\x10\x86\xef\xf3\x2b\xe6\x78\x71\x48\xe0\x20\xe7\xa2\xf4\x42\x6a\x25\x68\x3f\xa4\xa0\xc1\x58\x68\x2f\xc7\xec\x68\x16\xe3\xce\x32\x19\x89\x52\xfc\xef\x25\x5d\xab\x29\x9d\x9b\x61\x77\xbe\x9e\xf7\xb5\x3b\xcf\xa2\x90\x2b\x6e\xad\xdb\x64\xc2\x87\x23\xac\x85\x77\xf0\xff\x90\x2f\xd3\x97\xe9\xec\x29\x5b\xcc\xdf\xde\xd3\xc9\x64\xf1\x90\xe7\x51\xa4\x82\xae\xc6\x42\x2d\xbb\xd8\xb1\xa1\xe9\x64\x00\xb9\x8a\x75\x9b\x7f\x80\x3b\xde\x3b\x1d\xc0\xeb\xa3\x3d\xdc\xde\x24\xf0\x11\x45\x00\x00\x5e\xc8\xa3\x50\x8c\x45\x11\xea\xe9\x5e\xcb\x34\x3c\xda\x26\x38\x47\x45\x0a\xbe\x05\x78\xe6\xca\x90\xc0\x10\xce\x13\xfd\x15\x8b\x70\x73\xf7\xb7\x4b\xd9\x9f\xb1\xa1\xf6\x83\x24\xbb\x0e\xdd\xc7\x2d\xfc\x00\x7e\x75\xce\x3d\x09\x2a\xcb\x18\x3d\xae\x6c\x65\xf5\x98\x2b\x0b\x6e\x28\x43\x2d\x93\x0b\x43\x1b\xa3\x11\x78\x74\xb6\x88\x7b\x63\xde\x57\x06\x1c\x2b\x04\x02\x10\x5a\x93\x90\x2b\x08\x94\xa1\x0e\x37\x02\x33\x94\x5f\xf7\x7b\x49\xf4\x43\x4f\xdd\xf5\x75\xd8\x95\x77\x16\xd5\x05\xbd\x18\x1a\x72\xf2\xe7\xba\xab\xbb\xa7\xdf\x58\x2d\x8d\x60\xb3\xa0\x06\xc5\x90\x59\xf2\x96\x5c\x1d\x7f\xdb\x1f\x72\xd0\x74\x8a\x4e\xd1\x67\x00\x00\x00\xff\xff\x3f\x35\x0b\xc5\xe3\x01\x00\x00"

func stakingproxyWithdraw_rewardsCdcBytes() ([]byte, error) {
	return bindataRead(
		_stakingproxyWithdraw_rewardsCdc,
		"stakingProxy/withdraw_rewards.cdc",
	)
}

func stakingproxyWithdraw_rewardsCdc() (*asset, error) {
	bytes, err := stakingproxyWithdraw_rewardsCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "stakingProxy/withdraw_rewards.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xe5, 0xb1, 0xc7, 0x2c, 0xab, 0x3c, 0x5b, 0xe5, 0xb1, 0xa4, 0x2e, 0xb, 0x7, 0xa6, 0x21, 0xff, 0x71, 0x28, 0x8f, 0x68, 0xb5, 0x96, 0x7, 0xf5, 0x2e, 0x1c, 0xf5, 0xc2, 0xcf, 0x22, 0xdb, 0xd3}}
	return a, nil
}

var _stakingproxyWithdraw_unstakedCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\x90\x4d\x6b\xf2\x40\x10\xc7\xef\xfb\x29\xe6\xf1\xf0\x90\x40\x91\x1e\x4a\x0f\x52\x2b\x41\xfb\x22\x05\x0d\x46\xa1\x3d\x8e\xc9\x68\x16\xe3\xce\x32\x19\x51\x29\x7e\xf7\x92\xae\xd5\x94\xce\x65\xd8\xd9\x79\xf9\xfd\xff\x76\xeb\x59\x14\x32\xc5\x8d\x75\xeb\x54\xf8\x70\x84\x95\xf0\x16\x6e\x0f\xd9\x3c\x79\x1b\x4f\x5e\xd2\xd9\xf4\xfd\x23\x19\x8d\x66\x4f\x59\x66\x8c\x0a\xba\x1a\x73\xb5\xec\x22\xc7\x05\x8d\x47\x3d\xc8\x54\xac\x5b\xdf\x00\x6e\x79\xe7\xb4\x07\x8b\x67\x7b\xb8\xbf\x8b\xe1\xd3\x18\x00\x00\x2f\xe4\x51\x28\xc2\x3c\x0f\xff\xc9\x4e\xcb\x24\x3c\x9a\x26\x38\x47\x45\x0a\xbe\x01\x78\xe5\xaa\x20\x81\x3e\x9c\x27\xba\x4b\x16\xe1\xfd\xc3\xff\x36\x65\x77\xc2\x05\x35\x05\x92\xf4\x3a\xf4\x18\x35\xf0\x3d\xf8\xd3\x39\xf5\x24\xa8\x2c\x43\xf4\xb8\xb4\x95\xd5\x63\xa6\x2c\xb8\xa6\x14\xb5\x8c\x2f\x0c\x4d\x0c\x06\xe0\xd1\xd9\x3c\xea\x0c\x79\x57\x15\xe0\x58\x21\x10\x80\xd0\x8a\x84\x5c\x4e\xa0\x0c\x75\xb8\x11\x98\xa1\xfc\xbe\xdf\x89\xcd\x2f\x3d\x75\xdb\xd7\x7e\x5b\xde\x59\x54\x1b\xf4\x62\x68\xc8\xf1\xbf\xeb\xae\xf6\x9e\xee\xde\x6a\x59\x08\xee\x17\xae\x29\x53\x31\xe7\x0d\xb9\x3a\xfa\xb1\x3f\xe4\xa0\xe9\x64\x4e\xe6\x2b\x00\x00\xff\xff\x10\x01\xbb\xeb\xe3\x01\x00\x00"

func stakingproxyWithdraw_unstakedCdcBytes() ([]byte, error) {
	return bindataRead(
		_stakingproxyWithdraw_unstakedCdc,
		"stakingProxy/withdraw_unstaked.cdc",
	)
}

func stakingproxyWithdraw_unstakedCdc() (*asset, error) {
	bytes, err := stakingproxyWithdraw_unstakedCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "stakingProxy/withdraw_unstaked.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xe2, 0xf, 0x29, 0xf5, 0x62, 0x4a, 0xb5, 0x57, 0xd8, 0x30, 0x56, 0xc8, 0xbd, 0xe9, 0x8c, 0x9d, 0x40, 0x3, 0xa3, 0x63, 0xca, 0xca, 0x56, 0x54, 0x8d, 0x6c, 0x8c, 0x8b, 0x40, 0x53, 0xa1, 0xe3}}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// AssetString returns the asset contents as a string (instead of a []byte).
func AssetString(name string) (string, error) {
	data, err := Asset(name)
	return string(data), err
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// MustAssetString is like AssetString but panics when Asset would return an
// error. It simplifies safe initialization of global variables.
func MustAssetString(name string) string {
	return string(MustAsset(name))
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetDigest returns the digest of the file with the given name. It returns an
// error if the asset could not be found or the digest could not be loaded.
func AssetDigest(name string) ([sha256.Size]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s can't read by error: %v", name, err)
		}
		return a.digest, nil
	}
	return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s not found", name)
}

// Digests returns a map of all known files and their checksums.
func Digests() (map[string][sha256.Size]byte, error) {
	mp := make(map[string][sha256.Size]byte, len(_bindata))
	for name := range _bindata {
		a, err := _bindata[name]()
		if err != nil {
			return nil, err
		}
		mp[name] = a.digest
	}
	return mp, nil
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"FlowServiceAccount/get_account_creators.cdc":                             flowserviceaccountGet_account_creatorsCdc,
	"FlowServiceAccount/get_account_fee.cdc":                                  flowserviceaccountGet_account_feeCdc,
	"FlowServiceAccount/get_tx_fee.cdc":                                       flowserviceaccountGet_tx_feeCdc,
	"flowToken/burn_tokens.cdc":                                               flowtokenBurn_tokensCdc,
	"flowToken/create_forwarder.cdc":                                          flowtokenCreate_forwarderCdc,
	"flowToken/mint_tokens.cdc":                                               flowtokenMint_tokensCdc,
	"flowToken/scripts/get_balance.cdc":                                       flowtokenScriptsGet_balanceCdc,
	"flowToken/scripts/get_supply.cdc":                                        flowtokenScriptsGet_supplyCdc,
	"flowToken/setup_account.cdc":                                             flowtokenSetup_accountCdc,
	"flowToken/transfer_tokens.cdc":                                           flowtokenTransfer_tokensCdc,
	"idTableStaking/admin/change_cut.cdc":                                     idtablestakingAdminChange_cutCdc,
	"idTableStaking/admin/change_minimums.cdc":                                idtablestakingAdminChange_minimumsCdc,
	"idTableStaking/admin/change_payout.cdc":                                  idtablestakingAdminChange_payoutCdc,
	"idTableStaking/admin/end_epoch.cdc":                                      idtablestakingAdminEnd_epochCdc,
	"idTableStaking/admin/end_epoch_change_payout.cdc":                        idtablestakingAdminEnd_epoch_change_payoutCdc,
	"idTableStaking/admin/end_staking.cdc":                                    idtablestakingAdminEnd_stakingCdc,
	"idTableStaking/admin/move_tokens.cdc":                                    idtablestakingAdminMove_tokensCdc,
	"idTableStaking/admin/pay_rewards.cdc":                                    idtablestakingAdminPay_rewardsCdc,
	"idTableStaking/admin/remove_node.cdc":                                    idtablestakingAdminRemove_nodeCdc,
	"idTableStaking/admin/transfer_minter_deploy.cdc":                         idtablestakingAdminTransfer_minter_deployCdc,
	"idTableStaking/delegation/del_request_unstaking.cdc":                     idtablestakingDelegationDel_request_unstakingCdc,
	"idTableStaking/delegation/del_stake_new_tokens.cdc":                      idtablestakingDelegationDel_stake_new_tokensCdc,
	"idTableStaking/delegation/del_stake_rewarded.cdc":                        idtablestakingDelegationDel_stake_rewardedCdc,
	"idTableStaking/delegation/del_stake_unstaked.cdc":                        idtablestakingDelegationDel_stake_unstakedCdc,
	"idTableStaking/delegation/del_withdraw_reward_tokens.cdc":                idtablestakingDelegationDel_withdraw_reward_tokensCdc,
	"idTableStaking/delegation/del_withdraw_unstaked_tokens.cdc":              idtablestakingDelegationDel_withdraw_unstaked_tokensCdc,
	"idTableStaking/delegation/get_delegator_committed.cdc":                   idtablestakingDelegationGet_delegator_committedCdc,
	"idTableStaking/delegation/get_delegator_info.cdc":                        idtablestakingDelegationGet_delegator_infoCdc,
	"idTableStaking/delegation/get_delegator_info_from_address.cdc":           idtablestakingDelegationGet_delegator_info_from_addressCdc,
	"idTableStaking/delegation/get_delegator_request.cdc":                     idtablestakingDelegationGet_delegator_requestCdc,
	"idTableStaking/delegation/get_delegator_rewarded.cdc":                    idtablestakingDelegationGet_delegator_rewardedCdc,
	"idTableStaking/delegation/get_delegator_staked.cdc":                      idtablestakingDelegationGet_delegator_stakedCdc,
	"idTableStaking/delegation/get_delegator_unstaked.cdc":                    idtablestakingDelegationGet_delegator_unstakedCdc,
	"idTableStaking/delegation/get_delegator_unstaking.cdc":                   idtablestakingDelegationGet_delegator_unstakingCdc,
	"idTableStaking/delegation/get_delegator_unstaking_request.cdc":           idtablestakingDelegationGet_delegator_unstaking_requestCdc,
	"idTableStaking/delegation/register_delegator.cdc":                        idtablestakingDelegationRegister_delegatorCdc,
	"idTableStaking/delegation/register_many_delegators.cdc":                  idtablestakingDelegationRegister_many_delegatorsCdc,
	"idTableStaking/node/register_many_nodes.cdc":                             idtablestakingNodeRegister_many_nodesCdc,
	"idTableStaking/node/register_node.cdc":                                   idtablestakingNodeRegister_nodeCdc,
	"idTableStaking/node/request_unstake.cdc":                                 idtablestakingNodeRequest_unstakeCdc,
	"idTableStaking/node/stake_new_tokens.cdc":                                idtablestakingNodeStake_new_tokensCdc,
	"idTableStaking/node/stake_rewarded_tokens.cdc":                           idtablestakingNodeStake_rewarded_tokensCdc,
	"idTableStaking/node/stake_unstaked_tokens.cdc":                           idtablestakingNodeStake_unstaked_tokensCdc,
	"idTableStaking/node/unstake_all.cdc":                                     idtablestakingNodeUnstake_allCdc,
	"idTableStaking/node/withdraw_reward_tokens.cdc":                          idtablestakingNodeWithdraw_reward_tokensCdc,
	"idTableStaking/node/withdraw_unstaked_tokens.cdc":                        idtablestakingNodeWithdraw_unstaked_tokensCdc,
	"idTableStaking/node_add_capability.cdc":                                  idtablestakingNode_add_capabilityCdc,
	"idTableStaking/scripts/get_current_table.cdc":                            idtablestakingScriptsGet_current_tableCdc,
	"idTableStaking/scripts/get_cut_percentage.cdc":                           idtablestakingScriptsGet_cut_percentageCdc,
	"idTableStaking/scripts/get_node_committed_tokens.cdc":                    idtablestakingScriptsGet_node_committed_tokensCdc,
	"idTableStaking/scripts/get_node_info.cdc":                                idtablestakingScriptsGet_node_infoCdc,
	"idTableStaking/scripts/get_node_info_from_address.cdc":                   idtablestakingScriptsGet_node_info_from_addressCdc,
	"idTableStaking/scripts/get_node_initial_weight.cdc":                      idtablestakingScriptsGet_node_initial_weightCdc,
	"idTableStaking/scripts/get_node_networking_addr.cdc":                     idtablestakingScriptsGet_node_networking_addrCdc,
	"idTableStaking/scripts/get_node_networking_key.cdc":                      idtablestakingScriptsGet_node_networking_keyCdc,
	"idTableStaking/scripts/get_node_rewarded_tokens.cdc":                     idtablestakingScriptsGet_node_rewarded_tokensCdc,
	"idTableStaking/scripts/get_node_role.cdc":                                idtablestakingScriptsGet_node_roleCdc,
	"idTableStaking/scripts/get_node_staked_tokens.cdc":                       idtablestakingScriptsGet_node_staked_tokensCdc,
	"idTableStaking/scripts/get_node_staking_key.cdc":                         idtablestakingScriptsGet_node_staking_keyCdc,
	"idTableStaking/scripts/get_node_total_commitment.cdc":                    idtablestakingScriptsGet_node_total_commitmentCdc,
	"idTableStaking/scripts/get_node_total_commitment_without_delegators.cdc": idtablestakingScriptsGet_node_total_commitment_without_delegatorsCdc,
	"idTableStaking/scripts/get_node_type_ratio.cdc":                          idtablestakingScriptsGet_node_type_ratioCdc,
	"idTableStaking/scripts/get_node_unstaked_tokens.cdc":                     idtablestakingScriptsGet_node_unstaked_tokensCdc,
	"idTableStaking/scripts/get_node_unstaking_request.cdc":                   idtablestakingScriptsGet_node_unstaking_requestCdc,
	"idTableStaking/scripts/get_node_unstaking_tokens.cdc":                    idtablestakingScriptsGet_node_unstaking_tokensCdc,
	"idTableStaking/scripts/get_proposed_table.cdc":                           idtablestakingScriptsGet_proposed_tableCdc,
	"idTableStaking/scripts/get_stake_requirements.cdc":                       idtablestakingScriptsGet_stake_requirementsCdc,
	"idTableStaking/scripts/get_table.cdc":                                    idtablestakingScriptsGet_tableCdc,
	"idTableStaking/scripts/get_total_staked.cdc":                             idtablestakingScriptsGet_total_stakedCdc,
	"idTableStaking/scripts/get_total_staked_by_type.cdc":                     idtablestakingScriptsGet_total_staked_by_typeCdc,
	"idTableStaking/scripts/get_weekly_payout.cdc":                            idtablestakingScriptsGet_weekly_payoutCdc,
	"inspect_field.cdc":                                                       inspect_fieldCdc,
	"lockedTokens/admin/admin_create_shared_accounts.cdc":                     lockedtokensAdminAdmin_create_shared_accountsCdc,
	"lockedTokens/admin/admin_deploy_contract.cdc":                            lockedtokensAdminAdmin_deploy_contractCdc,
	"lockedTokens/admin/admin_deposit_account_creator.cdc":                    lockedtokensAdminAdmin_deposit_account_creatorCdc,
	"lockedTokens/admin/check_main_registration.cdc":                          lockedtokensAdminCheck_main_registrationCdc,
	"lockedTokens/admin/check_shared_registration.cdc":                        lockedtokensAdminCheck_shared_registrationCdc,
	"lockedTokens/admin/custody_create_account_with_lease_account.cdc":        lockedtokensAdminCustody_create_account_with_lease_accountCdc,
	"lockedTokens/admin/custody_create_only_lease_account.cdc":                lockedtokensAdminCustody_create_only_lease_accountCdc,
	"lockedTokens/admin/custody_create_only_shared_account.cdc":               lockedtokensAdminCustody_create_only_shared_accountCdc,
	"lockedTokens/admin/custody_create_shared_accounts.cdc":                   lockedtokensAdminCustody_create_shared_accountsCdc,
	"lockedTokens/admin/custody_setup_account_creator.cdc":                    lockedtokensAdminCustody_setup_account_creatorCdc,
	"lockedTokens/admin/deposit_locked_tokens.cdc":                            lockedtokensAdminDeposit_locked_tokensCdc,
	"lockedTokens/admin/unlock_tokens.cdc":                                    lockedtokensAdminUnlock_tokensCdc,
	"lockedTokens/delegator/delegate_new_tokens.cdc":                          lockedtokensDelegatorDelegate_new_tokensCdc,
	"lockedTokens/delegator/delegate_rewarded_tokens.cdc":                     lockedtokensDelegatorDelegate_rewarded_tokensCdc,
	"lockedTokens/delegator/delegate_unstaked_tokens.cdc":                     lockedtokensDelegatorDelegate_unstaked_tokensCdc,
	"lockedTokens/delegator/get_delegator_id.cdc":                             lockedtokensDelegatorGet_delegator_idCdc,
	"lockedTokens/delegator/get_delegator_info.cdc":                           lockedtokensDelegatorGet_delegator_infoCdc,
	"lockedTokens/delegator/get_delegator_node_id.cdc":                        lockedtokensDelegatorGet_delegator_node_idCdc,
	"lockedTokens/delegator/register_delegator.cdc":                           lockedtokensDelegatorRegister_delegatorCdc,
	"lockedTokens/delegator/request_unstaking.cdc":                            lockedtokensDelegatorRequest_unstakingCdc,
	"lockedTokens/delegator/withdraw_rewarded_tokens.cdc":                     lockedtokensDelegatorWithdraw_rewarded_tokensCdc,
	"lockedTokens/delegator/withdraw_rewarded_tokens_locked.cdc":              lockedtokensDelegatorWithdraw_rewarded_tokens_lockedCdc,
	"lockedTokens/delegator/withdraw_unstaked_tokens.cdc":                     lockedtokensDelegatorWithdraw_unstaked_tokensCdc,
	"lockedTokens/staker/get_node_id.cdc":                                     lockedtokensStakerGet_node_idCdc,
	"lockedTokens/staker/get_staker_info.cdc":                                 lockedtokensStakerGet_staker_infoCdc,
	"lockedTokens/staker/register_node.cdc":                                   lockedtokensStakerRegister_nodeCdc,
	"lockedTokens/staker/request_unstaking.cdc":                               lockedtokensStakerRequest_unstakingCdc,
	"lockedTokens/staker/stake_new_tokens.cdc":                                lockedtokensStakerStake_new_tokensCdc,
	"lockedTokens/staker/stake_rewarded_tokens.cdc":                           lockedtokensStakerStake_rewarded_tokensCdc,
	"lockedTokens/staker/stake_unstaked_tokens.cdc":                           lockedtokensStakerStake_unstaked_tokensCdc,
	"lockedTokens/staker/unstake_all.cdc":                                     lockedtokensStakerUnstake_allCdc,
	"lockedTokens/staker/withdraw_rewarded_tokens.cdc":                        lockedtokensStakerWithdraw_rewarded_tokensCdc,
	"lockedTokens/staker/withdraw_rewarded_tokens_locked.cdc":                 lockedtokensStakerWithdraw_rewarded_tokens_lockedCdc,
	"lockedTokens/staker/withdraw_unstaked_tokens.cdc":                        lockedtokensStakerWithdraw_unstaked_tokensCdc,
	"lockedTokens/user/deposit_tokens.cdc":                                    lockedtokensUserDeposit_tokensCdc,
	"lockedTokens/user/get_locked_account_address.cdc":                        lockedtokensUserGet_locked_account_addressCdc,
	"lockedTokens/user/get_locked_account_balance.cdc":                        lockedtokensUserGet_locked_account_balanceCdc,
	"lockedTokens/user/get_unlock_limit.cdc":                                  lockedtokensUserGet_unlock_limitCdc,
	"lockedTokens/user/withdraw_tokens.cdc":                                   lockedtokensUserWithdraw_tokensCdc,
	"stakingProxy/add_node_info.cdc":                                          stakingproxyAdd_node_infoCdc,
	"stakingProxy/get_node_info.cdc":                                          stakingproxyGet_node_infoCdc,
	"stakingProxy/register_node.cdc":                                          stakingproxyRegister_nodeCdc,
	"stakingProxy/remove_node_info.cdc":                                       stakingproxyRemove_node_infoCdc,
	"stakingProxy/remove_staking_proxy.cdc":                                   stakingproxyRemove_staking_proxyCdc,
	"stakingProxy/request_unstaking.cdc":                                      stakingproxyRequest_unstakingCdc,
	"stakingProxy/setup_node_account.cdc":                                     stakingproxySetup_node_accountCdc,
	"stakingProxy/stake_new_tokens.cdc":                                       stakingproxyStake_new_tokensCdc,
	"stakingProxy/stake_unstaked_tokens.cdc":                                  stakingproxyStake_unstaked_tokensCdc,
	"stakingProxy/unstake_all.cdc":                                            stakingproxyUnstake_allCdc,
	"stakingProxy/withdraw_rewards.cdc":                                       stakingproxyWithdraw_rewardsCdc,
	"stakingProxy/withdraw_unstaked.cdc":                                      stakingproxyWithdraw_unstakedCdc,
}

// AssetDebug is true if the assets were built with the debug flag enabled.
const AssetDebug = false

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"},
// AssetDir("data/img") would return []string{"a.png", "b.png"},
// AssetDir("foo.txt") and AssetDir("notexist") would return an error, and
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		canonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(canonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"FlowServiceAccount": {nil, map[string]*bintree{
		"get_account_creators.cdc": {flowserviceaccountGet_account_creatorsCdc, map[string]*bintree{}},
		"get_account_fee.cdc": {flowserviceaccountGet_account_feeCdc, map[string]*bintree{}},
		"get_tx_fee.cdc": {flowserviceaccountGet_tx_feeCdc, map[string]*bintree{}},
	}},
	"flowToken": {nil, map[string]*bintree{
		"burn_tokens.cdc": {flowtokenBurn_tokensCdc, map[string]*bintree{}},
		"create_forwarder.cdc": {flowtokenCreate_forwarderCdc, map[string]*bintree{}},
		"mint_tokens.cdc": {flowtokenMint_tokensCdc, map[string]*bintree{}},
		"scripts": {nil, map[string]*bintree{
			"get_balance.cdc": {flowtokenScriptsGet_balanceCdc, map[string]*bintree{}},
			"get_supply.cdc": {flowtokenScriptsGet_supplyCdc, map[string]*bintree{}},
		}},
		"setup_account.cdc": {flowtokenSetup_accountCdc, map[string]*bintree{}},
		"transfer_tokens.cdc": {flowtokenTransfer_tokensCdc, map[string]*bintree{}},
	}},
	"idTableStaking": {nil, map[string]*bintree{
		"admin": {nil, map[string]*bintree{
			"change_cut.cdc": {idtablestakingAdminChange_cutCdc, map[string]*bintree{}},
			"change_minimums.cdc": {idtablestakingAdminChange_minimumsCdc, map[string]*bintree{}},
			"change_payout.cdc": {idtablestakingAdminChange_payoutCdc, map[string]*bintree{}},
			"end_epoch.cdc": {idtablestakingAdminEnd_epochCdc, map[string]*bintree{}},
			"end_epoch_change_payout.cdc": {idtablestakingAdminEnd_epoch_change_payoutCdc, map[string]*bintree{}},
			"end_staking.cdc": {idtablestakingAdminEnd_stakingCdc, map[string]*bintree{}},
			"move_tokens.cdc": {idtablestakingAdminMove_tokensCdc, map[string]*bintree{}},
			"pay_rewards.cdc": {idtablestakingAdminPay_rewardsCdc, map[string]*bintree{}},
			"remove_node.cdc": {idtablestakingAdminRemove_nodeCdc, map[string]*bintree{}},
			"transfer_minter_deploy.cdc": {idtablestakingAdminTransfer_minter_deployCdc, map[string]*bintree{}},
		}},
		"delegation": {nil, map[string]*bintree{
			"del_request_unstaking.cdc": {idtablestakingDelegationDel_request_unstakingCdc, map[string]*bintree{}},
			"del_stake_new_tokens.cdc": {idtablestakingDelegationDel_stake_new_tokensCdc, map[string]*bintree{}},
			"del_stake_rewarded.cdc": {idtablestakingDelegationDel_stake_rewardedCdc, map[string]*bintree{}},
			"del_stake_unstaked.cdc": {idtablestakingDelegationDel_stake_unstakedCdc, map[string]*bintree{}},
			"del_withdraw_reward_tokens.cdc": {idtablestakingDelegationDel_withdraw_reward_tokensCdc, map[string]*bintree{}},
			"del_withdraw_unstaked_tokens.cdc": {idtablestakingDelegationDel_withdraw_unstaked_tokensCdc, map[string]*bintree{}},
			"get_delegator_committed.cdc": {idtablestakingDelegationGet_delegator_committedCdc, map[string]*bintree{}},
			"get_delegator_info.cdc": {idtablestakingDelegationGet_delegator_infoCdc, map[string]*bintree{}},
			"get_delegator_info_from_address.cdc": {idtablestakingDelegationGet_delegator_info_from_addressCdc, map[string]*bintree{}},
			"get_delegator_request.cdc": {idtablestakingDelegationGet_delegator_requestCdc, map[string]*bintree{}},
			"get_delegator_rewarded.cdc": {idtablestakingDelegationGet_delegator_rewardedCdc, map[string]*bintree{}},
			"get_delegator_staked.cdc": {idtablestakingDelegationGet_delegator_stakedCdc, map[string]*bintree{}},
			"get_delegator_unstaked.cdc": {idtablestakingDelegationGet_delegator_unstakedCdc, map[string]*bintree{}},
			"get_delegator_unstaking.cdc": {idtablestakingDelegationGet_delegator_unstakingCdc, map[string]*bintree{}},
			"get_delegator_unstaking_request.cdc": {idtablestakingDelegationGet_delegator_unstaking_requestCdc, map[string]*bintree{}},
			"register_delegator.cdc": {idtablestakingDelegationRegister_delegatorCdc, map[string]*bintree{}},
			"register_many_delegators.cdc": {idtablestakingDelegationRegister_many_delegatorsCdc, map[string]*bintree{}},
		}},
		"node": {nil, map[string]*bintree{
			"register_many_nodes.cdc": {idtablestakingNodeRegister_many_nodesCdc, map[string]*bintree{}},
			"register_node.cdc": {idtablestakingNodeRegister_nodeCdc, map[string]*bintree{}},
			"request_unstake.cdc": {idtablestakingNodeRequest_unstakeCdc, map[string]*bintree{}},
			"stake_new_tokens.cdc": {idtablestakingNodeStake_new_tokensCdc, map[string]*bintree{}},
			"stake_rewarded_tokens.cdc": {idtablestakingNodeStake_rewarded_tokensCdc, map[string]*bintree{}},
			"stake_unstaked_tokens.cdc": {idtablestakingNodeStake_unstaked_tokensCdc, map[string]*bintree{}},
			"unstake_all.cdc": {idtablestakingNodeUnstake_allCdc, map[string]*bintree{}},
			"withdraw_reward_tokens.cdc": {idtablestakingNodeWithdraw_reward_tokensCdc, map[string]*bintree{}},
			"withdraw_unstaked_tokens.cdc": {idtablestakingNodeWithdraw_unstaked_tokensCdc, map[string]*bintree{}},
		}},
		"node_add_capability.cdc": {idtablestakingNode_add_capabilityCdc, map[string]*bintree{}},
		"scripts": {nil, map[string]*bintree{
			"get_current_table.cdc": {idtablestakingScriptsGet_current_tableCdc, map[string]*bintree{}},
			"get_cut_percentage.cdc": {idtablestakingScriptsGet_cut_percentageCdc, map[string]*bintree{}},
			"get_node_committed_tokens.cdc": {idtablestakingScriptsGet_node_committed_tokensCdc, map[string]*bintree{}},
			"get_node_info.cdc": {idtablestakingScriptsGet_node_infoCdc, map[string]*bintree{}},
			"get_node_info_from_address.cdc": {idtablestakingScriptsGet_node_info_from_addressCdc, map[string]*bintree{}},
			"get_node_initial_weight.cdc": {idtablestakingScriptsGet_node_initial_weightCdc, map[string]*bintree{}},
			"get_node_networking_addr.cdc": {idtablestakingScriptsGet_node_networking_addrCdc, map[string]*bintree{}},
			"get_node_networking_key.cdc": {idtablestakingScriptsGet_node_networking_keyCdc, map[string]*bintree{}},
			"get_node_rewarded_tokens.cdc": {idtablestakingScriptsGet_node_rewarded_tokensCdc, map[string]*bintree{}},
			"get_node_role.cdc": {idtablestakingScriptsGet_node_roleCdc, map[string]*bintree{}},
			"get_node_staked_tokens.cdc": {idtablestakingScriptsGet_node_staked_tokensCdc, map[string]*bintree{}},
			"get_node_staking_key.cdc": {idtablestakingScriptsGet_node_staking_keyCdc, map[string]*bintree{}},
			"get_node_total_commitment.cdc": {idtablestakingScriptsGet_node_total_commitmentCdc, map[string]*bintree{}},
			"get_node_total_commitment_without_delegators.cdc": {idtablestakingScriptsGet_node_total_commitment_without_delegatorsCdc, map[string]*bintree{}},
			"get_node_type_ratio.cdc": {idtablestakingScriptsGet_node_type_ratioCdc, map[string]*bintree{}},
			"get_node_unstaked_tokens.cdc": {idtablestakingScriptsGet_node_unstaked_tokensCdc, map[string]*bintree{}},
			"get_node_unstaking_request.cdc": {idtablestakingScriptsGet_node_unstaking_requestCdc, map[string]*bintree{}},
			"get_node_unstaking_tokens.cdc": {idtablestakingScriptsGet_node_unstaking_tokensCdc, map[string]*bintree{}},
			"get_proposed_table.cdc": {idtablestakingScriptsGet_proposed_tableCdc, map[string]*bintree{}},
			"get_stake_requirements.cdc": {idtablestakingScriptsGet_stake_requirementsCdc, map[string]*bintree{}},
			"get_table.cdc": {idtablestakingScriptsGet_tableCdc, map[string]*bintree{}},
			"get_total_staked.cdc": {idtablestakingScriptsGet_total_stakedCdc, map[string]*bintree{}},
			"get_total_staked_by_type.cdc": {idtablestakingScriptsGet_total_staked_by_typeCdc, map[string]*bintree{}},
			"get_weekly_payout.cdc": {idtablestakingScriptsGet_weekly_payoutCdc, map[string]*bintree{}},
		}},
	}},
	"inspect_field.cdc": {inspect_fieldCdc, map[string]*bintree{}},
	"lockedTokens": {nil, map[string]*bintree{
		"admin": {nil, map[string]*bintree{
			"admin_create_shared_accounts.cdc": {lockedtokensAdminAdmin_create_shared_accountsCdc, map[string]*bintree{}},
			"admin_deploy_contract.cdc": {lockedtokensAdminAdmin_deploy_contractCdc, map[string]*bintree{}},
			"admin_deposit_account_creator.cdc": {lockedtokensAdminAdmin_deposit_account_creatorCdc, map[string]*bintree{}},
			"check_main_registration.cdc": {lockedtokensAdminCheck_main_registrationCdc, map[string]*bintree{}},
			"check_shared_registration.cdc": {lockedtokensAdminCheck_shared_registrationCdc, map[string]*bintree{}},
			"custody_create_account_with_lease_account.cdc": {lockedtokensAdminCustody_create_account_with_lease_accountCdc, map[string]*bintree{}},
			"custody_create_only_lease_account.cdc": {lockedtokensAdminCustody_create_only_lease_accountCdc, map[string]*bintree{}},
			"custody_create_only_shared_account.cdc": {lockedtokensAdminCustody_create_only_shared_accountCdc, map[string]*bintree{}},
			"custody_create_shared_accounts.cdc": {lockedtokensAdminCustody_create_shared_accountsCdc, map[string]*bintree{}},
			"custody_setup_account_creator.cdc": {lockedtokensAdminCustody_setup_account_creatorCdc, map[string]*bintree{}},
			"deposit_locked_tokens.cdc": {lockedtokensAdminDeposit_locked_tokensCdc, map[string]*bintree{}},
			"unlock_tokens.cdc": {lockedtokensAdminUnlock_tokensCdc, map[string]*bintree{}},
		}},
		"delegator": {nil, map[string]*bintree{
			"delegate_new_tokens.cdc": {lockedtokensDelegatorDelegate_new_tokensCdc, map[string]*bintree{}},
			"delegate_rewarded_tokens.cdc": {lockedtokensDelegatorDelegate_rewarded_tokensCdc, map[string]*bintree{}},
			"delegate_unstaked_tokens.cdc": {lockedtokensDelegatorDelegate_unstaked_tokensCdc, map[string]*bintree{}},
			"get_delegator_id.cdc": {lockedtokensDelegatorGet_delegator_idCdc, map[string]*bintree{}},
			"get_delegator_info.cdc": {lockedtokensDelegatorGet_delegator_infoCdc, map[string]*bintree{}},
			"get_delegator_node_id.cdc": {lockedtokensDelegatorGet_delegator_node_idCdc, map[string]*bintree{}},
			"register_delegator.cdc": {lockedtokensDelegatorRegister_delegatorCdc, map[string]*bintree{}},
			"request_unstaking.cdc": {lockedtokensDelegatorRequest_unstakingCdc, map[string]*bintree{}},
			"withdraw_rewarded_tokens.cdc": {lockedtokensDelegatorWithdraw_rewarded_tokensCdc, map[string]*bintree{}},
			"withdraw_rewarded_tokens_locked.cdc": {lockedtokensDelegatorWithdraw_rewarded_tokens_lockedCdc, map[string]*bintree{}},
			"withdraw_unstaked_tokens.cdc": {lockedtokensDelegatorWithdraw_unstaked_tokensCdc, map[string]*bintree{}},
		}},
		"staker": {nil, map[string]*bintree{
			"get_node_id.cdc": {lockedtokensStakerGet_node_idCdc, map[string]*bintree{}},
			"get_staker_info.cdc": {lockedtokensStakerGet_staker_infoCdc, map[string]*bintree{}},
			"register_node.cdc": {lockedtokensStakerRegister_nodeCdc, map[string]*bintree{}},
			"request_unstaking.cdc": {lockedtokensStakerRequest_unstakingCdc, map[string]*bintree{}},
			"stake_new_tokens.cdc": {lockedtokensStakerStake_new_tokensCdc, map[string]*bintree{}},
			"stake_rewarded_tokens.cdc": {lockedtokensStakerStake_rewarded_tokensCdc, map[string]*bintree{}},
			"stake_unstaked_tokens.cdc": {lockedtokensStakerStake_unstaked_tokensCdc, map[string]*bintree{}},
			"unstake_all.cdc": {lockedtokensStakerUnstake_allCdc, map[string]*bintree{}},
			"withdraw_rewarded_tokens.cdc": {lockedtokensStakerWithdraw_rewarded_tokensCdc, map[string]*bintree{}},
			"withdraw_rewarded_tokens_locked.cdc": {lockedtokensStakerWithdraw_rewarded_tokens_lockedCdc, map[string]*bintree{}},
			"withdraw_unstaked_tokens.cdc": {lockedtokensStakerWithdraw_unstaked_tokensCdc, map[string]*bintree{}},
		}},
		"user": {nil, map[string]*bintree{
			"deposit_tokens.cdc": {lockedtokensUserDeposit_tokensCdc, map[string]*bintree{}},
			"get_locked_account_address.cdc": {lockedtokensUserGet_locked_account_addressCdc, map[string]*bintree{}},
			"get_locked_account_balance.cdc": {lockedtokensUserGet_locked_account_balanceCdc, map[string]*bintree{}},
			"get_unlock_limit.cdc": {lockedtokensUserGet_unlock_limitCdc, map[string]*bintree{}},
			"withdraw_tokens.cdc": {lockedtokensUserWithdraw_tokensCdc, map[string]*bintree{}},
		}},
	}},
	"stakingProxy": {nil, map[string]*bintree{
		"add_node_info.cdc": {stakingproxyAdd_node_infoCdc, map[string]*bintree{}},
		"get_node_info.cdc": {stakingproxyGet_node_infoCdc, map[string]*bintree{}},
		"register_node.cdc": {stakingproxyRegister_nodeCdc, map[string]*bintree{}},
		"remove_node_info.cdc": {stakingproxyRemove_node_infoCdc, map[string]*bintree{}},
		"remove_staking_proxy.cdc": {stakingproxyRemove_staking_proxyCdc, map[string]*bintree{}},
		"request_unstaking.cdc": {stakingproxyRequest_unstakingCdc, map[string]*bintree{}},
		"setup_node_account.cdc": {stakingproxySetup_node_accountCdc, map[string]*bintree{}},
		"stake_new_tokens.cdc": {stakingproxyStake_new_tokensCdc, map[string]*bintree{}},
		"stake_unstaked_tokens.cdc": {stakingproxyStake_unstaked_tokensCdc, map[string]*bintree{}},
		"unstake_all.cdc": {stakingproxyUnstake_allCdc, map[string]*bintree{}},
		"withdraw_rewards.cdc": {stakingproxyWithdraw_rewardsCdc, map[string]*bintree{}},
		"withdraw_unstaked.cdc": {stakingproxyWithdraw_unstakedCdc, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory.
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	return os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
}

// RestoreAssets restores an asset under the given directory recursively.
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(canonicalName, "/")...)...)
}
